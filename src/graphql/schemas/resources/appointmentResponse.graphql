# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import Appointment from "../resources/appointment.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Patient from "../resources/patient.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import RelatedPerson from "../resources/relatedPerson.graphql"
# import Device from "../resources/device.graphql"
# import HealthcareService from "../resources/healthcareService.graphql"
# import Location from "../resources/location.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"

union AppointmentResponseActor = Patient | Practitioner | PractitionerRole | RelatedPerson | Device | HealthcareService | Location


type AppointmentResponse {
        id_: code            
        meta: Meta            
        implicitRules: code            
        language: code            
        text: Narrative            
        contained: [code]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        appointment: Appointment!            
        start: code            
        end: code            
        participantType: [CodeableConcept]            
        actor: AppointmentResponseActor            
        participantStatus: code!            
        comment: code            
}

extend type Query {
    appointmentResponse(id: String): [AppointmentResponse]
}