# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import code from "../simple_types/code.graphql"
# import ObservationDefinitionQuantitativeDetails from "../backbone_elements/observationDefinitionQuantitativeDetails.graphql"
# import ObservationDefinitionQualifiedInterval from "../backbone_elements/observationDefinitionQualifiedInterval.graphql"
# import ValueSet from "../resources/valueSet.graphql"
# import ValueSet from "../resources/valueSet.graphql"
# import ValueSet from "../resources/valueSet.graphql"
# import ValueSet from "../resources/valueSet.graphql"



type ObservationDefinition {
        id_: code            
        meta: Meta            
        implicitRules: code            
        language: code            
        text: Narrative            
        contained: [code]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        category: [CodeableConcept]            
        code: CodeableConcept!            
        identifier: [Identifier]            
        permittedDataType: [code]            
        multipleResultsAllowed: code            
        method: CodeableConcept            
        preferredReportName: code            
        quantitativeDetails: ObservationDefinitionQuantitativeDetails            
        qualifiedInterval: [ObservationDefinitionQualifiedInterval]            
        validCodedValueSet: ValueSet            
        normalCodedValueSet: ValueSet            
        abnormalCodedValueSet: ValueSet            
        criticalCodedValueSet: ValueSet            
}

extend type Query {
    observationDefinition(id: String): [ObservationDefinition]
}