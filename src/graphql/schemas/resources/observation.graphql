# This file is auto-generated by generate_classes so do not edit manually
# import id from "../simple_types/id.graphql"
# import Meta from "../complex_types/meta.graphql"
# import uri from "../simple_types/uri.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import ResourceContainer from "../simple_types/ResourceContainer.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import Reference from "../complex_types/reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Reference from "../complex_types/reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import Period from "../complex_types/period.graphql"
# import Timing from "../backbone_elements/backbone_element.graphql"
# import instant from "../simple_types/instant.graphql"
# import instant from "../simple_types/instant.graphql"
# import Reference from "../complex_types/reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Range from "../complex_types/range.graphql"
# import Ratio from "../complex_types/ratio.graphql"
# import SampledData from "../complex_types/sampledData.graphql"
# import time from "../simple_types/time.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import Period from "../complex_types/period.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Annotation from "../complex_types/annotation.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Reference from "../complex_types/reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import ObservationReferenceRange from "../backbone_elements/backbone_element.graphql"
# import Reference from "../complex_types/reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import ObservationComponent from "../backbone_elements/backbone_element.graphql"

union ObservationBasedOn = CarePlan | DeviceRequest | ImmunizationRecommendation | MedicationRequest | NutritionOrder | ServiceRequest
union ObservationPartOf = MedicationAdministration | MedicationDispense | MedicationStatement | Procedure | Immunization | ImagingStudy
union ObservationSubject = Patient | Group | Device | Location
union ObservationPerformer = Practitioner | PractitionerRole | Organization | CareTeam | Patient | RelatedPerson
union ObservationDevice = Device | DeviceMetric
union ObservationHasMember = Observation | QuestionnaireResponse | MolecularSequence
union ObservationDerivedFrom = DocumentReference | ImagingStudy | Media | QuestionnaireResponse | Observation | MolecularSequence


type Observation {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        basedOn: [ObservationBasedOn]            
        partOf: [ObservationPartOf]            
        status: code!            
        category: [CodeableConcept]            
        code: CodeableConcept!            
        subject: ObservationSubject            
        focus: [Resource]            
        encounter: Encounter            
        effectiveDateTime: dateTime            
        effectivePeriod: Period            
        effectiveTiming: BackboneElement            
        effectiveInstant: instant            
        issued: instant            
        performer: [ObservationPerformer]            
        valueQuantity: Quantity            
        valueCodeableConcept: CodeableConcept            
        valueString: String            
        valueBoolean: Boolean            
        valueInteger: Int            
        valueRange: Range            
        valueRatio: Ratio            
        valueSampledData: SampledData            
        valueTime: time            
        valueDateTime: dateTime            
        valuePeriod: Period            
        dataAbsentReason: CodeableConcept            
        interpretation: [CodeableConcept]            
        note: [Annotation]            
        bodySite: CodeableConcept            
        method: CodeableConcept            
        specimen: Specimen            
        device: ObservationDevice            
        referenceRange: [BackboneElement]            
        hasMember: [ObservationHasMember]            
        derivedFrom: [ObservationDerivedFrom]            
        component: [BackboneElement]            
}

extend type Query {
    observation(id: String): [Observation]
}