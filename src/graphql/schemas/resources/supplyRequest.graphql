# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Medication from "../resources/medication.graphql"
# import Substance from "../resources/substance.graphql"
# import Device from "../resources/device.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import SupplyRequestParameter from "../backbone_elements/backboneElement.graphql"
# import code from "../simple_types/code.graphql"
# import Period from "../complex_types/period.graphql"
# import Timing from "../backbone_elements/backboneElement.graphql"
# import code from "../simple_types/code.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import Organization from "../resources/organization.graphql"
# import Patient from "../resources/patient.graphql"
# import RelatedPerson from "../resources/relatedPerson.graphql"
# import Device from "../resources/device.graphql"
# import Organization from "../resources/organization.graphql"
# import HealthcareService from "../resources/healthcareService.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Condition from "../resources/condition.graphql"
# import Observation from "../resources/observation.graphql"
# import DiagnosticReport from "../resources/diagnosticReport.graphql"
# import DocumentReference from "../resources/documentReference.graphql"
# import Organization from "../resources/organization.graphql"
# import Location from "../resources/location.graphql"
# import Organization from "../resources/organization.graphql"
# import Location from "../resources/location.graphql"
# import Patient from "../resources/patient.graphql"

union SupplyRequestItemReference = Medication | Substance | Device
union SupplyRequestRequester = Practitioner | PractitionerRole | Organization | Patient | RelatedPerson | Device
union SupplyRequestSupplier = Organization | HealthcareService
union SupplyRequestReasonReference = Condition | Observation | DiagnosticReport | DocumentReference
union SupplyRequestDeliverFrom = Organization | Location
union SupplyRequestDeliverTo = Organization | Location | Patient


type SupplyRequest {
        id_: code            
        meta: Meta            
        implicitRules: code            
        language: code            
        text: Narrative            
        contained: [code]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        status: code            
        category: CodeableConcept            
        priority: code            
        itemCodeableConcept: CodeableConcept            
        itemReference: SupplyRequestItemReference            
        quantity: Quantity!            
        parameter: [BackboneElement]            
        occurrenceDateTime: code            
        occurrencePeriod: Period            
        occurrenceTiming: BackboneElement            
        authoredOn: code            
        requester: SupplyRequestRequester            
        supplier: [SupplyRequestSupplier]            
        reasonCode: [CodeableConcept]            
        reasonReference: [SupplyRequestReasonReference]            
        deliverFrom: SupplyRequestDeliverFrom            
        deliverTo: SupplyRequestDeliverTo            
}

extend type Query {
    supplyRequest(id: String): [SupplyRequest]
}