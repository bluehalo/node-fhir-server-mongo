# This file is auto-generated by generate_classes so do not edit manually
# import id from "../simple_types/id.graphql"
# import Meta from "../complex_types/Meta.graphql"
# import uri from "../simple_types/uri.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/Narrative.graphql"
# import ResourceContainer from "../simple_types/ResourceContainer.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import code from "../simple_types/code.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Quantity from "../complex_types/Quantity.graphql"
# import MedicationKnowledgeRelatedMedicationKnowledge from "../backbone_elements/MedicationKnowledgeRelatedMedicationKnowledge.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import MedicationKnowledgeMonograph from "../backbone_elements/MedicationKnowledgeMonograph.graphql"
# import MedicationKnowledgeIngredient from "../backbone_elements/MedicationKnowledgeIngredient.graphql"
# import markdown from "../simple_types/markdown.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import MedicationKnowledgeCost from "../backbone_elements/MedicationKnowledgeCost.graphql"
# import MedicationKnowledgeMonitoringProgram from "../backbone_elements/MedicationKnowledgeMonitoringProgram.graphql"
# import MedicationKnowledgeAdministrationGuidelines from "../backbone_elements/MedicationKnowledgeAdministrationGuidelines.graphql"
# import MedicationKnowledgeMedicineClassification from "../backbone_elements/MedicationKnowledgeMedicineClassification.graphql"
# import MedicationKnowledgePackaging from "../backbone_elements/MedicationKnowledgePackaging.graphql"
# import MedicationKnowledgeDrugCharacteristic from "../backbone_elements/MedicationKnowledgeDrugCharacteristic.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import MedicationKnowledgeRegulatory from "../backbone_elements/MedicationKnowledgeRegulatory.graphql"
# import MedicationKnowledgeKinetics from "../backbone_elements/MedicationKnowledgeKinetics.graphql"



type MedicationKnowledge {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        code: CodeableConcept            
        status: code            
        manufacturer: Organization            
        doseForm: CodeableConcept            
        amount: Quantity            
        synonym: [String]            
        relatedMedicationKnowledge: [MedicationKnowledgeRelatedMedicationKnowledge]            
        associatedMedication: [Medication]            
        productType: [CodeableConcept]            
        monograph: [MedicationKnowledgeMonograph]            
        ingredient: [MedicationKnowledgeIngredient]            
        preparationInstruction: markdown            
        intendedRoute: [CodeableConcept]            
        cost: [MedicationKnowledgeCost]            
        monitoringProgram: [MedicationKnowledgeMonitoringProgram]            
        administrationGuidelines: [MedicationKnowledgeAdministrationGuidelines]            
        medicineClassification: [MedicationKnowledgeMedicineClassification]            
        packaging: MedicationKnowledgePackaging            
        drugCharacteristic: [MedicationKnowledgeDrugCharacteristic]            
        contraindication: [DetectedIssue]            
        regulatory: [MedicationKnowledgeRegulatory]            
        kinetics: [MedicationKnowledgeKinetics]            
}

extend type Query {
    medicationKnowledge(id: String): [MedicationKnowledge]
}