# This file is auto-generated by generate_classes so do not edit manually
# import id from "complex_types/id.graphql"
# import Meta from "complex_types/meta.graphql"
# import uri from "complex_types/uri.graphql"
# import code from "complex_types/code.graphql"
# import Narrative from "complex_types/narrative.graphql"
# import ResourceContainer from "complex_types/resource_container.graphql"
# import Extension from "extensions/extension.graphql"
# import Extension from "extensions/extension.graphql"
# import Identifier from "complex_types/identifier.graphql"
# import Period from "complex_types/period.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import RemittanceOutcome from "complex_types/remittance_outcome.graphql"
# import Money from "complex_types/money.graphql"
# import Identifier from "complex_types/identifier.graphql"
# import PaymentReconciliationDetail from "backbone_elements/payment_reconciliation_detail.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import PaymentReconciliationProcessNote from "backbone_elements/payment_reconciliation_process_note.graphql"

union PaymentReconciliationRequestor = Practitioner | PractitionerRole | Organization

type PaymentReconciliation {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        status: code!            
        period: Period            
        created: dateTime!            
        paymentIssuer: Organization            
        request: Task            
        requestor: PaymentReconciliationRequestor            
        outcome: RemittanceOutcome            
        disposition: String            
        paymentDate: date!            
        paymentAmount: Money!            
        paymentIdentifier: Identifier            
        detail: [PaymentReconciliationDetail]            
        formCode: CodeableConcept            
        processNote: [PaymentReconciliationProcessNote]            
}

extend type Query {
    paymentReconciliation(id: String): [PaymentReconciliation]
}