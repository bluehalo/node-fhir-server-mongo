# This file is auto-generated by generate_classes so do not edit manually
# import id from "../simple_types/id.graphql"
# import Meta from "../complex_types/meta.graphql"
# import uri from "../simple_types/uri.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import ResourceContainer from "../simple_types/ResourceContainer.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import EpisodeOfCareStatusHistory from "../backbone_elements/backboneElement.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import EpisodeOfCareDiagnosis from "../backbone_elements/backboneElement.graphql"
# import Patient from "../resources/patient.graphql"
# import Organization from "../resources/organization.graphql"
# import Period from "../complex_types/period.graphql"
# import ServiceRequest from "../resources/serviceRequest.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import CareTeam from "../resources/careTeam.graphql"
# import Account from "../resources/account.graphql"

union EpisodeOfCareCareManager = Practitioner | PractitionerRole


type EpisodeOfCare {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        status: code!            
        statusHistory: [BackboneElement]            
        type_: [CodeableConcept]            
        diagnosis: [BackboneElement]            
        patient: Patient!            
        managingOrganization: Organization            
        period: Period            
        referralRequest: [ServiceRequest]            
        careManager: EpisodeOfCareCareManager            
        team: [CareTeam]            
        account: [Account]            
}

extend type Query {
    episodeOfCare(id: String): [EpisodeOfCare]
}