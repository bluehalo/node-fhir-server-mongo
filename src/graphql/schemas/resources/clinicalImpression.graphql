# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import code from "../simple_types/code.graphql"
# import Patient from "../resources/patient.graphql"
# import Group from "../resources/group.graphql"
# import Encounter from "../resources/encounter.graphql"
# import code from "../simple_types/code.graphql"
# import Period from "../complex_types/period.graphql"
# import code from "../simple_types/code.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import ClinicalImpression from "../resources/clinicalImpression.graphql"
# import Condition from "../resources/condition.graphql"
# import AllergyIntolerance from "../resources/allergyIntolerance.graphql"
# import ClinicalImpressionInvestigation from "../backbone_elements/backboneElement.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import ClinicalImpressionFinding from "../backbone_elements/backboneElement.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import RiskAssessment from "../resources/riskAssessment.graphql"
# import Resource from "../resources/resource.graphql"
# import Annotation from "../complex_types/annotation.graphql"

union ClinicalImpressionSubject = Patient | Group
union ClinicalImpressionAssessor = Practitioner | PractitionerRole
union ClinicalImpressionProblem = Condition | AllergyIntolerance


type ClinicalImpression {
        id_: code            
        meta: Meta            
        implicitRules: code            
        language: code            
        text: Narrative            
        contained: [code]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        status: code!            
        statusReason: CodeableConcept            
        code: CodeableConcept            
        description: code            
        subject: ClinicalImpressionSubject!            
        encounter: Encounter            
        effectiveDateTime: code            
        effectivePeriod: Period            
        date: code            
        assessor: ClinicalImpressionAssessor            
        previous: ClinicalImpression            
        problem: [ClinicalImpressionProblem]            
        investigation: [BackboneElement]            
        protocol: [code]            
        summary: code            
        finding: [BackboneElement]            
        prognosisCodeableConcept: [CodeableConcept]            
        prognosisReference: [RiskAssessment]            
        supportingInfo: [Resource]            
        note: [Annotation]            
}

extend type Query {
    clinicalImpression(id: String): [ClinicalImpression]
}