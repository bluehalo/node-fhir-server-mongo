# This file is auto-generated by generate_classes so do not edit manually
# import id from "complex_types/id.graphql"
# import Meta from "complex_types/meta.graphql"
# import uri from "complex_types/uri.graphql"
# import code from "complex_types/code.graphql"
# import Narrative from "complex_types/narrative.graphql"
# import ResourceContainer from "complex_types/resource_container.graphql"
# import Extension from "extensions/extension.graphql"
# import Extension from "extensions/extension.graphql"
# import Identifier from "complex_types/identifier.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Period from "complex_types/period.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import ExplanationOfBenefitRelated from "backbone_elements/explanation_of_benefit_related.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import ExplanationOfBenefitPayee from "backbone_elements/explanation_of_benefit_payee.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Period from "complex_types/period.graphql"
# import ExplanationOfBenefitCareTeam from "backbone_elements/explanation_of_benefit_care_team.graphql"
# import ExplanationOfBenefitSupportingInfo from "backbone_elements/explanation_of_benefit_supporting_info.graphql"
# import ExplanationOfBenefitDiagnosis from "backbone_elements/explanation_of_benefit_diagnosis.graphql"
# import ExplanationOfBenefitProcedure from "backbone_elements/explanation_of_benefit_procedure.graphql"
# import ExplanationOfBenefitInsurance from "backbone_elements/explanation_of_benefit_insurance.graphql"
# import ExplanationOfBenefitAccident from "backbone_elements/explanation_of_benefit_accident.graphql"
# import ExplanationOfBenefitItem from "backbone_elements/explanation_of_benefit_item.graphql"
# import ExplanationOfBenefitAddItem from "backbone_elements/explanation_of_benefit_add_item.graphql"
# import ExplanationOfBenefitAdjudication from "backbone_elements/explanation_of_benefit_adjudication.graphql"
# import ExplanationOfBenefitTotal from "backbone_elements/explanation_of_benefit_total.graphql"
# import ExplanationOfBenefitPayment from "backbone_elements/explanation_of_benefit_payment.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import Attachment from "complex_types/attachment.graphql"
# import ExplanationOfBenefitProcessNote from "backbone_elements/explanation_of_benefit_process_note.graphql"
# import Period from "complex_types/period.graphql"
# import ExplanationOfBenefitBenefitBalance from "backbone_elements/explanation_of_benefit_benefit_balance.graphql"

union ExplanationOfBenefitEnterer = Practitioner | PractitionerRoleunion ExplanationOfBenefitProvider = Practitioner | PractitionerRole | Organizationunion ExplanationOfBenefitPrescription = MedicationRequest | VisionPrescription

type ExplanationOfBenefit {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        status: code!            
        type_: CodeableConcept!            
        subType: CodeableConcept            
        use: code!            
        patient: Reference!            
        billablePeriod: Period            
        created: dateTime!            
        enterer: Reference            
        insurer: Reference!            
        provider: Reference!            
        priority: CodeableConcept            
        fundsReserveRequested: CodeableConcept            
        fundsReserve: CodeableConcept            
        related: [ExplanationOfBenefitRelated]            
        prescription: Reference            
        originalPrescription: Reference            
        payee: ExplanationOfBenefitPayee            
        referral: Reference            
        facility: Reference            
        claim: Reference            
        claimResponse: Reference            
        outcome: code!            
        disposition: String            
        preAuthRef: [String]            
        preAuthRefPeriod: [Period]            
        careTeam: [ExplanationOfBenefitCareTeam]            
        supportingInfo: [ExplanationOfBenefitSupportingInfo]            
        diagnosis: [ExplanationOfBenefitDiagnosis]            
        procedure: [ExplanationOfBenefitProcedure]            
        precedence: Int            
        insurance: [ExplanationOfBenefitInsurance]!            
        accident: ExplanationOfBenefitAccident            
        item: [ExplanationOfBenefitItem]            
        addItem: [ExplanationOfBenefitAddItem]            
        adjudication: [ExplanationOfBenefitAdjudication]            
        total: [ExplanationOfBenefitTotal]            
        payment: ExplanationOfBenefitPayment            
        formCode: CodeableConcept            
        form: Attachment            
        processNote: [ExplanationOfBenefitProcessNote]            
        benefitPeriod: Period            
        benefitBalance: [ExplanationOfBenefitBenefitBalance]            
}