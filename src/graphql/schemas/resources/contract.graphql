# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Contract from "../resources/contract.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import code from "../simple_types/code.graphql"
# import Period from "../complex_types/period.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Resource from "../resources/resource.graphql"
# import Organization from "../resources/organization.graphql"
# import Location from "../resources/location.graphql"
# import Location from "../resources/location.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Patient from "../resources/patient.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import Organization from "../resources/organization.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Resource from "../resources/resource.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import ContractContentDefinition from "../backbone_elements/contractContentDefinition.graphql"
# import ContractTerm from "../backbone_elements/contractTerm.graphql"
# import Resource from "../resources/resource.graphql"
# import Provenance from "../resources/provenance.graphql"
# import ContractSigner from "../backbone_elements/contractSigner.graphql"
# import ContractFriendly from "../backbone_elements/contractFriendly.graphql"
# import ContractLegal from "../backbone_elements/contractLegal.graphql"
# import ContractRule from "../backbone_elements/contractRule.graphql"
# import Attachment from "../complex_types/attachment.graphql"
# import Composition from "../resources/composition.graphql"
# import DocumentReference from "../resources/documentReference.graphql"
# import QuestionnaireResponse from "../resources/questionnaireResponse.graphql"
# import Contract from "../resources/contract.graphql"

union ContractAuthor = Patient | Practitioner | PractitionerRole | Organization
union ContractLegallyBindingReference = Composition | DocumentReference | QuestionnaireResponse | Contract


type Contract {
        id_: code            
        meta: Meta            
        implicitRules: code            
        language: code            
        text: Narrative            
        contained: [code]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        url: code            
        version: code            
        status: code            
        legalState: CodeableConcept            
        instantiatesCanonical: Contract            
        instantiatesUri: code            
        contentDerivative: CodeableConcept            
        issued: code            
        applies: Period            
        expirationType: CodeableConcept            
        subject: [Resource]            
        authority: [Organization]            
        domain: [Location]            
        site: [Location]            
        name: code            
        title: code            
        subtitle: code            
        alias: [code]            
        author: ContractAuthor            
        scope: CodeableConcept            
        topicCodeableConcept: CodeableConcept            
        topicReference: Resource            
        type_: CodeableConcept            
        subType: [CodeableConcept]            
        contentDefinition: ContractContentDefinition            
        term: [ContractTerm]            
        supportingInfo: [Resource]            
        relevantHistory: [Provenance]            
        signer: [ContractSigner]            
        friendly: [ContractFriendly]            
        legal: [ContractLegal]            
        rule: [ContractRule]            
        legallyBindingAttachment: Attachment            
        legallyBindingReference: ContractLegallyBindingReference            
}

extend type Query {
    contract(id: String): [Contract]
}