# This file is auto-generated by generate_classes so do not edit manually
# import id from "../simple_types/id.graphql"
# import Meta from "../complex_types/Meta.graphql"
# import uri from "../simple_types/uri.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/Narrative.graphql"
# import ResourceContainer from "../simple_types/ResourceContainer.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Identifier from "../complex_types/Identifier.graphql"
# import uri from "../simple_types/uri.graphql"
# import string from "../simple_types/string.graphql"
# import ContractResourceStatusCodes from "../simple_types/ContractResourceStatusCodes.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import uri from "../simple_types/uri.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import Period from "../complex_types/Period.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import string from "../simple_types/string.graphql"
# import string from "../simple_types/string.graphql"
# import string from "../simple_types/string.graphql"
# import string from "../simple_types/string.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import ContractContentDefinition from "../backbone_elements/ContractContentDefinition.graphql"
# import ContractTerm from "../backbone_elements/ContractTerm.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import ContractSigner from "../backbone_elements/ContractSigner.graphql"
# import ContractFriendly from "../backbone_elements/ContractFriendly.graphql"
# import ContractLegal from "../backbone_elements/ContractLegal.graphql"
# import ContractRule from "../backbone_elements/ContractRule.graphql"
# import Attachment from "../complex_types/Attachment.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"

union ContractAuthor = Patient | Practitioner | PractitionerRole | Organization
union ContractLegallyBindingReference = Composition | DocumentReference | QuestionnaireResponse | Contract


type Contract {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        url: uri            
        version: String            
        status: code            
        legalState: CodeableConcept            
        instantiatesCanonical: Contract            
        instantiatesUri: uri            
        contentDerivative: CodeableConcept            
        issued: dateTime            
        applies: Period            
        expirationType: CodeableConcept            
        subject: [Resource]            
        authority: [Organization]            
        domain: [Location]            
        site: [Location]            
        name: String            
        title: String            
        subtitle: String            
        alias: [String]            
        author: ContractAuthor            
        scope: CodeableConcept            
        topicCodeableConcept: CodeableConcept            
        topicReference: Resource            
        type_: CodeableConcept            
        subType: [CodeableConcept]            
        contentDefinition: ContractContentDefinition            
        term: [ContractTerm]            
        supportingInfo: [Resource]            
        relevantHistory: [Provenance]            
        signer: [ContractSigner]            
        friendly: [ContractFriendly]            
        legal: [ContractLegal]            
        rule: [ContractRule]            
        legallyBindingAttachment: Attachment            
        legallyBindingReference: ContractLegallyBindingReference            
}

extend type Query {
    contract(id: String): [Contract]
}