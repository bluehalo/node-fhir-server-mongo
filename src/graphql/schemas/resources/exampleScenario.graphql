# This file is auto-generated by generate_classes so do not edit manually
# import id from "../simple_types/id.graphql"
# import Meta from "../complex_types/meta.graphql"
# import uri from "../simple_types/uri.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import ResourceContainer from "../simple_types/ResourceContainer.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import uri from "../simple_types/uri.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import UsageContext from "../complex_types/usageContext.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import markdown from "../simple_types/markdown.graphql"
# import markdown from "../simple_types/markdown.graphql"
# import ExampleScenarioActor from "../backbone_elements/backboneElement.graphql"
# import ExampleScenarioInstance from "../backbone_elements/backboneElement.graphql"
# import ExampleScenarioProcess from "../backbone_elements/backboneElement.graphql"
# import canonical from "../simple_types/canonical.graphql"



type ExampleScenario {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        url: uri            
        identifier: [Identifier]            
        version: String            
        name: String            
        status: code!            
        experimental: Boolean            
        date: dateTime            
        publisher: String            
        contact: [ContactDetail]            
        useContext: [UsageContext]            
        jurisdiction: [CodeableConcept]            
        copyright: markdown            
        purpose: markdown            
        actor: [BackboneElement]            
        instance: [BackboneElement]            
        process: [BackboneElement]            
        workflow: [canonical]            
}

extend type Query {
    exampleScenario(id: String): [ExampleScenario]
}