# This file is auto-generated by generate_classes so do not edit manually
# import id from "../simple_types/id.graphql"
# import Meta from "../complex_types/Meta.graphql"
# import uri from "../simple_types/uri.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/Narrative.graphql"
# import ResourceContainer from "../simple_types/ResourceContainer.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import uri from "../simple_types/uri.graphql"
# import Identifier from "../complex_types/Identifier.graphql"
# import code from "../simple_types/code.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import ContactDetail from "../complex_types/ContactDetail.graphql"
# import markdown from "../simple_types/markdown.graphql"
# import UsageContext from "../complex_types/UsageContext.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import markdown from "../simple_types/markdown.graphql"
# import markdown from "../simple_types/markdown.graphql"
# import uri from "../simple_types/uri.graphql"
# import canonical from "../simple_types/canonical.graphql"
# import uri from "../simple_types/uri.graphql"
# import canonical from "../simple_types/canonical.graphql"
# import ConceptMapGroup from "../backbone_elements/ConceptMapGroup.graphql"



type ConceptMap {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        url: uri            
        identifier: Identifier            
        version: String            
        name: String            
        title: String            
        status: code!            
        experimental: Boolean            
        date: dateTime            
        publisher: String            
        contact: [ContactDetail]            
        description: markdown            
        useContext: [UsageContext]            
        jurisdiction: [CodeableConcept]            
        purpose: markdown            
        copyright: markdown            
        sourceUri: uri            
        sourceCanonical: canonical            
        targetUri: uri            
        targetCanonical: canonical            
        group: [ConceptMapGroup]            
}

extend type Query {
    conceptMap(id: String): [ConceptMap]
}