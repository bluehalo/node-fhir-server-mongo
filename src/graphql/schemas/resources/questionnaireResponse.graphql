# This file is auto-generated by generate_classes so do not edit manually
# import id from "../simple_types/id.graphql"
# import Meta from "../complex_types/meta.graphql"
# import uri from "../simple_types/uri.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import ResourceContainer from "../simple_types/ResourceContainer.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import canonical from "../simple_types/canonical.graphql"
# import code from "../simple_types/code.graphql"
# import Resource from "../resources/resource.graphql"
# import Encounter from "../resources/encounter.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import QuestionnaireResponseItem from "../backbone_elements/backboneElement.graphql"

union QuestionnaireResponseBasedOn = CarePlan | ServiceRequest
union QuestionnaireResponsePartOf = Observation | Procedure
union QuestionnaireResponseAuthor = Device | Practitioner | PractitionerRole | Patient | RelatedPerson | Organization
union QuestionnaireResponseSource = Patient | Practitioner | PractitionerRole | RelatedPerson


type QuestionnaireResponse {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: Identifier            
        basedOn: [QuestionnaireResponseBasedOn]            
        partOf: [QuestionnaireResponsePartOf]            
        questionnaire: canonical            
        status: code!            
        subject: Resource            
        encounter: Encounter            
        authored: dateTime            
        author: QuestionnaireResponseAuthor            
        source: QuestionnaireResponseSource            
        item: [BackboneElement]            
}

extend type Query {
    questionnaireResponse(id: String): [QuestionnaireResponse]
}