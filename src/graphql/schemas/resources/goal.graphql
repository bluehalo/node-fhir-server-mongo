# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Patient from "../resources/patient.graphql"
# import Group from "../resources/group.graphql"
# import Organization from "../resources/organization.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import GoalTarget from "../backbone_elements/backboneElement.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Patient from "../resources/patient.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import RelatedPerson from "../resources/relatedPerson.graphql"
# import Condition from "../resources/condition.graphql"
# import Observation from "../resources/observation.graphql"
# import MedicationStatement from "../resources/medicationStatement.graphql"
# import NutritionOrder from "../resources/nutritionOrder.graphql"
# import ServiceRequest from "../resources/serviceRequest.graphql"
# import RiskAssessment from "../resources/riskAssessment.graphql"
# import Annotation from "../complex_types/annotation.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Observation from "../resources/observation.graphql"

union GoalSubject = Patient | Group | Organization
union GoalExpressedBy = Patient | Practitioner | PractitionerRole | RelatedPerson
union GoalAddresses = Condition | Observation | MedicationStatement | NutritionOrder | ServiceRequest | RiskAssessment


type Goal {
        id_: code            
        meta: Meta            
        implicitRules: code            
        language: code            
        text: Narrative            
        contained: [code]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        lifecycleStatus: code!            
        achievementStatus: CodeableConcept            
        category: [CodeableConcept]            
        priority: CodeableConcept            
        description: CodeableConcept!            
        subject: GoalSubject!            
        startDate: code            
        startCodeableConcept: CodeableConcept            
        target: [BackboneElement]            
        statusDate: code            
        statusReason: code            
        expressedBy: GoalExpressedBy            
        addresses: [GoalAddresses]            
        note: [Annotation]            
        outcomeCode: [CodeableConcept]            
        outcomeReference: [Observation]            
}

extend type Query {
    goal(id: String): [Goal]
}