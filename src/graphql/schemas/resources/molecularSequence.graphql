# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Patient from "../resources/patient.graphql"
# import Specimen from "../resources/specimen.graphql"
# import Device from "../resources/device.graphql"
# import Organization from "../resources/organization.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import MolecularSequenceReferenceSeq from "../backbone_elements/molecularSequenceReferenceSeq.graphql"
# import MolecularSequenceVariant from "../backbone_elements/molecularSequenceVariant.graphql"
# import code from "../simple_types/code.graphql"
# import MolecularSequenceQuality from "../backbone_elements/molecularSequenceQuality.graphql"
# import code from "../simple_types/code.graphql"
# import MolecularSequenceRepository from "../backbone_elements/molecularSequenceRepository.graphql"
# import MolecularSequence from "../resources/molecularSequence.graphql"
# import MolecularSequenceStructureVariant from "../backbone_elements/molecularSequenceStructureVariant.graphql"



type MolecularSequence {
    resourceType: String
    id: code        
    meta: Meta        
    implicitRules: code        
    language: code        
    text: Narrative        
    contained: [code]        
    extension: [Extension]        
    modifierExtension: [Extension]        
    identifier: [Identifier]        
    type: code        
    coordinateSystem: code!        
    patient: Patient        
    specimen: Specimen        
    device: Device        
    performer: Organization        
    quantity: Quantity        
    referenceSeq: MolecularSequenceReferenceSeq        
    variant: [MolecularSequenceVariant]        
    observedSeq: code        
    quality: [MolecularSequenceQuality]        
    readCoverage: code        
    repository: [MolecularSequenceRepository]        
    pointer: [MolecularSequence]        
    structureVariant: [MolecularSequenceStructureVariant]        
}

extend type Query {
    molecularSequence(id: String): [MolecularSequence]
}