# This file is auto-generated by generate_classes so do not edit manually
# import id from "complex_types/id.graphql"
# import Meta from "complex_types/meta.graphql"
# import uri from "complex_types/uri.graphql"
# import code from "complex_types/code.graphql"
# import Narrative from "complex_types/narrative.graphql"
# import ResourceContainer from "complex_types/resource_container.graphql"
# import Extension from "extensions/extension.graphql"
# import Extension from "extensions/extension.graphql"
# import Identifier from "complex_types/identifier.graphql"
# import uri from "complex_types/uri.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import code from "complex_types/code.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Period from "complex_types/period.graphql"
# import MedicationAdministrationPerformer from "backbone_elements/medication_administration_performer.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Annotation from "complex_types/annotation.graphql"
# import MedicationAdministrationDosage from "backbone_elements/medication_administration_dosage.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"

union MedicationAdministrationPartOf = MedicationAdministration | Procedureunion MedicationAdministrationSubject = Patient | Groupunion MedicationAdministrationContext = Encounter | EpisodeOfCareunion MedicationAdministrationReasonReference = Condition | Observation | DiagnosticReport

type MedicationAdministration {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        instantiates: [uri]            
        partOf: [MedicationAdministrationPartOf]            
        status: code!            
        statusReason: [CodeableConcept]            
        category: CodeableConcept            
        medicationCodeableConcept: CodeableConcept            
        medicationReference: Medication            
        subject: MedicationAdministrationSubject!            
        context: MedicationAdministrationContext            
        supportingInformation: [Resource]            
        effectiveDateTime: dateTime            
        effectivePeriod: Period            
        performer: [MedicationAdministrationPerformer]            
        reasonCode: [CodeableConcept]            
        reasonReference: [MedicationAdministrationReasonReference]            
        request: MedicationRequest            
        device: [Device]            
        note: [Annotation]            
        dosage: MedicationAdministrationDosage            
        eventHistory: [Provenance]            
}