# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Patient from "../resources/patient.graphql"
# import Encounter from "../resources/encounter.graphql"
# import code from "../simple_types/code.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import VisionPrescriptionLensSpecification from "../backbone_elements/visionPrescriptionLensSpecification.graphql"

union VisionPrescriptionPrescriber = Practitioner | PractitionerRole


type VisionPrescription {
    resourceType: String
    id: code        
    meta: Meta        
    implicitRules: code        
    language: code        
    text: Narrative        
    contained: [code]        
    extension: [Extension]        
    modifierExtension: [Extension]        
    identifier: [Identifier]        
    status: code!        
    created: code!        
    patient: Patient!        
    encounter: Encounter        
    dateWritten: code!        
    prescriber: VisionPrescriptionPrescriber!        
    lensSpecification: [VisionPrescriptionLensSpecification]!        
}

extend type Query {
    visionPrescription(id: String): [VisionPrescription]
}