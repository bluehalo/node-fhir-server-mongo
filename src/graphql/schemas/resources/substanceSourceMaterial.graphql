# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import SubstanceSourceMaterialFractionDescription from "../backbone_elements/substanceSourceMaterialFractionDescription.graphql"
# import SubstanceSourceMaterialOrganism from "../backbone_elements/substanceSourceMaterialOrganism.graphql"
# import SubstanceSourceMaterialPartDescription from "../backbone_elements/substanceSourceMaterialPartDescription.graphql"



type SubstanceSourceMaterial {
        id_: code            
        meta: Meta            
        implicitRules: code            
        language: code            
        text: Narrative            
        contained: [code]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        sourceMaterialClass: CodeableConcept            
        sourceMaterialType: CodeableConcept            
        sourceMaterialState: CodeableConcept            
        organismId: Identifier            
        organismName: code            
        parentSubstanceId: [Identifier]            
        parentSubstanceName: [code]            
        countryOfOrigin: [CodeableConcept]            
        geographicalLocation: [code]            
        developmentStage: CodeableConcept            
        fractionDescription: [SubstanceSourceMaterialFractionDescription]            
        organism: SubstanceSourceMaterialOrganism            
        partDescription: [SubstanceSourceMaterialPartDescription]            
}

extend type Query {
    substanceSourceMaterial(id: String): [SubstanceSourceMaterial]
}