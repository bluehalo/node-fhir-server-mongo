# This file is auto-generated by generate_classes so do not edit manually
# import id from "../simple_types/id.graphql"
# import Meta from "../complex_types/meta.graphql"
# import uri from "../simple_types/uri.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import ResourceContainer from "../simple_types/ResourceContainer.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import SubstanceSourceMaterialFractionDescription from "../backbone_elements/backboneElement.graphql"
# import SubstanceSourceMaterialOrganism from "../backbone_elements/backboneElement.graphql"
# import SubstanceSourceMaterialPartDescription from "../backbone_elements/backboneElement.graphql"



type SubstanceSourceMaterial {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        sourceMaterialClass: CodeableConcept            
        sourceMaterialType: CodeableConcept            
        sourceMaterialState: CodeableConcept            
        organismId: Identifier            
        organismName: String            
        parentSubstanceId: [Identifier]            
        parentSubstanceName: [String]            
        countryOfOrigin: [CodeableConcept]            
        geographicalLocation: [String]            
        developmentStage: CodeableConcept            
        fractionDescription: [BackboneElement]            
        organism: BackboneElement            
        partDescription: [BackboneElement]            
}

extend type Query {
    substanceSourceMaterial(id: String): [SubstanceSourceMaterial]
}