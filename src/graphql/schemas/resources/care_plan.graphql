# This file is auto-generated by generate_classes so do not edit manually
# import id from "../simple_types/id.graphql"
# import Meta from "../complex_types/Meta.graphql"
# import uri from "../simple_types/uri.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/Narrative.graphql"
# import ResourceContainer from "../simple_types/ResourceContainer.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Identifier from "../complex_types/Identifier.graphql"
# import canonical from "../simple_types/canonical.graphql"
# import uri from "../simple_types/uri.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import RequestStatus from "../simple_types/RequestStatus.graphql"
# import CarePlanIntent from "../simple_types/CarePlanIntent.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Period from "../complex_types/Period.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import CarePlanActivity from "../backbone_elements/CarePlanActivity.graphql"
# import Annotation from "../complex_types/Annotation.graphql"

union CarePlanSubject = Patient | Group
union CarePlanAuthor = Patient | Practitioner | PractitionerRole | Device | RelatedPerson | Organization | CareTeam
union CarePlanContributor = Patient | Practitioner | PractitionerRole | Device | RelatedPerson | Organization | CareTeam


type CarePlan {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        instantiatesCanonical: [canonical]            
        instantiatesUri: [uri]            
        basedOn: [CarePlan]            
        replaces: [CarePlan]            
        partOf: [CarePlan]            
        status: code!            
        intent: code!            
        category: [CodeableConcept]            
        title: String            
        description: String            
        subject: CarePlanSubject!            
        encounter: Encounter            
        period: Period            
        created: dateTime            
        author: CarePlanAuthor            
        contributor: [CarePlanContributor]            
        careTeam: [CareTeam]            
        addresses: [Condition]            
        supportingInfo: [Resource]            
        goal: [Goal]            
        activity: [CarePlanActivity]            
        note: [Annotation]            
}

extend type Query {
    carePlan(id: String): [CarePlan]
}