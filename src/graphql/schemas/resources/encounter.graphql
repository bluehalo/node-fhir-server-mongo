# This file is auto-generated by generate_classes so do not edit manually
# import id from "complex_types/id.graphql"
# import Meta from "complex_types/meta.graphql"
# import uri from "complex_types/uri.graphql"
# import code from "complex_types/code.graphql"
# import Narrative from "complex_types/narrative.graphql"
# import ResourceContainer from "complex_types/resource_container.graphql"
# import Extension from "extensions/extension.graphql"
# import Extension from "extensions/extension.graphql"
# import Identifier from "complex_types/identifier.graphql"
# import EncounterStatusHistory from "backbone_elements/encounter_status_history.graphql"
# import Coding from "complex_types/coding.graphql"
# import EncounterClassHistory from "backbone_elements/encounter_class_history.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import EncounterParticipant from "backbone_elements/encounter_participant.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Period from "complex_types/period.graphql"
# import Duration from "complex_types/duration.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import EncounterDiagnosis from "backbone_elements/encounter_diagnosis.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import EncounterHospitalization from "backbone_elements/encounter_hospitalization.graphql"
# import EncounterLocation from "backbone_elements/encounter_location.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"

union EncounterSubject = Patient | Groupunion EncounterReasonReference = Condition | Procedure | Observation | ImmunizationRecommendation

type Encounter {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        status: code!            
        statusHistory: [EncounterStatusHistory]            
        class_: Coding!            
        classHistory: [EncounterClassHistory]            
        type_: [CodeableConcept]            
        serviceType: CodeableConcept            
        priority: CodeableConcept            
        subject: EncounterSubject            
        episodeOfCare: [EpisodeOfCare]            
        basedOn: [ServiceRequest]            
        participant: [EncounterParticipant]            
        appointment: [Appointment]            
        period: Period            
        length: Duration            
        reasonCode: [CodeableConcept]            
        reasonReference: [EncounterReasonReference]            
        diagnosis: [EncounterDiagnosis]            
        account: [Account]            
        hospitalization: EncounterHospitalization            
        location: [EncounterLocation]            
        serviceProvider: Organization            
        partOf: Encounter            
}