# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import EncounterStatusHistory from "../backbone_elements/encounterStatusHistory.graphql"
# import Coding from "../complex_types/coding.graphql"
# import EncounterClassHistory from "../backbone_elements/encounterClassHistory.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Patient from "../resources/patient.graphql"
# import Group from "../resources/group.graphql"
# import EpisodeOfCare from "../resources/episodeOfCare.graphql"
# import ServiceRequest from "../resources/serviceRequest.graphql"
# import EncounterParticipant from "../backbone_elements/encounterParticipant.graphql"
# import Appointment from "../resources/appointment.graphql"
# import Period from "../complex_types/period.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Condition from "../resources/condition.graphql"
# import Procedure from "../resources/procedure.graphql"
# import Observation from "../resources/observation.graphql"
# import ImmunizationRecommendation from "../resources/immunizationRecommendation.graphql"
# import EncounterDiagnosis from "../backbone_elements/encounterDiagnosis.graphql"
# import Account from "../resources/account.graphql"
# import EncounterHospitalization from "../backbone_elements/encounterHospitalization.graphql"
# import EncounterLocation from "../backbone_elements/encounterLocation.graphql"
# import Organization from "../resources/organization.graphql"
# import Encounter from "../resources/encounter.graphql"

union EncounterSubject = Patient | Group
union EncounterReasonReference = Condition | Procedure | Observation | ImmunizationRecommendation


type Encounter {
        id_: code            
        meta: Meta            
        implicitRules: code            
        language: code            
        text: Narrative            
        contained: [code]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        status: code!            
        statusHistory: [EncounterStatusHistory]            
        class_: Coding!            
        classHistory: [EncounterClassHistory]            
        type_: [CodeableConcept]            
        serviceType: CodeableConcept            
        priority: CodeableConcept            
        subject: EncounterSubject            
        episodeOfCare: [EpisodeOfCare]            
        basedOn: [ServiceRequest]            
        participant: [EncounterParticipant]            
        appointment: [Appointment]            
        period: Period            
        length: Quantity            
        reasonCode: [CodeableConcept]            
        reasonReference: [EncounterReasonReference]            
        diagnosis: [EncounterDiagnosis]            
        account: [Account]            
        hospitalization: EncounterHospitalization            
        location: [EncounterLocation]            
        serviceProvider: Organization            
        partOf: Encounter            
}

extend type Query {
    encounter(id: String): [Encounter]
}