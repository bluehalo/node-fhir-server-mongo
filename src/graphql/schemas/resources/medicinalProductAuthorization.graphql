# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import MedicinalProduct from "../resources/medicinalProduct.graphql"
# import MedicinalProductPackaged from "../resources/medicinalProductPackaged.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Period from "../complex_types/period.graphql"
# import Period from "../complex_types/period.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import MedicinalProductAuthorizationJurisdictionalAuthorization from "../backbone_elements/medicinalProductAuthorizationJurisdictionalAuthorization.graphql"
# import Organization from "../resources/organization.graphql"
# import Organization from "../resources/organization.graphql"
# import MedicinalProductAuthorizationProcedure from "../backbone_elements/medicinalProductAuthorizationProcedure.graphql"

union MedicinalProductAuthorizationSubject = MedicinalProduct | MedicinalProductPackaged


type MedicinalProductAuthorization {
    resourceType: String
    id: code        
    meta: Meta        
    implicitRules: code        
    language: code        
    text: Narrative        
    contained: [code]        
    extension: [Extension]        
    modifierExtension: [Extension]        
    identifier: [Identifier]        
    subject: MedicinalProductAuthorizationSubject        
    country: [CodeableConcept]        
    jurisdiction: [CodeableConcept]        
    status: CodeableConcept        
    statusDate: code        
    restoreDate: code        
    validityPeriod: Period        
    dataExclusivityPeriod: Period        
    dateOfFirstAuthorization: code        
    internationalBirthDate: code        
    legalBasis: CodeableConcept        
    jurisdictionalAuthorization: [MedicinalProductAuthorizationJurisdictionalAuthorization]        
    holder: Organization        
    regulator: Organization        
    procedure: MedicinalProductAuthorizationProcedure        
}

extend type Query {
    medicinalProductAuthorization(id: String): [MedicinalProductAuthorization]
}