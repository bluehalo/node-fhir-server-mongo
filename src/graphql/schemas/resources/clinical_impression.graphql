# This file is auto-generated by generate_classes so do not edit manually
# import id from "complex_types/id.graphql"
# import Meta from "complex_types/meta.graphql"
# import uri from "complex_types/uri.graphql"
# import code from "complex_types/code.graphql"
# import Narrative from "complex_types/narrative.graphql"
# import ResourceContainer from "complex_types/resource_container.graphql"
# import Extension from "extensions/extension.graphql"
# import Extension from "extensions/extension.graphql"
# import Identifier from "complex_types/identifier.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Period from "complex_types/period.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import ClinicalImpressionInvestigation from "backbone_elements/clinical_impression_investigation.graphql"
# import uri from "complex_types/uri.graphql"
# import ClinicalImpressionFinding from "backbone_elements/clinical_impression_finding.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Annotation from "complex_types/annotation.graphql"

union ClinicalImpressionSubject = Patient | Groupunion ClinicalImpressionAssessor = Practitioner | PractitionerRoleunion ClinicalImpressionProblem = Condition | AllergyIntolerance

type ClinicalImpression {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        status: code!            
        statusReason: CodeableConcept            
        code: CodeableConcept            
        description: String            
        subject: ClinicalImpressionSubject!            
        encounter: Encounter            
        effectiveDateTime: dateTime            
        effectivePeriod: Period            
        date: dateTime            
        assessor: ClinicalImpressionAssessor            
        previous: ClinicalImpression            
        problem: [ClinicalImpressionProblem]            
        investigation: [ClinicalImpressionInvestigation]            
        protocol: [uri]            
        summary: String            
        finding: [ClinicalImpressionFinding]            
        prognosisCodeableConcept: [CodeableConcept]            
        prognosisReference: [RiskAssessment]            
        supportingInfo: [Resource]            
        note: [Annotation]            
}