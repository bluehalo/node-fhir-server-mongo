# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Patient from "../resources/patient.graphql"
# import code from "../simple_types/code.graphql"
# import Period from "../complex_types/period.graphql"
# import code from "../simple_types/code.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import Organization from "../resources/organization.graphql"
# import CoverageEligibilityRequest from "../resources/coverageEligibilityRequest.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Organization from "../resources/organization.graphql"
# import CoverageEligibilityResponseInsurance from "../backbone_elements/coverageEligibilityResponseInsurance.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CoverageEligibilityResponseError from "../backbone_elements/coverageEligibilityResponseError.graphql"

union CoverageEligibilityResponseRequestor = Practitioner | PractitionerRole | Organization


type CoverageEligibilityResponse {
    resourceType: String
    id: code        
    meta: Meta        
    implicitRules: code        
    language: code        
    text: Narrative        
    contained: [code]        
    extension: [Extension]        
    modifierExtension: [Extension]        
    identifier: [Identifier]        
    status: code!        
    purpose: [code]!        
    patient: Patient!        
    servicedDate: code        
    servicedPeriod: Period        
    created: code!        
    requestor: CoverageEligibilityResponseRequestor        
    request: CoverageEligibilityRequest!        
    outcome: code!        
    disposition: code        
    insurer: Organization!        
    insurance: [CoverageEligibilityResponseInsurance]        
    preAuthRef: code        
    form: CodeableConcept        
    error: [CoverageEligibilityResponseError]        
}

extend type Query {
    coverageEligibilityResponse(id: String): [CoverageEligibilityResponse]
}