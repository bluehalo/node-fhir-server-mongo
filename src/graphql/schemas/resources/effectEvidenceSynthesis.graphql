# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import code from "../simple_types/code.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import code from "../simple_types/code.graphql"
# import Annotation from "../complex_types/annotation.graphql"
# import UsageContext from "../complex_types/usageContext.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Period from "../complex_types/period.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import RelatedArtifact from "../complex_types/relatedArtifact.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import EvidenceVariable from "../resources/evidenceVariable.graphql"
# import EvidenceVariable from "../resources/evidenceVariable.graphql"
# import EvidenceVariable from "../resources/evidenceVariable.graphql"
# import EvidenceVariable from "../resources/evidenceVariable.graphql"
# import EffectEvidenceSynthesisSampleSize from "../backbone_elements/effectEvidenceSynthesisSampleSize.graphql"
# import EffectEvidenceSynthesisResultsByExposure from "../backbone_elements/effectEvidenceSynthesisResultsByExposure.graphql"
# import EffectEvidenceSynthesisEffectEstimate from "../backbone_elements/effectEvidenceSynthesisEffectEstimate.graphql"
# import EffectEvidenceSynthesisCertainty from "../backbone_elements/effectEvidenceSynthesisCertainty.graphql"



type EffectEvidenceSynthesis {
    resourceType: String
    id: code        
    meta: Meta        
    implicitRules: code        
    language: code        
    text: Narrative        
    contained: [code]        
    extension: [Extension]        
    modifierExtension: [Extension]        
    url: code        
    identifier: [Identifier]        
    version: code        
    name: code        
    title: code        
    status: code!        
    date: code        
    publisher: code        
    contact: [ContactDetail]        
    description: code        
    note: [Annotation]        
    useContext: [UsageContext]        
    jurisdiction: [CodeableConcept]        
    copyright: code        
    approvalDate: code        
    lastReviewDate: code        
    effectivePeriod: Period        
    topic: [CodeableConcept]        
    author: [ContactDetail]        
    editor: [ContactDetail]        
    reviewer: [ContactDetail]        
    endorser: [ContactDetail]        
    relatedArtifact: [RelatedArtifact]        
    synthesisType: CodeableConcept        
    studyType: CodeableConcept        
    population: EvidenceVariable!        
    exposure: EvidenceVariable!        
    exposureAlternative: EvidenceVariable!        
    outcome: EvidenceVariable!        
    sampleSize: EffectEvidenceSynthesisSampleSize        
    resultsByExposure: [EffectEvidenceSynthesisResultsByExposure]        
    effectEstimate: [EffectEvidenceSynthesisEffectEstimate]        
    certainty: [EffectEvidenceSynthesisCertainty]        
}

extend type Query {
    effectEvidenceSynthesis(id: String): [EffectEvidenceSynthesis]
}