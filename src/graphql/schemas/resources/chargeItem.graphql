# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import ChargeItem from "../resources/chargeItem.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Patient from "../resources/patient.graphql"
# import Group from "../resources/group.graphql"
# import Encounter from "../resources/encounter.graphql"
# import EpisodeOfCare from "../resources/episodeOfCare.graphql"
# import code from "../simple_types/code.graphql"
# import Period from "../complex_types/period.graphql"
# import Timing from "../backbone_elements/timing.graphql"
# import ChargeItemPerformer from "../backbone_elements/chargeItemPerformer.graphql"
# import Organization from "../resources/organization.graphql"
# import Organization from "../resources/organization.graphql"
# import Organization from "../resources/organization.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import code from "../simple_types/code.graphql"
# import Money from "../complex_types/money.graphql"
# import code from "../simple_types/code.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import Organization from "../resources/organization.graphql"
# import Patient from "../resources/patient.graphql"
# import Device from "../resources/device.graphql"
# import RelatedPerson from "../resources/relatedPerson.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import DiagnosticReport from "../resources/diagnosticReport.graphql"
# import ImagingStudy from "../resources/imagingStudy.graphql"
# import Immunization from "../resources/immunization.graphql"
# import MedicationAdministration from "../resources/medicationAdministration.graphql"
# import MedicationDispense from "../resources/medicationDispense.graphql"
# import Observation from "../resources/observation.graphql"
# import Procedure from "../resources/procedure.graphql"
# import SupplyDelivery from "../resources/supplyDelivery.graphql"
# import Device from "../resources/device.graphql"
# import Medication from "../resources/medication.graphql"
# import Substance from "../resources/substance.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Account from "../resources/account.graphql"
# import Annotation from "../complex_types/annotation.graphql"
# import Resource from "../resources/resource.graphql"

union ChargeItemSubject = Patient | Group
union ChargeItemContext = Encounter | EpisodeOfCare
union ChargeItemEnterer = Practitioner | PractitionerRole | Organization | Patient | Device | RelatedPerson
union ChargeItemService = DiagnosticReport | ImagingStudy | Immunization | MedicationAdministration | MedicationDispense | Observation | Procedure | SupplyDelivery
union ChargeItemProductReference = Device | Medication | Substance


type ChargeItem {
    resourceType: String
    id: code        
    meta: Meta        
    implicitRules: code        
    language: code        
    text: Narrative        
    contained: [code]        
    extension: [Extension]        
    modifierExtension: [Extension]        
    identifier: [Identifier]        
    definitionUri: [code]        
    definitionCanonical: [code]        
    status: code!        
    partOf: [ChargeItem]        
    code: CodeableConcept!        
    subject: ChargeItemSubject!        
    context: ChargeItemContext        
    occurrenceDateTime: code        
    occurrencePeriod: Period        
    occurrenceTiming: Timing        
    performer: [ChargeItemPerformer]        
    performingOrganization: Organization        
    requestingOrganization: Organization        
    costCenter: Organization        
    quantity: Quantity        
    bodysite: [CodeableConcept]        
    factorOverride: code        
    priceOverride: Money        
    overrideReason: code        
    enterer: ChargeItemEnterer        
    enteredDate: code        
    reason: [CodeableConcept]        
    service: [ChargeItemService]        
    productReference: ChargeItemProductReference        
    productCodeableConcept: CodeableConcept        
    account: [Account]        
    note: [Annotation]        
    supportingInformation: [Resource]        
}

extend type Query {
    chargeItem(id: String): [ChargeItem]
}