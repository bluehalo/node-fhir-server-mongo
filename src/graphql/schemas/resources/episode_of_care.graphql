# This file is auto-generated by generate_classes so do not edit manually
# import id from "../simple_types/id.graphql"
# import Meta from "../complex_types/Meta.graphql"
# import uri from "../simple_types/uri.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/Narrative.graphql"
# import ResourceContainer from "../simple_types/ResourceContainer.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Identifier from "../complex_types/Identifier.graphql"
# import EpisodeOfCareStatus from "../simple_types/EpisodeOfCareStatus.graphql"
# import EpisodeOfCareStatusHistory from "../backbone_elements/EpisodeOfCareStatusHistory.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import EpisodeOfCareDiagnosis from "../backbone_elements/EpisodeOfCareDiagnosis.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Period from "../complex_types/Period.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"

union EpisodeOfCareCareManager = Practitioner | PractitionerRole


type EpisodeOfCare {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        status: code!            
        statusHistory: [EpisodeOfCareStatusHistory]            
        type_: [CodeableConcept]            
        diagnosis: [EpisodeOfCareDiagnosis]            
        patient: Patient!            
        managingOrganization: Organization            
        period: Period            
        referralRequest: [ServiceRequest]            
        careManager: EpisodeOfCareCareManager            
        team: [CareTeam]            
        account: [Account]            
}

extend type Query {
    episodeOfCare(id: String): [EpisodeOfCare]
}