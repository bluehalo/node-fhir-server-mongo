# This file is auto-generated by generate_classes so do not edit manually
# import id from "complex_types/id.graphql"
# import Meta from "complex_types/meta.graphql"
# import uri from "complex_types/uri.graphql"
# import code from "complex_types/code.graphql"
# import Narrative from "complex_types/narrative.graphql"
# import ResourceContainer from "complex_types/resource_container.graphql"
# import Extension from "extensions/extension.graphql"
# import Extension from "extensions/extension.graphql"
# import Identifier from "complex_types/identifier.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Period from "complex_types/period.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Attachment from "complex_types/attachment.graphql"
# import Annotation from "complex_types/annotation.graphql"

union MediaBasedOn = ServiceRequest | CarePlanunion MediaSubject = Patient | Practitioner | PractitionerRole | Group | Device | Specimen | Locationunion MediaOperator = Practitioner | PractitionerRole | Organization | CareTeam | Patient | Device | RelatedPersonunion MediaDevice = Device | DeviceMetric | Device

type Media {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        basedOn: [MediaBasedOn]            
        partOf: [Resource]            
        status: code!            
        type_: CodeableConcept            
        modality: CodeableConcept            
        view: CodeableConcept            
        subject: MediaSubject            
        encounter: Encounter            
        createdDateTime: dateTime            
        createdPeriod: Period            
        issued: instant            
        operator: MediaOperator            
        reasonCode: [CodeableConcept]            
        bodySite: CodeableConcept            
        deviceName: String            
        device: MediaDevice            
        height: Int            
        width: Int            
        frames: Int            
        duration: decimal            
        content: Attachment!            
        note: [Annotation]            
}

extend type Query {
    media(id: String): [Media]
}