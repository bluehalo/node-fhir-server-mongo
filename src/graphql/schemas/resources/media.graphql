# This file is auto-generated by generate_classes so do not edit manually
# import id from "../simple_types/id.graphql"
# import Meta from "../complex_types/meta.graphql"
# import uri from "../simple_types/uri.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import ResourceContainer from "../simple_types/ResourceContainer.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import ServiceRequest from "../resources/serviceRequest.graphql"
# import CarePlan from "../resources/carePlan.graphql"
# import Resource from "../resources/resource.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Patient from "../resources/patient.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import Group from "../resources/group.graphql"
# import Device from "../resources/device.graphql"
# import Specimen from "../resources/specimen.graphql"
# import Location from "../resources/location.graphql"
# import Encounter from "../resources/encounter.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import Period from "../complex_types/period.graphql"
# import instant from "../simple_types/instant.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import Organization from "../resources/organization.graphql"
# import CareTeam from "../resources/careTeam.graphql"
# import Patient from "../resources/patient.graphql"
# import Device from "../resources/device.graphql"
# import RelatedPerson from "../resources/relatedPerson.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Device from "../resources/device.graphql"
# import DeviceMetric from "../resources/deviceMetric.graphql"
# import Device from "../resources/device.graphql"
# import decimal from "../simple_types/decimal.graphql"
# import Attachment from "../complex_types/attachment.graphql"
# import Annotation from "../complex_types/annotation.graphql"

union MediaBasedOn = ServiceRequest | CarePlan
union MediaSubject = Patient | Practitioner | PractitionerRole | Group | Device | Specimen | Location
union MediaOperator = Practitioner | PractitionerRole | Organization | CareTeam | Patient | Device | RelatedPerson
union MediaDevice = Device | DeviceMetric | Device


type Media {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        basedOn: [MediaBasedOn]            
        partOf: [Resource]            
        status: code!            
        type_: CodeableConcept            
        modality: CodeableConcept            
        view: CodeableConcept            
        subject: MediaSubject            
        encounter: Encounter            
        createdDateTime: dateTime            
        createdPeriod: Period            
        issued: instant            
        operator: MediaOperator            
        reasonCode: [CodeableConcept]            
        bodySite: CodeableConcept            
        deviceName: String            
        device: MediaDevice            
        height: Int            
        width: Int            
        frames: Int            
        duration: decimal            
        content: Attachment!            
        note: [Annotation]            
}

extend type Query {
    media(id: String): [Media]
}