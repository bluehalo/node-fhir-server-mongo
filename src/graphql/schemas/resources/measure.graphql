# This file is auto-generated by generate_classes so do not edit manually
# import id from "../simple_types/id.graphql"
# import Meta from "../complex_types/Meta.graphql"
# import uri from "../simple_types/uri.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/Narrative.graphql"
# import ResourceContainer from "../simple_types/ResourceContainer.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import uri from "../simple_types/uri.graphql"
# import Identifier from "../complex_types/Identifier.graphql"
# import string from "../simple_types/string.graphql"
# import string from "../simple_types/string.graphql"
# import string from "../simple_types/string.graphql"
# import string from "../simple_types/string.graphql"
# import PublicationStatus from "../simple_types/PublicationStatus.graphql"
# import boolean from "../simple_types/boolean.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import string from "../simple_types/string.graphql"
# import ContactDetail from "../complex_types/ContactDetail.graphql"
# import markdown from "../simple_types/markdown.graphql"
# import UsageContext from "../complex_types/UsageContext.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import markdown from "../simple_types/markdown.graphql"
# import string from "../simple_types/string.graphql"
# import markdown from "../simple_types/markdown.graphql"
# import date from "../simple_types/date.graphql"
# import date from "../simple_types/date.graphql"
# import Period from "../complex_types/Period.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import ContactDetail from "../complex_types/ContactDetail.graphql"
# import ContactDetail from "../complex_types/ContactDetail.graphql"
# import ContactDetail from "../complex_types/ContactDetail.graphql"
# import ContactDetail from "../complex_types/ContactDetail.graphql"
# import RelatedArtifact from "../complex_types/RelatedArtifact.graphql"
# import canonical from "../simple_types/canonical.graphql"
# import markdown from "../simple_types/markdown.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import string from "../simple_types/string.graphql"
# import string from "../simple_types/string.graphql"
# import markdown from "../simple_types/markdown.graphql"
# import markdown from "../simple_types/markdown.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import markdown from "../simple_types/markdown.graphql"
# import markdown from "../simple_types/markdown.graphql"
# import MeasureGroup from "../backbone_elements/MeasureGroup.graphql"
# import MeasureSupplementalData from "../backbone_elements/MeasureSupplementalData.graphql"



type Measure {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        url: uri            
        identifier: [Identifier]            
        version: String            
        name: String            
        title: String            
        subtitle: String            
        status: code!            
        experimental: Boolean            
        subjectCodeableConcept: CodeableConcept            
        subjectReference: Group            
        date: dateTime            
        publisher: String            
        contact: [ContactDetail]            
        description: markdown            
        useContext: [UsageContext]            
        jurisdiction: [CodeableConcept]            
        purpose: markdown            
        usage: String            
        copyright: markdown            
        approvalDate: date            
        lastReviewDate: date            
        effectivePeriod: Period            
        topic: [CodeableConcept]            
        author: [ContactDetail]            
        editor: [ContactDetail]            
        reviewer: [ContactDetail]            
        endorser: [ContactDetail]            
        relatedArtifact: [RelatedArtifact]            
        library: [canonical]            
        disclaimer: markdown            
        scoring: CodeableConcept            
        compositeScoring: CodeableConcept            
        type_: [CodeableConcept]            
        riskAdjustment: String            
        rateAggregation: String            
        rationale: markdown            
        clinicalRecommendationStatement: markdown            
        improvementNotation: CodeableConcept            
        definition: [markdown]            
        guidance: markdown            
        group: [MeasureGroup]            
        supplementalData: [MeasureSupplementalData]            
}

extend type Query {
    measure(id: String): [Measure]
}