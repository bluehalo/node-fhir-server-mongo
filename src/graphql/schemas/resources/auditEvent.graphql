# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Coding from "../complex_types/coding.graphql"
# import Coding from "../complex_types/coding.graphql"
# import code from "../simple_types/code.graphql"
# import Period from "../complex_types/period.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import AuditEventAgent from "../backbone_elements/backboneElement.graphql"
# import AuditEventSource from "../backbone_elements/backboneElement.graphql"
# import AuditEventEntity from "../backbone_elements/backboneElement.graphql"



type AuditEvent {
        id_: code            
        meta: Meta            
        implicitRules: code            
        language: code            
        text: Narrative            
        contained: [code]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        type_: Coding!            
        subtype: [Coding]            
        action: code            
        period: Period            
        recorded: code!            
        outcome: code            
        outcomeDesc: code            
        purposeOfEvent: [CodeableConcept]            
        agent: [BackboneElement]!            
        source: BackboneElement!            
        entity: [BackboneElement]            
}

extend type Query {
    auditEvent(id: String): [AuditEvent]
}