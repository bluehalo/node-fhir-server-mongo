# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import code from "../simple_types/code.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Group from "../resources/group.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import code from "../simple_types/code.graphql"
# import UsageContext from "../complex_types/usageContext.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Period from "../complex_types/period.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import RelatedArtifact from "../complex_types/relatedArtifact.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Timing from "../backbone_elements/timing.graphql"
# import code from "../simple_types/code.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Period from "../complex_types/period.graphql"
# import Range from "../complex_types/range.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Location from "../resources/location.graphql"
# import ActivityDefinitionParticipant from "../backbone_elements/activityDefinitionParticipant.graphql"
# import Medication from "../resources/medication.graphql"
# import Substance from "../resources/substance.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Dosage from "../backbone_elements/dosage.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import SpecimenDefinition from "../resources/specimenDefinition.graphql"
# import ObservationDefinition from "../resources/observationDefinition.graphql"
# import ObservationDefinition from "../resources/observationDefinition.graphql"
# import code from "../simple_types/code.graphql"
# import ActivityDefinitionDynamicValue from "../backbone_elements/activityDefinitionDynamicValue.graphql"

union ActivityDefinitionProductReference = Medication | Substance


type ActivityDefinition {
        id_: code            
        meta: Meta            
        implicitRules: code            
        language: code            
        text: Narrative            
        contained: [code]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        url: code            
        identifier: [Identifier]            
        version: code            
        name: code            
        title: code            
        subtitle: code            
        status: code!            
        experimental: code            
        subjectCodeableConcept: CodeableConcept            
        subjectReference: Group            
        date: code            
        publisher: code            
        contact: [ContactDetail]            
        description: code            
        useContext: [UsageContext]            
        jurisdiction: [CodeableConcept]            
        purpose: code            
        usage: code            
        copyright: code            
        approvalDate: code            
        lastReviewDate: code            
        effectivePeriod: Period            
        topic: [CodeableConcept]            
        author: [ContactDetail]            
        editor: [ContactDetail]            
        reviewer: [ContactDetail]            
        endorser: [ContactDetail]            
        relatedArtifact: [RelatedArtifact]            
        library: [code]            
        kind: code            
        profile: code            
        code: CodeableConcept            
        intent: code            
        priority: code            
        doNotPerform: code            
        timingTiming: Timing            
        timingDateTime: code            
        timingAge: Quantity            
        timingPeriod: Period            
        timingRange: Range            
        timingDuration: Quantity            
        location: Location            
        participant: [ActivityDefinitionParticipant]            
        productReference: ActivityDefinitionProductReference            
        productCodeableConcept: CodeableConcept            
        quantity: Quantity            
        dosage: [Dosage]            
        bodySite: [CodeableConcept]            
        specimenRequirement: [SpecimenDefinition]            
        observationRequirement: [ObservationDefinition]            
        observationResultRequirement: [ObservationDefinition]            
        transform: code            
        dynamicValue: [ActivityDefinitionDynamicValue]            
}

extend type Query {
    activityDefinition(id: String): [ActivityDefinition]
}