# This file is auto-generated by generate_classes so do not edit manually
# import id from "../simple_types/id.graphql"
# import Meta from "../complex_types/meta.graphql"
# import uri from "../simple_types/uri.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import ResourceContainer from "../simple_types/ResourceContainer.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Condition from "../resources/condition.graphql"
# import Procedure from "../resources/procedure.graphql"
# import Observation from "../resources/observation.graphql"
# import ImmunizationRecommendation from "../resources/immunizationRecommendation.graphql"
# import unsignedInt from "../simple_types/unsignedInt.graphql"
# import Resource from "../resources/resource.graphql"
# import instant from "../simple_types/instant.graphql"
# import instant from "../simple_types/instant.graphql"
# import Slot from "../resources/slot.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import ServiceRequest from "../resources/serviceRequest.graphql"
# import AppointmentParticipant from "../backbone_elements/backboneElement.graphql"
# import Period from "../complex_types/period.graphql"

union AppointmentReasonReference = Condition | Procedure | Observation | ImmunizationRecommendation


type Appointment {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        status: code!            
        cancelationReason: CodeableConcept            
        serviceCategory: [CodeableConcept]            
        serviceType: [CodeableConcept]            
        specialty: [CodeableConcept]            
        appointmentType: CodeableConcept            
        reasonCode: [CodeableConcept]            
        reasonReference: [AppointmentReasonReference]            
        priority: unsignedInt            
        description: String            
        supportingInformation: [Resource]            
        start: instant            
        end: instant            
        minutesDuration: Int            
        slot: [Slot]            
        created: dateTime            
        comment: String            
        patientInstruction: String            
        basedOn: [ServiceRequest]            
        participant: [BackboneElement]!            
        requestedPeriod: [Period]            
}

extend type Query {
    appointment(id: String): [Appointment]
}