# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Condition from "../resources/condition.graphql"
# import Procedure from "../resources/procedure.graphql"
# import Observation from "../resources/observation.graphql"
# import ImmunizationRecommendation from "../resources/immunizationRecommendation.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Resource from "../resources/resource.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Slot from "../resources/slot.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import ServiceRequest from "../resources/serviceRequest.graphql"
# import AppointmentParticipant from "../backbone_elements/backboneElement.graphql"
# import Period from "../complex_types/period.graphql"

union AppointmentReasonReference = Condition | Procedure | Observation | ImmunizationRecommendation


type Appointment {
        id_: code            
        meta: Meta            
        implicitRules: code            
        language: code            
        text: Narrative            
        contained: [code]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        status: code!            
        cancelationReason: CodeableConcept            
        serviceCategory: [CodeableConcept]            
        serviceType: [CodeableConcept]            
        specialty: [CodeableConcept]            
        appointmentType: CodeableConcept            
        reasonCode: [CodeableConcept]            
        reasonReference: [AppointmentReasonReference]            
        priority: code            
        description: code            
        supportingInformation: [Resource]            
        start: code            
        end: code            
        minutesDuration: code            
        slot: [Slot]            
        created: code            
        comment: code            
        patientInstruction: code            
        basedOn: [ServiceRequest]            
        participant: [BackboneElement]!            
        requestedPeriod: [Period]            
}

extend type Query {
    appointment(id: String): [Appointment]
}