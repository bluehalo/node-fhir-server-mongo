# This file is auto-generated by generate_classes so do not edit manually

# import id from "complex_types/id.graphql"
# import Meta from "complex_types/meta.graphql"
# import uri from "complex_types/uri.graphql"
# import code from "complex_types/code.graphql"
# import Narrative from "complex_types/narrative.graphql"
# import ResourceContainer from "complex_types/resource_container.graphql"
# import Extension from "extensions/extension.graphql"
# import Extension from "extensions/extension.graphql"
# import uri from "complex_types/uri.graphql"
# import canonical from "complex_types/canonical.graphql"
# import ContactDetail from "complex_types/contact_detail.graphql"
# import markdown from "complex_types/markdown.graphql"
# import UsageContext from "complex_types/usage_context.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import markdown from "complex_types/markdown.graphql"
# import code from "complex_types/code.graphql"
# import code from "complex_types/code.graphql"
# import code from "complex_types/code.graphql"
# import SearchParameterComponent from "backbone_elements/search_parameter_component.graphql"

type SearchParameter {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        url: uri!            
        version: String            
        name: String!            
        derivedFrom: canonical            
        status: code!            
        experimental: Boolean            
        date: dateTime            
        publisher: String            
        contact: [ContactDetail]            
        description: markdown!            
        useContext: [UsageContext]            
        jurisdiction: [CodeableConcept]            
        purpose: markdown            
        code: code!            
        base: [code]!            
        type_: code!            
        expression: String            
        xpath: String            
        xpathUsage: code            
        target: [code]            
        multipleOr: Boolean            
        multipleAnd: Boolean            
        comparator: [code]            
        modifier: [code]            
        chain: [String]            
        component: [SearchParameterComponent]            
}