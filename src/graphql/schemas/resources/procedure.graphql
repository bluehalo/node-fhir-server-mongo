# This file is auto-generated by generate_classes so do not edit manually
# import id from "complex_types/id.graphql"
# import Meta from "complex_types/meta.graphql"
# import uri from "complex_types/uri.graphql"
# import code from "complex_types/code.graphql"
# import Narrative from "complex_types/narrative.graphql"
# import ResourceContainer from "complex_types/resource_container.graphql"
# import Extension from "extensions/extension.graphql"
# import Extension from "extensions/extension.graphql"
# import Identifier from "complex_types/identifier.graphql"
# import canonical from "complex_types/canonical.graphql"
# import uri from "complex_types/uri.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Period from "complex_types/period.graphql"
# import Age from "complex_types/age.graphql"
# import Range from "complex_types/range.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import ProcedurePerformer from "backbone_elements/procedure_performer.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import Annotation from "complex_types/annotation.graphql"
# import ProcedureFocalDevice from "backbone_elements/procedure_focal_device.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"

union ProcedureBasedOn = CarePlan | ServiceRequestunion ProcedurePartOf = Procedure | Observation | MedicationAdministrationunion ProcedureSubject = Patient | Groupunion ProcedureRecorder = Patient | RelatedPerson | Practitioner | PractitionerRoleunion ProcedureAsserter = Patient | RelatedPerson | Practitioner | PractitionerRoleunion ProcedureReasonReference = Condition | Observation | Procedure | DiagnosticReport | DocumentReferenceunion ProcedureReport = DiagnosticReport | DocumentReference | Compositionunion ProcedureUsedReference = Device | Medication | Substance

type Procedure {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        instantiatesCanonical: [canonical]            
        instantiatesUri: [uri]            
        basedOn: [ProcedureBasedOn]            
        partOf: [ProcedurePartOf]            
        status: code!            
        statusReason: CodeableConcept            
        category: CodeableConcept            
        code: CodeableConcept            
        subject: ProcedureSubject!            
        encounter: Encounter            
        performedDateTime: dateTime            
        performedPeriod: Period            
        performedString: String            
        performedAge: Age            
        performedRange: Range            
        recorder: ProcedureRecorder            
        asserter: ProcedureAsserter            
        performer: [ProcedurePerformer]            
        location: Location            
        reasonCode: [CodeableConcept]            
        reasonReference: [ProcedureReasonReference]            
        bodySite: [CodeableConcept]            
        outcome: CodeableConcept            
        report: [ProcedureReport]            
        complication: [CodeableConcept]            
        complicationDetail: [Condition]            
        followUp: [CodeableConcept]            
        note: [Annotation]            
        focalDevice: [ProcedureFocalDevice]            
        usedReference: [ProcedureUsedReference]            
        usedCode: [CodeableConcept]            
}