# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import CarePlan from "../resources/carePlan.graphql"
# import ServiceRequest from "../resources/serviceRequest.graphql"
# import Procedure from "../resources/procedure.graphql"
# import Observation from "../resources/observation.graphql"
# import MedicationAdministration from "../resources/medicationAdministration.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Patient from "../resources/patient.graphql"
# import Group from "../resources/group.graphql"
# import Encounter from "../resources/encounter.graphql"
# import code from "../simple_types/code.graphql"
# import Period from "../complex_types/period.graphql"
# import code from "../simple_types/code.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Range from "../complex_types/range.graphql"
# import Patient from "../resources/patient.graphql"
# import RelatedPerson from "../resources/relatedPerson.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import Patient from "../resources/patient.graphql"
# import RelatedPerson from "../resources/relatedPerson.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import ProcedurePerformer from "../backbone_elements/backboneElement.graphql"
# import Location from "../resources/location.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Condition from "../resources/condition.graphql"
# import Observation from "../resources/observation.graphql"
# import Procedure from "../resources/procedure.graphql"
# import DiagnosticReport from "../resources/diagnosticReport.graphql"
# import DocumentReference from "../resources/documentReference.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import DiagnosticReport from "../resources/diagnosticReport.graphql"
# import DocumentReference from "../resources/documentReference.graphql"
# import Composition from "../resources/composition.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Condition from "../resources/condition.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Annotation from "../complex_types/annotation.graphql"
# import ProcedureFocalDevice from "../backbone_elements/backboneElement.graphql"
# import Device from "../resources/device.graphql"
# import Medication from "../resources/medication.graphql"
# import Substance from "../resources/substance.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"

union ProcedureBasedOn = CarePlan | ServiceRequest
union ProcedurePartOf = Procedure | Observation | MedicationAdministration
union ProcedureSubject = Patient | Group
union ProcedureRecorder = Patient | RelatedPerson | Practitioner | PractitionerRole
union ProcedureAsserter = Patient | RelatedPerson | Practitioner | PractitionerRole
union ProcedureReasonReference = Condition | Observation | Procedure | DiagnosticReport | DocumentReference
union ProcedureReport = DiagnosticReport | DocumentReference | Composition
union ProcedureUsedReference = Device | Medication | Substance


type Procedure {
        id_: code            
        meta: Meta            
        implicitRules: code            
        language: code            
        text: Narrative            
        contained: [code]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        instantiatesCanonical: [code]            
        instantiatesUri: [code]            
        basedOn: [ProcedureBasedOn]            
        partOf: [ProcedurePartOf]            
        status: code!            
        statusReason: CodeableConcept            
        category: CodeableConcept            
        code: CodeableConcept            
        subject: ProcedureSubject!            
        encounter: Encounter            
        performedDateTime: code            
        performedPeriod: Period            
        performedString: code            
        performedAge: Quantity            
        performedRange: Range            
        recorder: ProcedureRecorder            
        asserter: ProcedureAsserter            
        performer: [BackboneElement]            
        location: Location            
        reasonCode: [CodeableConcept]            
        reasonReference: [ProcedureReasonReference]            
        bodySite: [CodeableConcept]            
        outcome: CodeableConcept            
        report: [ProcedureReport]            
        complication: [CodeableConcept]            
        complicationDetail: [Condition]            
        followUp: [CodeableConcept]            
        note: [Annotation]            
        focalDevice: [BackboneElement]            
        usedReference: [ProcedureUsedReference]            
        usedCode: [CodeableConcept]            
}

extend type Query {
    procedure(id: String): [Procedure]
}