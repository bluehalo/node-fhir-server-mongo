# This file is auto-generated by generate_classes so do not edit manually
# import id from "../simple_types/id.graphql"
# import Meta from "../complex_types/Meta.graphql"
# import uri from "../simple_types/uri.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/Narrative.graphql"
# import ResourceContainer from "../simple_types/ResourceContainer.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Identifier from "../complex_types/Identifier.graphql"
# import canonical from "../simple_types/canonical.graphql"
# import uri from "../simple_types/uri.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import Period from "../complex_types/Period.graphql"
# import Age from "../simple_types/Age.graphql"
# import Range from "../complex_types/Range.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import ProcedurePerformer from "../backbone_elements/ProcedurePerformer.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Annotation from "../complex_types/Annotation.graphql"
# import ProcedureFocalDevice from "../backbone_elements/ProcedureFocalDevice.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"

union ProcedureBasedOn = CarePlan | ServiceRequest
union ProcedurePartOf = Procedure | Observation | MedicationAdministration
union ProcedureSubject = Patient | Group
union ProcedureRecorder = Patient | RelatedPerson | Practitioner | PractitionerRole
union ProcedureAsserter = Patient | RelatedPerson | Practitioner | PractitionerRole
union ProcedureReasonReference = Condition | Observation | Procedure | DiagnosticReport | DocumentReference
union ProcedureReport = DiagnosticReport | DocumentReference | Composition
union ProcedureUsedReference = Device | Medication | Substance


type Procedure {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        instantiatesCanonical: [canonical]            
        instantiatesUri: [uri]            
        basedOn: [ProcedureBasedOn]            
        partOf: [ProcedurePartOf]            
        status: code!            
        statusReason: CodeableConcept            
        category: CodeableConcept            
        code: CodeableConcept            
        subject: ProcedureSubject!            
        encounter: Encounter            
        performedDateTime: dateTime            
        performedPeriod: Period            
        performedString: String            
        performedAge: Age            
        performedRange: Range            
        recorder: ProcedureRecorder            
        asserter: ProcedureAsserter            
        performer: [ProcedurePerformer]            
        location: Location            
        reasonCode: [CodeableConcept]            
        reasonReference: [ProcedureReasonReference]            
        bodySite: [CodeableConcept]            
        outcome: CodeableConcept            
        report: [ProcedureReport]            
        complication: [CodeableConcept]            
        complicationDetail: [Condition]            
        followUp: [CodeableConcept]            
        note: [Annotation]            
        focalDevice: [ProcedureFocalDevice]            
        usedReference: [ProcedureUsedReference]            
        usedCode: [CodeableConcept]            
}

extend type Query {
    procedure(id: String): [Procedure]
}