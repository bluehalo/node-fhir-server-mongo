# This file is auto-generated by generate_classes so do not edit manually
# import id from "../simple_types/id.graphql"
# import Meta from "../complex_types/Meta.graphql"
# import uri from "../simple_types/uri.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/Narrative.graphql"
# import ResourceContainer from "../simple_types/ResourceContainer.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Identifier from "../complex_types/Identifier.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import MedicationDispensePerformer from "../backbone_elements/MedicationDispensePerformer.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Quantity from "../complex_types/Quantity.graphql"
# import Quantity from "../complex_types/Quantity.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Annotation from "../complex_types/Annotation.graphql"
# import Dosage from "../backbone_elements/Dosage.graphql"
# import MedicationDispenseSubstitution from "../backbone_elements/MedicationDispenseSubstitution.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"

union MedicationDispenseSubject = Patient | Group
union MedicationDispenseContext = Encounter | EpisodeOfCare
union MedicationDispenseReceiver = Patient | Practitioner


type MedicationDispense {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        partOf: [Procedure]            
        status: code!            
        statusReasonCodeableConcept: CodeableConcept            
        statusReasonReference: DetectedIssue            
        category: CodeableConcept            
        medicationCodeableConcept: CodeableConcept            
        medicationReference: Medication            
        subject: MedicationDispenseSubject            
        context: MedicationDispenseContext            
        supportingInformation: [Resource]            
        performer: [MedicationDispensePerformer]            
        location: Location            
        authorizingPrescription: [MedicationRequest]            
        type_: CodeableConcept            
        quantity: Quantity            
        daysSupply: Quantity            
        whenPrepared: dateTime            
        whenHandedOver: dateTime            
        destination: Location            
        receiver: [MedicationDispenseReceiver]            
        note: [Annotation]            
        dosageInstruction: [Dosage]            
        substitution: MedicationDispenseSubstitution            
        detectedIssue: [DetectedIssue]            
        eventHistory: [Provenance]            
}

extend type Query {
    medicationDispense(id: String): [MedicationDispense]
}