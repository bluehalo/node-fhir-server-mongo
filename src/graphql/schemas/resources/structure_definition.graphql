# This file is auto-generated by generate_classes so do not edit manually
# import id from "complex_types/id.graphql"
# import Meta from "complex_types/meta.graphql"
# import uri from "complex_types/uri.graphql"
# import code from "complex_types/code.graphql"
# import Narrative from "complex_types/narrative.graphql"
# import ResourceContainer from "complex_types/resource_container.graphql"
# import Extension from "extensions/extension.graphql"
# import Extension from "extensions/extension.graphql"
# import uri from "complex_types/uri.graphql"
# import Identifier from "complex_types/identifier.graphql"
# import ContactDetail from "complex_types/contact_detail.graphql"
# import markdown from "complex_types/markdown.graphql"
# import UsageContext from "complex_types/usage_context.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import markdown from "complex_types/markdown.graphql"
# import markdown from "complex_types/markdown.graphql"
# import Coding from "complex_types/coding.graphql"
# import StructureDefinitionMapping from "backbone_elements/structure_definition_mapping.graphql"
# import StructureDefinitionContext from "backbone_elements/structure_definition_context.graphql"
# import uri from "complex_types/uri.graphql"
# import canonical from "complex_types/canonical.graphql"
# import StructureDefinitionSnapshot from "backbone_elements/structure_definition_snapshot.graphql"
# import StructureDefinitionDifferential from "backbone_elements/structure_definition_differential.graphql"



type StructureDefinition {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        url: uri!            
        identifier: [Identifier]            
        version: String            
        name: String!            
        title: String            
        status: code!            
        experimental: Boolean            
        date: dateTime            
        publisher: String            
        contact: [ContactDetail]            
        description: markdown            
        useContext: [UsageContext]            
        jurisdiction: [CodeableConcept]            
        purpose: markdown            
        copyright: markdown            
        keyword: [Coding]            
        fhirVersion: code            
        mapping: [StructureDefinitionMapping]            
        kind: code!            
        abstract: Boolean!            
        context: [StructureDefinitionContext]            
        contextInvariant: [String]            
        type_: uri!            
        baseDefinition: canonical            
        derivation: code            
        snapshot: StructureDefinitionSnapshot            
        differential: StructureDefinitionDifferential            
}

extend type Query {
    structureDefinition(id: String): [StructureDefinition]
}