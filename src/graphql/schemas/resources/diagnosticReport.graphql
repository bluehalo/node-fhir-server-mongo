# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import CarePlan from "../resources/carePlan.graphql"
# import ImmunizationRecommendation from "../resources/immunizationRecommendation.graphql"
# import MedicationRequest from "../resources/medicationRequest.graphql"
# import NutritionOrder from "../resources/nutritionOrder.graphql"
# import ServiceRequest from "../resources/serviceRequest.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Patient from "../resources/patient.graphql"
# import Group from "../resources/group.graphql"
# import Device from "../resources/device.graphql"
# import Location from "../resources/location.graphql"
# import Encounter from "../resources/encounter.graphql"
# import code from "../simple_types/code.graphql"
# import Period from "../complex_types/period.graphql"
# import code from "../simple_types/code.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import Organization from "../resources/organization.graphql"
# import CareTeam from "../resources/careTeam.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import Organization from "../resources/organization.graphql"
# import CareTeam from "../resources/careTeam.graphql"
# import Specimen from "../resources/specimen.graphql"
# import Observation from "../resources/observation.graphql"
# import ImagingStudy from "../resources/imagingStudy.graphql"
# import DiagnosticReportMedia from "../backbone_elements/backboneElement.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Attachment from "../complex_types/attachment.graphql"

union DiagnosticReportBasedOn = CarePlan | ImmunizationRecommendation | MedicationRequest | NutritionOrder | ServiceRequest
union DiagnosticReportSubject = Patient | Group | Device | Location
union DiagnosticReportPerformer = Practitioner | PractitionerRole | Organization | CareTeam
union DiagnosticReportResultsInterpreter = Practitioner | PractitionerRole | Organization | CareTeam


type DiagnosticReport {
        id_: code            
        meta: Meta            
        implicitRules: code            
        language: code            
        text: Narrative            
        contained: [code]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        basedOn: [DiagnosticReportBasedOn]            
        status: code!            
        category: [CodeableConcept]            
        code: CodeableConcept!            
        subject: DiagnosticReportSubject            
        encounter: Encounter            
        effectiveDateTime: code            
        effectivePeriod: Period            
        issued: code            
        performer: [DiagnosticReportPerformer]            
        resultsInterpreter: [DiagnosticReportResultsInterpreter]            
        specimen: [Specimen]            
        result: [Observation]            
        imagingStudy: [ImagingStudy]            
        media: [BackboneElement]            
        conclusion: code            
        conclusionCode: [CodeableConcept]            
        presentedForm: [Attachment]            
}

extend type Query {
    diagnosticReport(id: String): [DiagnosticReport]
}