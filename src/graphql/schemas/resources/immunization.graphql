# This file is auto-generated by generate_classes so do not edit manually
# import id from "../simple_types/id.graphql"
# import Meta from "../complex_types/Meta.graphql"
# import uri from "../simple_types/uri.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/Narrative.graphql"
# import ResourceContainer from "../simple_types/ResourceContainer.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Identifier from "../complex_types/Identifier.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import date from "../simple_types/date.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Quantity from "../complex_types/Quantity.graphql"
# import ImmunizationPerformer from "../backbone_elements/ImmunizationPerformer.graphql"
# import Annotation from "../complex_types/Annotation.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import ImmunizationEducation from "../backbone_elements/ImmunizationEducation.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import ImmunizationReaction from "../backbone_elements/ImmunizationReaction.graphql"
# import ImmunizationProtocolApplied from "../backbone_elements/ImmunizationProtocolApplied.graphql"

union ImmunizationReasonReference = Condition | Observation | DiagnosticReport


type Immunization {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        status: code!            
        statusReason: CodeableConcept            
        vaccineCode: CodeableConcept!            
        patient: Patient!            
        encounter: Encounter            
        occurrenceDateTime: dateTime            
        occurrenceString: String            
        recorded: dateTime            
        primarySource: Boolean            
        reportOrigin: CodeableConcept            
        location: Location            
        manufacturer: Organization            
        lotNumber: String            
        expirationDate: date            
        site: CodeableConcept            
        route: CodeableConcept            
        doseQuantity: Quantity            
        performer: [ImmunizationPerformer]            
        note: [Annotation]            
        reasonCode: [CodeableConcept]            
        reasonReference: [ImmunizationReasonReference]            
        isSubpotent: Boolean            
        subpotentReason: [CodeableConcept]            
        education: [ImmunizationEducation]            
        programEligibility: [CodeableConcept]            
        fundingSource: CodeableConcept            
        reaction: [ImmunizationReaction]            
        protocolApplied: [ImmunizationProtocolApplied]            
}

extend type Query {
    immunization(id: String): [Immunization]
}