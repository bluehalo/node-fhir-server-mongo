# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import code from "../simple_types/code.graphql"
# import UsageContext from "../complex_types/usageContext.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import ImplementationGuideDependsOn from "../backbone_elements/implementationGuideDependsOn.graphql"
# import ImplementationGuideGlobal from "../backbone_elements/implementationGuideGlobal.graphql"
# import ImplementationGuideDefinition from "../backbone_elements/implementationGuideDefinition.graphql"
# import ImplementationGuideManifest from "../backbone_elements/implementationGuideManifest.graphql"



type ImplementationGuide {
    resourceType: String
    id: code        
    meta: Meta        
    implicitRules: code        
    language: code        
    text: Narrative        
    contained: [code]        
    extension: [Extension]        
    modifierExtension: [Extension]        
    url: code!        
    version: code        
    name: code!        
    title: code        
    status: code!        
    experimental: code        
    date: code        
    publisher: code        
    contact: [ContactDetail]        
    description: code        
    useContext: [UsageContext]        
    jurisdiction: [CodeableConcept]        
    copyright: code        
    packageId: code!        
    license: code        
    fhirVersion: [code]!        
    dependsOn: [ImplementationGuideDependsOn]        
    global: [ImplementationGuideGlobal]        
    definition: ImplementationGuideDefinition        
    manifest: ImplementationGuideManifest        
}

extend type Query {
    implementationGuide(id: String): [ImplementationGuide]
}