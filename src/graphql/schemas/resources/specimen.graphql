# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Patient from "../resources/patient.graphql"
# import Group from "../resources/group.graphql"
# import Device from "../resources/device.graphql"
# import Substance from "../resources/substance.graphql"
# import Location from "../resources/location.graphql"
# import code from "../simple_types/code.graphql"
# import Specimen from "../resources/specimen.graphql"
# import ServiceRequest from "../resources/serviceRequest.graphql"
# import SpecimenCollection from "../backbone_elements/specimenCollection.graphql"
# import SpecimenProcessing from "../backbone_elements/specimenProcessing.graphql"
# import SpecimenContainer from "../backbone_elements/specimenContainer.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Annotation from "../complex_types/annotation.graphql"

union SpecimenSubject = Patient | Group | Device | Substance | Location


type Specimen {
        id: code            
        meta: Meta            
        implicitRules: code            
        language: code            
        text: Narrative            
        contained: [code]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        accessionIdentifier: Identifier            
        status: code            
        type: CodeableConcept            
        subject: SpecimenSubject            
        receivedTime: code            
        parent: [Specimen]            
        request: [ServiceRequest]            
        collection: SpecimenCollection            
        processing: [SpecimenProcessing]            
        container: [SpecimenContainer]            
        condition: [CodeableConcept]            
        note: [Annotation]            
}

extend type Query {
    specimen(id: String): [Specimen]
}