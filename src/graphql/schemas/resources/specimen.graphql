# This file is auto-generated by generate_classes so do not edit manually
# import id from "complex_types/id.graphql"
# import Meta from "complex_types/meta.graphql"
# import uri from "complex_types/uri.graphql"
# import code from "complex_types/code.graphql"
# import Narrative from "complex_types/narrative.graphql"
# import ResourceContainer from "complex_types/resource_container.graphql"
# import Extension from "extensions/extension.graphql"
# import Extension from "extensions/extension.graphql"
# import Identifier from "complex_types/identifier.graphql"
# import Identifier from "complex_types/identifier.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import SpecimenCollection from "backbone_elements/specimen_collection.graphql"
# import SpecimenProcessing from "backbone_elements/specimen_processing.graphql"
# import SpecimenContainer from "backbone_elements/specimen_container.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import Annotation from "complex_types/annotation.graphql"

union SpecimenSubject = Patient | Group | Device | Substance | Location

type Specimen {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        accessionIdentifier: Identifier            
        status: code            
        type_: CodeableConcept            
        subject: SpecimenSubject            
        receivedTime: dateTime            
        parent: [Specimen]            
        request: [ServiceRequest]            
        collection: SpecimenCollection            
        processing: [SpecimenProcessing]            
        container: [SpecimenContainer]            
        condition: [CodeableConcept]            
        note: [Annotation]            
}

extend type Query {
    specimen(id: String): [Specimen]
}