# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Organization from "../resources/organization.graphql"
# import RelatedPerson from "../resources/relatedPerson.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import GroupCharacteristic from "../backbone_elements/groupCharacteristic.graphql"
# import GroupMember from "../backbone_elements/groupMember.graphql"

union GroupManagingEntity = Organization | RelatedPerson | Practitioner | PractitionerRole


type Group {
        id: code            
        meta: Meta            
        implicitRules: code            
        language: code            
        text: Narrative            
        contained: [code]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        active: code            
        type: code!            
        actual: code!            
        code: CodeableConcept            
        name: code            
        quantity: code            
        managingEntity: GroupManagingEntity            
        characteristic: [GroupCharacteristic]            
        member: [GroupMember]            
}

extend type Query {
    group(id: String): [Group]
}