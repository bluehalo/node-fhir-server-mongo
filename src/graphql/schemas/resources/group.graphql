# This file is auto-generated by generate_classes so do not edit manually
# import id from "complex_types/id.graphql"
# import Meta from "complex_types/meta.graphql"
# import uri from "complex_types/uri.graphql"
# import code from "complex_types/code.graphql"
# import Narrative from "complex_types/narrative.graphql"
# import ResourceContainer from "complex_types/resource_container.graphql"
# import Extension from "extensions/extension.graphql"
# import Extension from "extensions/extension.graphql"
# import Identifier from "complex_types/identifier.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import unsignedInt from "complex_types/unsigned_int.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import GroupCharacteristic from "backbone_elements/group_characteristic.graphql"
# import GroupMember from "backbone_elements/group_member.graphql"

union GroupManagingEntity = Organization | RelatedPerson | Practitioner | PractitionerRole

type Group {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        active: Boolean            
        type_: code!            
        actual: Boolean!            
        code: CodeableConcept            
        name: String            
        quantity: unsignedInt            
        managingEntity: GroupManagingEntity            
        characteristic: [GroupCharacteristic]            
        member: [GroupMember]            
}

extend type Query {
    group(id: String): [Group]
}