# This file is auto-generated by generate_classes so do not edit manually

# import id from "complex_types/id.graphql"
# import Meta from "complex_types/meta.graphql"
# import uri from "complex_types/uri.graphql"
# import code from "complex_types/code.graphql"
# import Narrative from "complex_types/narrative.graphql"
# import ResourceContainer from "complex_types/resource_container.graphql"
# import Extension from "extensions/extension.graphql"
# import Extension from "extensions/extension.graphql"
# import Identifier from "complex_types/identifier.graphql"
# import uri from "complex_types/uri.graphql"
# import canonical from "complex_types/canonical.graphql"
# import Reference from "complex_types/reference.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Period from "complex_types/period.graphql"
# import Timing from "backbone_elements/timing.graphql"
# import ChargeItemPerformer from "backbone_elements/charge_item_performer.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Quantity from "complex_types/quantity.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import Money from "complex_types/money.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Annotation from "complex_types/annotation.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"

type ChargeItem {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        definitionUri: [uri]            
        definitionCanonical: [canonical]            
        status: code!            
        partOf: [Reference]            
        code: CodeableConcept!            
        subject: Reference!            
        context: Reference            
        occurrenceDateTime: dateTime            
        occurrencePeriod: Period            
        occurrenceTiming: Timing            
        performer: [ChargeItemPerformer]            
        performingOrganization: Reference            
        requestingOrganization: Reference            
        costCenter: Reference            
        quantity: Quantity            
        bodysite: [CodeableConcept]            
        factorOverride: decimal            
        priceOverride: Money            
        overrideReason: String            
        enterer: Reference            
        enteredDate: dateTime            
        reason: [CodeableConcept]            
        service: [Reference]            
        productReference: Reference            
        productCodeableConcept: CodeableConcept            
        account: [Reference]            
        note: [Annotation]            
        supportingInformation: [Reference]            
}