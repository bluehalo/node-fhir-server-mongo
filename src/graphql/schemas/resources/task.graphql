# This file is auto-generated by generate_classes so do not edit manually
# import id from "../simple_types/id.graphql"
# import Meta from "../complex_types/Meta.graphql"
# import uri from "../simple_types/uri.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/Narrative.graphql"
# import ResourceContainer from "../simple_types/ResourceContainer.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Identifier from "../complex_types/Identifier.graphql"
# import canonical from "../simple_types/canonical.graphql"
# import uri from "../simple_types/uri.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Identifier from "../complex_types/Identifier.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import TaskStatus from "../simple_types/TaskStatus.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import TaskIntent from "../simple_types/TaskIntent.graphql"
# import RequestPriority from "../simple_types/RequestPriority.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import string from "../simple_types/string.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Period from "../complex_types/Period.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Annotation from "../complex_types/Annotation.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import TaskRestriction from "../backbone_elements/TaskRestriction.graphql"
# import TaskInput from "../backbone_elements/TaskInput.graphql"
# import TaskOutput from "../backbone_elements/TaskOutput.graphql"

union TaskRequester = Device | Organization | Patient | Practitioner | PractitionerRole | RelatedPerson
union TaskOwner = Practitioner | PractitionerRole | Organization | CareTeam | HealthcareService | Patient | Device | RelatedPerson
union TaskInsurance = Coverage | ClaimResponse


type Task {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        instantiatesCanonical: canonical            
        instantiatesUri: uri            
        basedOn: [Resource]            
        groupIdentifier: Identifier            
        partOf: [Task]            
        status: code!            
        statusReason: CodeableConcept            
        businessStatus: CodeableConcept            
        intent: code!            
        priority: code            
        code: CodeableConcept            
        description: String            
        focus: Resource            
        for_: Resource            
        encounter: Encounter            
        executionPeriod: Period            
        authoredOn: dateTime            
        lastModified: dateTime            
        requester: TaskRequester            
        performerType: [CodeableConcept]            
        owner: TaskOwner            
        location: Location            
        reasonCode: CodeableConcept            
        reasonReference: Resource            
        insurance: [TaskInsurance]            
        note: [Annotation]            
        relevantHistory: [Provenance]            
        restriction: TaskRestriction            
        input: [TaskInput]            
        output: [TaskOutput]            
}

extend type Query {
    task(id: String): [Task]
}