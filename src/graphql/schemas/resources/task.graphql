# This file is auto-generated by generate_classes so do not edit manually
# import id from "complex_types/id.graphql"
# import Meta from "complex_types/meta.graphql"
# import uri from "complex_types/uri.graphql"
# import code from "complex_types/code.graphql"
# import Narrative from "complex_types/narrative.graphql"
# import ResourceContainer from "complex_types/resource_container.graphql"
# import Extension from "extensions/extension.graphql"
# import Extension from "extensions/extension.graphql"
# import Identifier from "complex_types/identifier.graphql"
# import canonical from "complex_types/canonical.graphql"
# import uri from "complex_types/uri.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Identifier from "complex_types/identifier.graphql"
# import Reference from "complex_types/reference.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Period from "complex_types/period.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Annotation from "complex_types/annotation.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import TaskRestriction from "backbone_elements/task_restriction.graphql"
# import TaskInput from "backbone_elements/task_input.graphql"
# import TaskOutput from "backbone_elements/task_output.graphql"

union TaskRequester = Device | Organization | Patient | Practitioner | PractitionerRole | RelatedPersonunion TaskOwner = Practitioner | PractitionerRole | Organization | CareTeam | HealthcareService | Patient | Device | RelatedPersonunion TaskInsurance = Coverage | ClaimResponse

type Task {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        instantiatesCanonical: canonical            
        instantiatesUri: uri            
        basedOn: [Resource]            
        groupIdentifier: Identifier            
        partOf: [Task]            
        status: code!            
        statusReason: CodeableConcept            
        businessStatus: CodeableConcept            
        intent: code!            
        priority: code            
        code: CodeableConcept            
        description: String            
        focus: Resource            
        for_: Resource            
        encounter: Encounter            
        executionPeriod: Period            
        authoredOn: dateTime            
        lastModified: dateTime            
        requester: TaskRequester            
        performerType: [CodeableConcept]            
        owner: TaskOwner            
        location: Location            
        reasonCode: CodeableConcept            
        reasonReference: Resource            
        insurance: [TaskInsurance]            
        note: [Annotation]            
        relevantHistory: [Provenance]            
        restriction: TaskRestriction            
        input: [TaskInput]            
        output: [TaskOutput]            
}