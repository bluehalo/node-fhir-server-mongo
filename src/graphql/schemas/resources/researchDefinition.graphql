# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import code from "../simple_types/code.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Group from "../resources/group.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import UsageContext from "../complex_types/usageContext.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Period from "../complex_types/period.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import RelatedArtifact from "../complex_types/relatedArtifact.graphql"
# import code from "../simple_types/code.graphql"
# import ResearchElementDefinition from "../resources/researchElementDefinition.graphql"
# import ResearchElementDefinition from "../resources/researchElementDefinition.graphql"
# import ResearchElementDefinition from "../resources/researchElementDefinition.graphql"
# import ResearchElementDefinition from "../resources/researchElementDefinition.graphql"



type ResearchDefinition {
    resourceType: String
    id: code        
    meta: Meta        
    implicitRules: code        
    language: code        
    text: Narrative        
    contained: [code]        
    extension: [Extension]        
    modifierExtension: [Extension]        
    url: code        
    identifier: [Identifier]        
    version: code        
    name: code        
    title: code        
    shortTitle: code        
    subtitle: code        
    status: code!        
    experimental: code        
    subjectCodeableConcept: CodeableConcept        
    subjectReference: Group        
    date: code        
    publisher: code        
    contact: [ContactDetail]        
    description: code        
    comment: [code]        
    useContext: [UsageContext]        
    jurisdiction: [CodeableConcept]        
    purpose: code        
    usage: code        
    copyright: code        
    approvalDate: code        
    lastReviewDate: code        
    effectivePeriod: Period        
    topic: [CodeableConcept]        
    author: [ContactDetail]        
    editor: [ContactDetail]        
    reviewer: [ContactDetail]        
    endorser: [ContactDetail]        
    relatedArtifact: [RelatedArtifact]        
    library: [code]        
    population: ResearchElementDefinition!        
    exposure: ResearchElementDefinition        
    exposureAlternative: ResearchElementDefinition        
    outcome: ResearchElementDefinition        
}

extend type Query {
    researchDefinition(id: String): [ResearchDefinition]
}