# This file is auto-generated by generate_classes so do not edit manually
# import id from "complex_types/id.graphql"
# import Meta from "complex_types/meta.graphql"
# import uri from "complex_types/uri.graphql"
# import code from "complex_types/code.graphql"
# import Narrative from "complex_types/narrative.graphql"
# import ResourceContainer from "complex_types/resource_container.graphql"
# import Extension from "extensions/extension.graphql"
# import Extension from "extensions/extension.graphql"
# import uri from "complex_types/uri.graphql"
# import ContactDetail from "complex_types/contact_detail.graphql"
# import markdown from "complex_types/markdown.graphql"
# import UsageContext from "complex_types/usage_context.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import markdown from "complex_types/markdown.graphql"
# import id from "complex_types/id.graphql"
# import ImplementationGuideDependsOn from "backbone_elements/implementation_guide_depends_on.graphql"
# import ImplementationGuideGlobal from "backbone_elements/implementation_guide_global.graphql"
# import ImplementationGuideDefinition from "backbone_elements/implementation_guide_definition.graphql"
# import ImplementationGuideManifest from "backbone_elements/implementation_guide_manifest.graphql"



type ImplementationGuide {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        url: uri!            
        version: String            
        name: String!            
        title: String            
        status: code!            
        experimental: Boolean            
        date: dateTime            
        publisher: String            
        contact: [ContactDetail]            
        description: markdown            
        useContext: [UsageContext]            
        jurisdiction: [CodeableConcept]            
        copyright: markdown            
        packageId: id!            
        license: code            
        fhirVersion: [code]!            
        dependsOn: [ImplementationGuideDependsOn]            
        global_: [ImplementationGuideGlobal]            
        definition: ImplementationGuideDefinition            
        manifest: ImplementationGuideManifest            
}

extend type Query {
    implementationGuide(id: String): [ImplementationGuide]
}