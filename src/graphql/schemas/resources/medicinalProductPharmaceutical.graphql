# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import MedicinalProductIngredient from "../resources/medicinalProductIngredient.graphql"
# import DeviceDefinition from "../resources/deviceDefinition.graphql"
# import MedicinalProductPharmaceuticalCharacteristics from "../backbone_elements/medicinalProductPharmaceuticalCharacteristics.graphql"
# import MedicinalProductPharmaceuticalRouteOfAdministration from "../backbone_elements/medicinalProductPharmaceuticalRouteOfAdministration.graphql"



type MedicinalProductPharmaceutical {
        id_: code            
        meta: Meta            
        implicitRules: code            
        language: code            
        text: Narrative            
        contained: [code]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        administrableDoseForm: CodeableConcept!            
        unitOfPresentation: CodeableConcept            
        ingredient: [MedicinalProductIngredient]            
        device: [DeviceDefinition]            
        characteristics: [MedicinalProductPharmaceuticalCharacteristics]            
        routeOfAdministration: [MedicinalProductPharmaceuticalRouteOfAdministration]!            
}

extend type Query {
    medicinalProductPharmaceutical(id: String): [MedicinalProductPharmaceutical]
}