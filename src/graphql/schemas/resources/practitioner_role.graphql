# This file is auto-generated by generate_classes so do not edit manually
# import id from "complex_types/id.graphql"
# import Meta from "complex_types/meta.graphql"
# import uri from "complex_types/uri.graphql"
# import code from "complex_types/code.graphql"
# import Narrative from "complex_types/narrative.graphql"
# import ResourceContainer from "complex_types/resource_container.graphql"
# import Extension from "extensions/extension.graphql"
# import Extension from "extensions/extension.graphql"
# import Identifier from "complex_types/identifier.graphql"
# import Period from "complex_types/period.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import CodeableConcept from "complex_types/codeable_concept.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"
# import ContactPoint from "complex_types/contact_point.graphql"
# import PractitionerRoleAvailableTime from "backbone_elements/practitioner_role_available_time.graphql"
# import PractitionerRoleNotAvailable from "backbone_elements/practitioner_role_not_available.graphql"
# import Reference from "complex_types/reference.graphql"
# import Reference from "resources/reference.graphql"



type PractitionerRole {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        active: Boolean            
        period: Period            
        practitioner: Practitioner            
        organization: Organization            
        code: [CodeableConcept]            
        specialty: [CodeableConcept]            
        location: [Location]            
        healthcareService: [HealthcareService]            
        telecom: [ContactPoint]            
        availableTime: [PractitionerRoleAvailableTime]            
        notAvailable: [PractitionerRoleNotAvailable]            
        availabilityExceptions: String            
        endpoint: [Endpoint]            
}

extend type Query {
    practitionerRole(id: String): [PractitionerRole]
}