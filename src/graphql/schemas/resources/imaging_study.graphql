# This file is auto-generated by generate_classes so do not edit manually
# import id from "../simple_types/id.graphql"
# import Meta from "../complex_types/Meta.graphql"
# import uri from "../simple_types/uri.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/Narrative.graphql"
# import ResourceContainer from "../simple_types/ResourceContainer.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Identifier from "../complex_types/Identifier.graphql"
# import ImagingStudyStatus from "../simple_types/ImagingStudyStatus.graphql"
# import Coding from "../complex_types/Coding.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import unsignedInt from "../simple_types/unsignedInt.graphql"
# import unsignedInt from "../simple_types/unsignedInt.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Annotation from "../complex_types/Annotation.graphql"
# import ImagingStudySeries from "../backbone_elements/ImagingStudySeries.graphql"

union ImagingStudySubject = Patient | Device | Group
union ImagingStudyBasedOn = CarePlan | ServiceRequest | Appointment | AppointmentResponse | Task
union ImagingStudyReferrer = Practitioner | PractitionerRole
union ImagingStudyInterpreter = Practitioner | PractitionerRole
union ImagingStudyReasonReference = Condition | Observation | Media | DiagnosticReport | DocumentReference


type ImagingStudy {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        status: code!            
        modality: [Coding]            
        subject: ImagingStudySubject!            
        encounter: Encounter            
        started: dateTime            
        basedOn: [ImagingStudyBasedOn]            
        referrer: ImagingStudyReferrer            
        interpreter: [ImagingStudyInterpreter]            
        endpoint: [Endpoint]            
        numberOfSeries: unsignedInt            
        numberOfInstances: unsignedInt            
        procedureReference: Procedure            
        procedureCode: [CodeableConcept]            
        location: Location            
        reasonCode: [CodeableConcept]            
        reasonReference: [ImagingStudyReasonReference]            
        note: [Annotation]            
        description: String            
        series: [ImagingStudySeries]            
}

extend type Query {
    imagingStudy(id: String): [ImagingStudy]
}