# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Patient from "../resources/patient.graphql"
# import Group from "../resources/group.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import RelatedPerson from "../resources/relatedPerson.graphql"
# import Encounter from "../resources/encounter.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Condition from "../resources/condition.graphql"
# import Location from "../resources/location.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Patient from "../resources/patient.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import RelatedPerson from "../resources/relatedPerson.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import Device from "../resources/device.graphql"
# import AdverseEventSuspectEntity from "../backbone_elements/adverseEventSuspectEntity.graphql"
# import Condition from "../resources/condition.graphql"
# import Observation from "../resources/observation.graphql"
# import AllergyIntolerance from "../resources/allergyIntolerance.graphql"
# import FamilyMemberHistory from "../resources/familyMemberHistory.graphql"
# import Immunization from "../resources/immunization.graphql"
# import Procedure from "../resources/procedure.graphql"
# import Media from "../resources/media.graphql"
# import DocumentReference from "../resources/documentReference.graphql"
# import DocumentReference from "../resources/documentReference.graphql"
# import ResearchStudy from "../resources/researchStudy.graphql"

union AdverseEventSubject = Patient | Group | Practitioner | RelatedPerson
union AdverseEventRecorder = Patient | Practitioner | PractitionerRole | RelatedPerson
union AdverseEventContributor = Practitioner | PractitionerRole | Device
union AdverseEventSubjectMedicalHistory = Condition | Observation | AllergyIntolerance | FamilyMemberHistory | Immunization | Procedure | Media | DocumentReference


type AdverseEvent {
        id: code            
        meta: Meta            
        implicitRules: code            
        language: code            
        text: Narrative            
        contained: [code]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: Identifier            
        actuality: code!            
        category: [CodeableConcept]            
        event: CodeableConcept            
        subject: AdverseEventSubject!            
        encounter: Encounter            
        date: code            
        detected: code            
        recordedDate: code            
        resultingCondition: [Condition]            
        location: Location            
        seriousness: CodeableConcept            
        severity: CodeableConcept            
        outcome: CodeableConcept            
        recorder: AdverseEventRecorder            
        contributor: [AdverseEventContributor]            
        suspectEntity: [AdverseEventSuspectEntity]            
        subjectMedicalHistory: [AdverseEventSubjectMedicalHistory]            
        referenceDocument: [DocumentReference]            
        study: [ResearchStudy]            
}

extend type Query {
    adverseEvent(id: String): [AdverseEvent]
}