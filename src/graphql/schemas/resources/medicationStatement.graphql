# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import MedicationRequest from "../resources/medicationRequest.graphql"
# import CarePlan from "../resources/carePlan.graphql"
# import ServiceRequest from "../resources/serviceRequest.graphql"
# import MedicationAdministration from "../resources/medicationAdministration.graphql"
# import MedicationDispense from "../resources/medicationDispense.graphql"
# import MedicationStatement from "../resources/medicationStatement.graphql"
# import Procedure from "../resources/procedure.graphql"
# import Observation from "../resources/observation.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Medication from "../resources/medication.graphql"
# import Patient from "../resources/patient.graphql"
# import Group from "../resources/group.graphql"
# import Encounter from "../resources/encounter.graphql"
# import EpisodeOfCare from "../resources/episodeOfCare.graphql"
# import code from "../simple_types/code.graphql"
# import Period from "../complex_types/period.graphql"
# import code from "../simple_types/code.graphql"
# import Patient from "../resources/patient.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import RelatedPerson from "../resources/relatedPerson.graphql"
# import Organization from "../resources/organization.graphql"
# import Resource from "../resources/resource.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Condition from "../resources/condition.graphql"
# import Observation from "../resources/observation.graphql"
# import DiagnosticReport from "../resources/diagnosticReport.graphql"
# import Annotation from "../complex_types/annotation.graphql"
# import Dosage from "../backbone_elements/dosage.graphql"

union MedicationStatementBasedOn = MedicationRequest | CarePlan | ServiceRequest
union MedicationStatementPartOf = MedicationAdministration | MedicationDispense | MedicationStatement | Procedure | Observation
union MedicationStatementSubject = Patient | Group
union MedicationStatementContext = Encounter | EpisodeOfCare
union MedicationStatementInformationSource = Patient | Practitioner | PractitionerRole | RelatedPerson | Organization
union MedicationStatementReasonReference = Condition | Observation | DiagnosticReport


type MedicationStatement {
        id: code            
        meta: Meta            
        implicitRules: code            
        language: code            
        text: Narrative            
        contained: [code]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        basedOn: [MedicationStatementBasedOn]            
        partOf: [MedicationStatementPartOf]            
        status: code!            
        statusReason: [CodeableConcept]            
        category: CodeableConcept            
        medicationCodeableConcept: CodeableConcept            
        medicationReference: Medication            
        subject: MedicationStatementSubject!            
        context: MedicationStatementContext            
        effectiveDateTime: code            
        effectivePeriod: Period            
        dateAsserted: code            
        informationSource: MedicationStatementInformationSource            
        derivedFrom: [Resource]            
        reasonCode: [CodeableConcept]            
        reasonReference: [MedicationStatementReasonReference]            
        note: [Annotation]            
        dosage: [Dosage]            
}

extend type Query {
    medicationStatement(id: String): [MedicationStatement]
}