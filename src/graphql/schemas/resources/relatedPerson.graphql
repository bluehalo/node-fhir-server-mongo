# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import Patient from "../resources/patient.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import HumanName from "../complex_types/humanName.graphql"
# import ContactPoint from "../complex_types/contactPoint.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Address from "../complex_types/address.graphql"
# import Attachment from "../complex_types/attachment.graphql"
# import Period from "../complex_types/period.graphql"
# import RelatedPersonCommunication from "../backbone_elements/relatedPersonCommunication.graphql"



type RelatedPerson {
        id_: code            
        meta: Meta            
        implicitRules: code            
        language: code            
        text: Narrative            
        contained: [code]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        active: code            
        patient: Patient!            
        relationship: [CodeableConcept]            
        name: [HumanName]            
        telecom: [ContactPoint]            
        gender: code            
        birthDate: code            
        address: [Address]            
        photo: [Attachment]            
        period: Period            
        communication: [RelatedPersonCommunication]            
}

extend type Query {
    relatedPerson(id: String): [RelatedPerson]
}