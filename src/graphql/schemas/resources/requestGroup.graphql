# This file is auto-generated by generate_classes so do not edit manually
# import id from "../simple_types/id.graphql"
# import Meta from "../complex_types/meta.graphql"
# import uri from "../simple_types/uri.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import ResourceContainer from "../simple_types/ResourceContainer.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import canonical from "../simple_types/canonical.graphql"
# import uri from "../simple_types/uri.graphql"
# import Resource from "../resources/resource.graphql"
# import Resource from "../resources/resource.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Encounter from "../resources/encounter.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Annotation from "../complex_types/annotation.graphql"
# import RequestGroupAction from "../backbone_elements/backboneElement.graphql"

union RequestGroupSubject = Patient | Group
union RequestGroupAuthor = Device | Practitioner | PractitionerRole
union RequestGroupReasonReference = Condition | Observation | DiagnosticReport | DocumentReference


type RequestGroup {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        instantiatesCanonical: [canonical]            
        instantiatesUri: [uri]            
        basedOn: [Resource]            
        replaces: [Resource]            
        groupIdentifier: Identifier            
        status: code!            
        intent: code!            
        priority: code            
        code: CodeableConcept            
        subject: RequestGroupSubject            
        encounter: Encounter            
        authoredOn: dateTime            
        author: RequestGroupAuthor            
        reasonCode: [CodeableConcept]            
        reasonReference: [RequestGroupReasonReference]            
        note: [Annotation]            
        action: [BackboneElement]            
}

extend type Query {
    requestGroup(id: String): [RequestGroup]
}