# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Patient from "../resources/patient.graphql"
# import Group from "../resources/group.graphql"
# import Encounter from "../resources/encounter.graphql"
# import code from "../simple_types/code.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Period from "../complex_types/period.graphql"
# import Range from "../complex_types/range.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Period from "../complex_types/period.graphql"
# import Range from "../complex_types/range.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import Patient from "../resources/patient.graphql"
# import RelatedPerson from "../resources/relatedPerson.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import Patient from "../resources/patient.graphql"
# import RelatedPerson from "../resources/relatedPerson.graphql"
# import ConditionStage from "../backbone_elements/conditionStage.graphql"
# import ConditionEvidence from "../backbone_elements/conditionEvidence.graphql"
# import Annotation from "../complex_types/annotation.graphql"

union ConditionSubject = Patient | Group
union ConditionRecorder = Practitioner | PractitionerRole | Patient | RelatedPerson
union ConditionAsserter = Practitioner | PractitionerRole | Patient | RelatedPerson


type Condition {
    resourceType: String
    id: code        
    meta: Meta        
    implicitRules: code        
    language: code        
    text: Narrative        
    contained: [code]        
    extension: [Extension]        
    modifierExtension: [Extension]        
    identifier: [Identifier]        
    clinicalStatus: CodeableConcept        
    verificationStatus: CodeableConcept        
    category: [CodeableConcept]        
    severity: CodeableConcept        
    code: CodeableConcept        
    bodySite: [CodeableConcept]        
    subject: ConditionSubject!        
    encounter: Encounter        
    onsetDateTime: code        
    onsetAge: Quantity        
    onsetPeriod: Period        
    onsetRange: Range        
    onsetString: code        
    abatementDateTime: code        
    abatementAge: Quantity        
    abatementPeriod: Period        
    abatementRange: Range        
    abatementString: code        
    recordedDate: code        
    recorder: ConditionRecorder        
    asserter: ConditionAsserter        
    stage: [ConditionStage]        
    evidence: [ConditionEvidence]        
    note: [Annotation]        
}

extend type Query {
    condition(id: String): [Condition]
}