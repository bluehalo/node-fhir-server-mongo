# This file is auto-generated by generate_classes so do not edit manually
# import id from "../simple_types/id.graphql"
# import Meta from "../complex_types/Meta.graphql"
# import uri from "../simple_types/uri.graphql"
# import code from "../simple_types/code.graphql"
# import Narrative from "../complex_types/Narrative.graphql"
# import ResourceContainer from "../simple_types/ResourceContainer.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Identifier from "../complex_types/Identifier.graphql"
# import ListStatus from "../simple_types/ListStatus.graphql"
# import ListMode from "../simple_types/ListMode.graphql"
# import string from "../simple_types/string.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Annotation from "../complex_types/Annotation.graphql"
# import ListEntry from "../backbone_elements/ListEntry.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"

union ListSubject = Patient | Group | Device | Location
union ListSource = Practitioner | PractitionerRole | Patient | Device


type List {
        id_: id            
        meta: Meta            
        implicitRules: uri            
        language: code            
        text: Narrative            
        contained: [ResourceContainer]            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        status: code!            
        mode: code!            
        title: String            
        code: CodeableConcept            
        subject: ListSubject            
        encounter: Encounter            
        date: dateTime            
        source: ListSource            
        orderedBy: CodeableConcept            
        note: [Annotation]            
        entry: [ListEntry]            
        emptyReason: CodeableConcept            
}

extend type Query {
    list(id: String): [List]
}