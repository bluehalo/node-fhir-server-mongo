# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Address from "../complex_types/address.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Annotation from "../complex_types/annotation.graphql"
# import Attachment from "../complex_types/attachment.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Coding from "../complex_types/coding.graphql"
# import ContactPoint from "../complex_types/contactPoint.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import HumanName from "../complex_types/humanName.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import Money from "../complex_types/money.graphql"
# import Period from "../complex_types/period.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Range from "../complex_types/range.graphql"
# import Ratio from "../complex_types/ratio.graphql"
# import Resource from "../resources/resource.graphql"
# import SampledData from "../complex_types/sampledData.graphql"
# import Signature from "../complex_types/signature.graphql"
# import Timing from "../backbone_elements/timing.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import Contributor from "../complex_types/contributor.graphql"
# import DataRequirement from "../complex_types/dataRequirement.graphql"
# import Expression from "../complex_types/expression.graphql"
# import ParameterDefinition from "../complex_types/parameterDefinition.graphql"
# import RelatedArtifact from "../complex_types/relatedArtifact.graphql"
# import TriggerDefinition from "../complex_types/triggerDefinition.graphql"
# import UsageContext from "../complex_types/usageContext.graphql"
# import Dosage from "../backbone_elements/dosage.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"



type ParametersParameter {
        id: code            
        extension: [Extension]            
        modifierExtension: [Extension]            
        name: code!            
        valueBase64Binary: code            
        valueBoolean: code            
        valueCanonical: code            
        valueCode: code            
        valueDate: code            
        valueDateTime: code            
        valueDecimal: code            
        valueId: code            
        valueInstant: code            
        valueInteger: code            
        valueMarkdown: code            
        valueOid: code            
        valuePositiveInt: code            
        valueString: code            
        valueTime: code            
        valueUnsignedInt: code            
        valueUri: code            
        valueUrl: code            
        valueUuid: code            
        valueAddress: Address            
        valueAge: Quantity            
        valueAnnotation: Annotation            
        valueAttachment: Attachment            
        valueCodeableConcept: CodeableConcept            
        valueCoding: Coding            
        valueContactPoint: ContactPoint            
        valueCount: Quantity            
        valueDistance: Quantity            
        valueDuration: Quantity            
        valueHumanName: HumanName            
        valueIdentifier: Identifier            
        valueMoney: Money            
        valuePeriod: Period            
        valueQuantity: Quantity            
        valueRange: Range            
        valueRatio: Ratio            
        valueReference: Resource            
        valueSampledData: SampledData            
        valueSignature: Signature            
        valueTiming: Timing            
        valueContactDetail: ContactDetail            
        valueContributor: Contributor            
        valueDataRequirement: DataRequirement            
        valueExpression: Expression            
        valueParameterDefinition: ParameterDefinition            
        valueRelatedArtifact: RelatedArtifact            
        valueTriggerDefinition: TriggerDefinition            
        valueUsageContext: UsageContext            
        valueDosage: Dosage            
        valueMeta: Meta            
        resource: code            
        part: [ParametersParameter]            
}

extend type Query {
    parametersParameter(id: String): [ParametersParameter]
}