# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import Device from "../resources/device.graphql"
# import Patient from "../resources/patient.graphql"
# import RelatedPerson from "../resources/relatedPerson.graphql"
# import Organization from "../resources/organization.graphql"
# import Resource from "../resources/resource.graphql"
# import Narrative from "../complex_types/narrative.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Resource from "../resources/resource.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"

union CompositionSectionAuthor = Practitioner | PractitionerRole | Device | Patient | RelatedPerson | Organization


type CompositionSection {
        id: code            
        extension: [Extension]            
        modifierExtension: [Extension]            
        title: code            
        code: CodeableConcept            
        author: [CompositionSectionAuthor]            
        focus: Resource            
        text: Narrative            
        mode: code            
        orderedBy: CodeableConcept            
        entry: [Resource]            
        emptyReason: CodeableConcept            
        section: [CompositionSection]            
}

extend type Query {
    compositionSection(id: String): [CompositionSection]
}