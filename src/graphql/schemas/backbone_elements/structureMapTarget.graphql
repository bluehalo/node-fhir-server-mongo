# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import StructureMapParameter from "../backbone_elements/structureMapParameter.graphql"


"""
StructureMap.Target
    A Map of relationships between 2 structures that can be used to transform
    data.
"""
type StructureMapTarget {
    """
    None
    """
    id: code        
    """
    May be used to represent additional information that is not part of the basic
    definition of the element. To make the use of extensions safe and manageable,
    there is a strict set of governance  applied to the definition and use of
    extensions. Though any implementer can define an extension, there is a set of
    requirements that SHALL be met as part of the definition of the extension.
    """
    extension: [Extension]        
    """
    May be used to represent additional information that is not part of the basic
    definition of the element and that modifies the understanding of the element
    in which it is contained and/or the understanding of the containing element's
    descendants. Usually modifier elements provide negation or qualification. To
    make the use of extensions safe and manageable, there is a strict set of
    governance applied to the definition and use of extensions. Though any
    implementer can define an extension, there is a set of requirements that SHALL
    be met as part of the definition of the extension. Applications processing a
    resource are required to check for modifier extensions.
    
    Modifier extensions SHALL NOT change the meaning of any elements on Resource
    or DomainResource (including cannot change the meaning of modifierExtension
    itself).
    """
    modifierExtension: [Extension]        
    """
    Type or variable this rule applies to.
    """
    context: code        
    """
    How to interpret the context.
    """
    contextType: code        
    """
    Field to create in the context.
    """
    element: code        
    """
    Named context for field, if desired, and a field is specified.
    """
    variable: code        
    """
    If field is a list, how to manage the list.
    """
    listMode: [code]        
    """
    Internal rule reference for shared list items.
    """
    listRuleId: code        
    """
    How the data is copied / created.
    """
    transform: code        
    """
    Parameters to the transform.
    """
    parameter: [StructureMapParameter]        
}