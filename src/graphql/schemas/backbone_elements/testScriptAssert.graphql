# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"


"""
TestScript.Assert
    A structured set of tests against a FHIR server or client implementation to
    determine compliance against the FHIR specification.
"""
type TestScriptAssert {
    """
    None
    """
    id: code        
    """
    May be used to represent additional information that is not part of the basic
    definition of the element. To make the use of extensions safe and manageable,
    there is a strict set of governance  applied to the definition and use of
    extensions. Though any implementer can define an extension, there is a set of
    requirements that SHALL be met as part of the definition of the extension.
    """
    extension: [Extension]        
    """
    May be used to represent additional information that is not part of the basic
    definition of the element and that modifies the understanding of the element
    in which it is contained and/or the understanding of the containing element's
    descendants. Usually modifier elements provide negation or qualification. To
    make the use of extensions safe and manageable, there is a strict set of
    governance applied to the definition and use of extensions. Though any
    implementer can define an extension, there is a set of requirements that SHALL
    be met as part of the definition of the extension. Applications processing a
    resource are required to check for modifier extensions.
    
    Modifier extensions SHALL NOT change the meaning of any elements on Resource
    or DomainResource (including cannot change the meaning of modifierExtension
    itself).
    """
    modifierExtension: [Extension]        
    """
    The label would be used for tracking/logging purposes by test engines.
    """
    label: code        
    """
    The description would be used by test engines for tracking and reporting
    purposes.
    """
    description: code        
    """
    The direction to use for the assertion.
    """
    direction: code        
    """
    Id of the source fixture used as the contents to be evaluated by either the
    "source/expression" or "sourceId/path" definition.
    """
    compareToSourceId: code        
    """
    The FHIRPath expression to evaluate against the source fixture. When
    compareToSourceId is defined, either compareToSourceExpression or
    compareToSourcePath must be defined, but not both.
    """
    compareToSourceExpression: code        
    """
    XPath or JSONPath expression to evaluate against the source fixture. When
    compareToSourceId is defined, either compareToSourceExpression or
    compareToSourcePath must be defined, but not both.
    """
    compareToSourcePath: code        
    """
    The mime-type contents to compare against the request or response message
    'Content-Type' header.
    """
    contentType: code        
    """
    The FHIRPath expression to be evaluated against the request or response
    message contents - HTTP headers and payload.
    """
    expression: code        
    """
    The HTTP header field name e.g. 'Location'.
    """
    headerField: code        
    """
    The ID of a fixture.  Asserts that the response contains at a minimum the
    fixture specified by minimumId.
    """
    minimumId: code        
    """
    Whether or not the test execution performs validation on the bundle navigation
    links.
    """
    navigationLinks: code        
    """
    The operator type defines the conditional behavior of the assert. If not
    defined, the default is equals.
    """
    operator: code        
    """
    The XPath or JSONPath expression to be evaluated against the fixture
    representing the response received from server.
    """
    path: code        
    """
    The request method or HTTP operation code to compare against that used by the
    client system under test.
    """
    requestMethod: code        
    """
    The value to use in a comparison against the request URL path string.
    """
    requestURL: code        
    """
    The type of the resource.  See http://build.fhir.org/resourcelist.html.
    """
    resource: code        
    """
    okay | created | noContent | notModified | bad | forbidden | notFound |
    methodNotAllowed | conflict | gone | preconditionFailed | unprocessable.
    """
    response: code        
    """
    The value of the HTTP response code to be tested.
    """
    responseCode: code        
    """
    Fixture to evaluate the XPath/JSONPath expression or the headerField  against.
    """
    sourceId: code        
    """
    The ID of the Profile to validate against.
    """
    validateProfileId: code        
    """
    The value to compare to.
    """
    value: code        
    """
    Whether or not the test execution will produce a warning only on error for
    this assert.
    """
    warningOnly: code!        
}