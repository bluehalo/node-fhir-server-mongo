# This file is auto-generated by generate_classes so do not edit manually
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import base64Binary from "../simple_types/base64Binary.graphql"
# import canonical from "../simple_types/canonical.graphql"
# import code from "../simple_types/code.graphql"
# import date from "../simple_types/date.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import decimal from "../simple_types/decimal.graphql"
# import id from "../simple_types/id.graphql"
# import instant from "../simple_types/instant.graphql"
# import markdown from "../simple_types/markdown.graphql"
# import oid from "../simple_types/oid.graphql"
# import time from "../simple_types/time.graphql"
# import unsignedInt from "../simple_types/unsignedInt.graphql"
# import uri from "../simple_types/uri.graphql"
# import url from "../simple_types/url.graphql"
# import uuid from "../simple_types/uuid.graphql"
# import Address from "../complex_types/address.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Annotation from "../complex_types/annotation.graphql"
# import Attachment from "../complex_types/attachment.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Coding from "../complex_types/coding.graphql"
# import ContactPoint from "../complex_types/contactPoint.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import HumanName from "../complex_types/humanName.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import Money from "../complex_types/money.graphql"
# import Period from "../complex_types/period.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Range from "../complex_types/range.graphql"
# import Ratio from "../complex_types/ratio.graphql"
# import Reference from "../complex_types/reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import SampledData from "../complex_types/sampledData.graphql"
# import Signature from "../complex_types/signature.graphql"
# import Timing from "../backbone_elements/backbone_element.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import Contributor from "../complex_types/contributor.graphql"
# import DataRequirement from "../complex_types/dataRequirement.graphql"
# import Expression from "../complex_types/expression.graphql"
# import ParameterDefinition from "../complex_types/parameterDefinition.graphql"
# import RelatedArtifact from "../complex_types/relatedArtifact.graphql"
# import TriggerDefinition from "../complex_types/triggerDefinition.graphql"
# import UsageContext from "../complex_types/usageContext.graphql"
# import Dosage from "../backbone_elements/backbone_element.graphql"
# import Meta from "../complex_types/meta.graphql"



type ElementDefinitionExample {
        id_: String            
        extension: [Extension]            
        modifierExtension: [Extension]            
        label: String!            
        valueBase64Binary: base64Binary            
        valueBoolean: Boolean            
        valueCanonical: canonical            
        valueCode: code            
        valueDate: date            
        valueDateTime: dateTime            
        valueDecimal: decimal            
        valueId: id            
        valueInstant: instant            
        valueInteger: Int            
        valueMarkdown: markdown            
        valueOid: oid            
        valuePositiveInt: Int            
        valueString: String            
        valueTime: time            
        valueUnsignedInt: unsignedInt            
        valueUri: uri            
        valueUrl: url            
        valueUuid: uuid            
        valueAddress: Address            
        valueAge: Quantity            
        valueAnnotation: Annotation            
        valueAttachment: Attachment            
        valueCodeableConcept: CodeableConcept            
        valueCoding: Coding            
        valueContactPoint: ContactPoint            
        valueCount: Quantity            
        valueDistance: Quantity            
        valueDuration: Quantity            
        valueHumanName: HumanName            
        valueIdentifier: Identifier            
        valueMoney: Money            
        valuePeriod: Period            
        valueQuantity: Quantity            
        valueRange: Range            
        valueRatio: Ratio            
        valueReference: Resource            
        valueSampledData: SampledData            
        valueSignature: Signature            
        valueTiming: BackboneElement            
        valueContactDetail: ContactDetail            
        valueContributor: Contributor            
        valueDataRequirement: DataRequirement            
        valueExpression: Expression            
        valueParameterDefinition: ParameterDefinition            
        valueRelatedArtifact: RelatedArtifact            
        valueTriggerDefinition: TriggerDefinition            
        valueUsageContext: UsageContext            
        valueDosage: BackboneElement            
        valueMeta: Meta            
}

extend type Query {
    elementDefinitionExample(id: String): [ElementDefinitionExample]
}