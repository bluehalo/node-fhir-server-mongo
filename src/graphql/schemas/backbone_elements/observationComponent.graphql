# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Range from "../complex_types/range.graphql"
# import Ratio from "../complex_types/ratio.graphql"
# import SampledData from "../complex_types/sampledData.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Period from "../complex_types/period.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import ObservationReferenceRange from "../backbone_elements/observationReferenceRange.graphql"



type ObservationComponent {
        id_: code            
        extension: [Extension]            
        modifierExtension: [Extension]            
        code: CodeableConcept!            
        valueQuantity: Quantity            
        valueCodeableConcept: CodeableConcept            
        valueString: code            
        valueBoolean: code            
        valueInteger: code            
        valueRange: Range            
        valueRatio: Ratio            
        valueSampledData: SampledData            
        valueTime: code            
        valueDateTime: code            
        valuePeriod: Period            
        dataAbsentReason: CodeableConcept            
        interpretation: [CodeableConcept]            
        referenceRange: [ObservationReferenceRange]            
}

extend type Query {
    observationComponent(id: String): [ObservationComponent]
}