# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import Organization from "../resources/organization.graphql"
# import Organization from "../resources/organization.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Signature from "../complex_types/signature.graphql"
# import Signature from "../complex_types/signature.graphql"

union VerificationResultAttestationWho = Practitioner | PractitionerRole | Organization
union VerificationResultAttestationOnBehalfOf = Organization | Practitioner | PractitionerRole


type VerificationResultAttestation {
    id: code        
    extension: [Extension]        
    modifierExtension: [Extension]        
    who: VerificationResultAttestationWho        
    onBehalfOf: VerificationResultAttestationOnBehalfOf        
    communicationMethod: CodeableConcept        
    date: code        
    sourceIdentityCertificate: code        
    proxyIdentityCertificate: code        
    proxySignature: Signature        
    sourceSignature: Signature        
}

extend type Query {
    verificationResultAttestation(id: String): [VerificationResultAttestation]
}