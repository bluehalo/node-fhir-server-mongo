# This file is auto-generated by generate_classes so do not edit manually
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import ContractSubject from "../backbone_elements/ContractSubject.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import Period from "../complex_types/Period.graphql"
# import Timing from "../backbone_elements/Timing.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Annotation from "../complex_types/Annotation.graphql"
# import unsignedInt from "../simple_types/unsignedInt.graphql"

union ContractActionContext = Encounter | EpisodeOfCare
union ContractActionRequester = Patient | RelatedPerson | Practitioner | PractitionerRole | Device | Group | Organization
union ContractActionPerformer = RelatedPerson | Patient | Practitioner | PractitionerRole | CareTeam | Device | Substance | Organization | Location
union ContractActionReasonReference = Condition | Observation | DiagnosticReport | DocumentReference | Questionnaire | QuestionnaireResponse


type ContractAction {
        id_: String            
        extension: [Extension]            
        modifierExtension: [Extension]            
        doNotPerform: Boolean            
        type_: CodeableConcept!            
        subject: [ContractSubject]            
        intent: CodeableConcept!            
        linkId: [String]            
        status: CodeableConcept!            
        context: ContractActionContext            
        contextLinkId: [String]            
        occurrenceDateTime: dateTime            
        occurrencePeriod: Period            
        occurrenceTiming: Timing            
        requester: [ContractActionRequester]            
        requesterLinkId: [String]            
        performerType: [CodeableConcept]            
        performerRole: CodeableConcept            
        performer: ContractActionPerformer            
        performerLinkId: [String]            
        reasonCode: [CodeableConcept]            
        reasonReference: [ContractActionReasonReference]            
        reason: [String]            
        reasonLinkId: [String]            
        note: [Annotation]            
        securityLabelNumber: [unsignedInt]            
}

extend type Query {
    contractAction(id: String): [ContractAction]
}