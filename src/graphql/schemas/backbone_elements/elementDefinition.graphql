# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Coding from "../complex_types/coding.graphql"
# import ElementDefinitionSlicing from "../backbone_elements/backboneElement.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import ElementDefinitionBase from "../backbone_elements/backboneElement.graphql"
# import code from "../simple_types/code.graphql"
# import ElementDefinitionType from "../backbone_elements/backboneElement.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Address from "../complex_types/address.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Annotation from "../complex_types/annotation.graphql"
# import Attachment from "../complex_types/attachment.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Coding from "../complex_types/coding.graphql"
# import ContactPoint from "../complex_types/contactPoint.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import HumanName from "../complex_types/humanName.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import Money from "../complex_types/money.graphql"
# import Period from "../complex_types/period.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Range from "../complex_types/range.graphql"
# import Ratio from "../complex_types/ratio.graphql"
# import Resource from "../resources/resource.graphql"
# import SampledData from "../complex_types/sampledData.graphql"
# import Signature from "../complex_types/signature.graphql"
# import Timing from "../backbone_elements/backboneElement.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import Contributor from "../complex_types/contributor.graphql"
# import DataRequirement from "../complex_types/dataRequirement.graphql"
# import Expression from "../complex_types/expression.graphql"
# import ParameterDefinition from "../complex_types/parameterDefinition.graphql"
# import RelatedArtifact from "../complex_types/relatedArtifact.graphql"
# import TriggerDefinition from "../complex_types/triggerDefinition.graphql"
# import UsageContext from "../complex_types/usageContext.graphql"
# import Dosage from "../backbone_elements/backboneElement.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Address from "../complex_types/address.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Annotation from "../complex_types/annotation.graphql"
# import Attachment from "../complex_types/attachment.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Coding from "../complex_types/coding.graphql"
# import ContactPoint from "../complex_types/contactPoint.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import HumanName from "../complex_types/humanName.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import Money from "../complex_types/money.graphql"
# import Period from "../complex_types/period.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Range from "../complex_types/range.graphql"
# import Ratio from "../complex_types/ratio.graphql"
# import Resource from "../resources/resource.graphql"
# import SampledData from "../complex_types/sampledData.graphql"
# import Signature from "../complex_types/signature.graphql"
# import Timing from "../backbone_elements/backboneElement.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import Contributor from "../complex_types/contributor.graphql"
# import DataRequirement from "../complex_types/dataRequirement.graphql"
# import Expression from "../complex_types/expression.graphql"
# import ParameterDefinition from "../complex_types/parameterDefinition.graphql"
# import RelatedArtifact from "../complex_types/relatedArtifact.graphql"
# import TriggerDefinition from "../complex_types/triggerDefinition.graphql"
# import UsageContext from "../complex_types/usageContext.graphql"
# import Dosage from "../backbone_elements/backboneElement.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Address from "../complex_types/address.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Annotation from "../complex_types/annotation.graphql"
# import Attachment from "../complex_types/attachment.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Coding from "../complex_types/coding.graphql"
# import ContactPoint from "../complex_types/contactPoint.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import HumanName from "../complex_types/humanName.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import Money from "../complex_types/money.graphql"
# import Period from "../complex_types/period.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Range from "../complex_types/range.graphql"
# import Ratio from "../complex_types/ratio.graphql"
# import Resource from "../resources/resource.graphql"
# import SampledData from "../complex_types/sampledData.graphql"
# import Signature from "../complex_types/signature.graphql"
# import Timing from "../backbone_elements/backboneElement.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import Contributor from "../complex_types/contributor.graphql"
# import DataRequirement from "../complex_types/dataRequirement.graphql"
# import Expression from "../complex_types/expression.graphql"
# import ParameterDefinition from "../complex_types/parameterDefinition.graphql"
# import RelatedArtifact from "../complex_types/relatedArtifact.graphql"
# import TriggerDefinition from "../complex_types/triggerDefinition.graphql"
# import UsageContext from "../complex_types/usageContext.graphql"
# import Dosage from "../backbone_elements/backboneElement.graphql"
# import Meta from "../complex_types/meta.graphql"
# import ElementDefinitionExample from "../backbone_elements/backboneElement.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import ElementDefinitionConstraint from "../backbone_elements/backboneElement.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import ElementDefinitionBinding from "../backbone_elements/backboneElement.graphql"
# import ElementDefinitionMapping from "../backbone_elements/backboneElement.graphql"



type ElementDefinition {
        id_: code            
        extension: [Extension]            
        modifierExtension: [Extension]            
        path: code!            
        representation: [code]            
        sliceName: code            
        sliceIsConstraining: code            
        label: code            
        code: [Coding]            
        slicing: BackboneElement            
        short: code            
        definition: code            
        comment: code            
        requirements: code            
        alias: [code]            
        min: code            
        max: code            
        base: BackboneElement            
        contentReference: code            
        type_: [BackboneElement]            
        defaultValueBase64Binary: code            
        defaultValueBoolean: code            
        defaultValueCanonical: code            
        defaultValueCode: code            
        defaultValueDate: code            
        defaultValueDateTime: code            
        defaultValueDecimal: code            
        defaultValueId: code            
        defaultValueInstant: code            
        defaultValueInteger: code            
        defaultValueMarkdown: code            
        defaultValueOid: code            
        defaultValuePositiveInt: code            
        defaultValueString: code            
        defaultValueTime: code            
        defaultValueUnsignedInt: code            
        defaultValueUri: code            
        defaultValueUrl: code            
        defaultValueUuid: code            
        defaultValueAddress: Address            
        defaultValueAge: Quantity            
        defaultValueAnnotation: Annotation            
        defaultValueAttachment: Attachment            
        defaultValueCodeableConcept: CodeableConcept            
        defaultValueCoding: Coding            
        defaultValueContactPoint: ContactPoint            
        defaultValueCount: Quantity            
        defaultValueDistance: Quantity            
        defaultValueDuration: Quantity            
        defaultValueHumanName: HumanName            
        defaultValueIdentifier: Identifier            
        defaultValueMoney: Money            
        defaultValuePeriod: Period            
        defaultValueQuantity: Quantity            
        defaultValueRange: Range            
        defaultValueRatio: Ratio            
        defaultValueReference: Resource            
        defaultValueSampledData: SampledData            
        defaultValueSignature: Signature            
        defaultValueTiming: BackboneElement            
        defaultValueContactDetail: ContactDetail            
        defaultValueContributor: Contributor            
        defaultValueDataRequirement: DataRequirement            
        defaultValueExpression: Expression            
        defaultValueParameterDefinition: ParameterDefinition            
        defaultValueRelatedArtifact: RelatedArtifact            
        defaultValueTriggerDefinition: TriggerDefinition            
        defaultValueUsageContext: UsageContext            
        defaultValueDosage: BackboneElement            
        defaultValueMeta: Meta            
        meaningWhenMissing: code            
        orderMeaning: code            
        fixedBase64Binary: code            
        fixedBoolean: code            
        fixedCanonical: code            
        fixedCode: code            
        fixedDate: code            
        fixedDateTime: code            
        fixedDecimal: code            
        fixedId: code            
        fixedInstant: code            
        fixedInteger: code            
        fixedMarkdown: code            
        fixedOid: code            
        fixedPositiveInt: code            
        fixedString: code            
        fixedTime: code            
        fixedUnsignedInt: code            
        fixedUri: code            
        fixedUrl: code            
        fixedUuid: code            
        fixedAddress: Address            
        fixedAge: Quantity            
        fixedAnnotation: Annotation            
        fixedAttachment: Attachment            
        fixedCodeableConcept: CodeableConcept            
        fixedCoding: Coding            
        fixedContactPoint: ContactPoint            
        fixedCount: Quantity            
        fixedDistance: Quantity            
        fixedDuration: Quantity            
        fixedHumanName: HumanName            
        fixedIdentifier: Identifier            
        fixedMoney: Money            
        fixedPeriod: Period            
        fixedQuantity: Quantity            
        fixedRange: Range            
        fixedRatio: Ratio            
        fixedReference: Resource            
        fixedSampledData: SampledData            
        fixedSignature: Signature            
        fixedTiming: BackboneElement            
        fixedContactDetail: ContactDetail            
        fixedContributor: Contributor            
        fixedDataRequirement: DataRequirement            
        fixedExpression: Expression            
        fixedParameterDefinition: ParameterDefinition            
        fixedRelatedArtifact: RelatedArtifact            
        fixedTriggerDefinition: TriggerDefinition            
        fixedUsageContext: UsageContext            
        fixedDosage: BackboneElement            
        fixedMeta: Meta            
        patternBase64Binary: code            
        patternBoolean: code            
        patternCanonical: code            
        patternCode: code            
        patternDate: code            
        patternDateTime: code            
        patternDecimal: code            
        patternId: code            
        patternInstant: code            
        patternInteger: code            
        patternMarkdown: code            
        patternOid: code            
        patternPositiveInt: code            
        patternString: code            
        patternTime: code            
        patternUnsignedInt: code            
        patternUri: code            
        patternUrl: code            
        patternUuid: code            
        patternAddress: Address            
        patternAge: Quantity            
        patternAnnotation: Annotation            
        patternAttachment: Attachment            
        patternCodeableConcept: CodeableConcept            
        patternCoding: Coding            
        patternContactPoint: ContactPoint            
        patternCount: Quantity            
        patternDistance: Quantity            
        patternDuration: Quantity            
        patternHumanName: HumanName            
        patternIdentifier: Identifier            
        patternMoney: Money            
        patternPeriod: Period            
        patternQuantity: Quantity            
        patternRange: Range            
        patternRatio: Ratio            
        patternReference: Resource            
        patternSampledData: SampledData            
        patternSignature: Signature            
        patternTiming: BackboneElement            
        patternContactDetail: ContactDetail            
        patternContributor: Contributor            
        patternDataRequirement: DataRequirement            
        patternExpression: Expression            
        patternParameterDefinition: ParameterDefinition            
        patternRelatedArtifact: RelatedArtifact            
        patternTriggerDefinition: TriggerDefinition            
        patternUsageContext: UsageContext            
        patternDosage: BackboneElement            
        patternMeta: Meta            
        example: [BackboneElement]            
        minValueDate: code            
        minValueDateTime: code            
        minValueInstant: code            
        minValueTime: code            
        minValueDecimal: code            
        minValueInteger: code            
        minValuePositiveInt: code            
        minValueUnsignedInt: code            
        minValueQuantity: Quantity            
        maxValueDate: code            
        maxValueDateTime: code            
        maxValueInstant: code            
        maxValueTime: code            
        maxValueDecimal: code            
        maxValueInteger: code            
        maxValuePositiveInt: code            
        maxValueUnsignedInt: code            
        maxValueQuantity: Quantity            
        maxLength: code            
        condition: [code]            
        constraint: [BackboneElement]            
        mustSupport: code            
        isModifier: code            
        isModifierReason: code            
        isSummary: code            
        binding: BackboneElement            
        mapping: [BackboneElement]            
}

extend type Query {
    elementDefinition(id: String): [ElementDefinition]
}