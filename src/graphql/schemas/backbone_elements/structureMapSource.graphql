# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Extension from "../extensions/extension.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Address from "../complex_types/address.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Annotation from "../complex_types/annotation.graphql"
# import Attachment from "../complex_types/attachment.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Coding from "../complex_types/coding.graphql"
# import ContactPoint from "../complex_types/contactPoint.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import HumanName from "../complex_types/humanName.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import Money from "../complex_types/money.graphql"
# import Period from "../complex_types/period.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Range from "../complex_types/range.graphql"
# import Ratio from "../complex_types/ratio.graphql"
# import Resource from "../resources/resource.graphql"
# import SampledData from "../complex_types/sampledData.graphql"
# import Signature from "../complex_types/signature.graphql"
# import Timing from "../backbone_elements/timing.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import Contributor from "../complex_types/contributor.graphql"
# import DataRequirement from "../complex_types/dataRequirement.graphql"
# import Expression from "../complex_types/expression.graphql"
# import ParameterDefinition from "../complex_types/parameterDefinition.graphql"
# import RelatedArtifact from "../complex_types/relatedArtifact.graphql"
# import TriggerDefinition from "../complex_types/triggerDefinition.graphql"
# import UsageContext from "../complex_types/usageContext.graphql"
# import Dosage from "../backbone_elements/dosage.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"



type StructureMapSource {
        id_: code            
        extension: [Extension]            
        modifierExtension: [Extension]            
        context: code!            
        min: code            
        max: code            
        type_: code            
        defaultValueBase64Binary: code            
        defaultValueBoolean: code            
        defaultValueCanonical: code            
        defaultValueCode: code            
        defaultValueDate: code            
        defaultValueDateTime: code            
        defaultValueDecimal: code            
        defaultValueId: code            
        defaultValueInstant: code            
        defaultValueInteger: code            
        defaultValueMarkdown: code            
        defaultValueOid: code            
        defaultValuePositiveInt: code            
        defaultValueString: code            
        defaultValueTime: code            
        defaultValueUnsignedInt: code            
        defaultValueUri: code            
        defaultValueUrl: code            
        defaultValueUuid: code            
        defaultValueAddress: Address            
        defaultValueAge: Quantity            
        defaultValueAnnotation: Annotation            
        defaultValueAttachment: Attachment            
        defaultValueCodeableConcept: CodeableConcept            
        defaultValueCoding: Coding            
        defaultValueContactPoint: ContactPoint            
        defaultValueCount: Quantity            
        defaultValueDistance: Quantity            
        defaultValueDuration: Quantity            
        defaultValueHumanName: HumanName            
        defaultValueIdentifier: Identifier            
        defaultValueMoney: Money            
        defaultValuePeriod: Period            
        defaultValueQuantity: Quantity            
        defaultValueRange: Range            
        defaultValueRatio: Ratio            
        defaultValueReference: Resource            
        defaultValueSampledData: SampledData            
        defaultValueSignature: Signature            
        defaultValueTiming: Timing            
        defaultValueContactDetail: ContactDetail            
        defaultValueContributor: Contributor            
        defaultValueDataRequirement: DataRequirement            
        defaultValueExpression: Expression            
        defaultValueParameterDefinition: ParameterDefinition            
        defaultValueRelatedArtifact: RelatedArtifact            
        defaultValueTriggerDefinition: TriggerDefinition            
        defaultValueUsageContext: UsageContext            
        defaultValueDosage: Dosage            
        defaultValueMeta: Meta            
        element: code            
        listMode: code            
        variable: code            
        condition: code            
        check: code            
        logMessage: code            
}

extend type Query {
    structureMapSource(id: String): [StructureMapSource]
}