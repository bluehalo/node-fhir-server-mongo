# This file is auto-generated by generate_classes so do not edit manually
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import id from "../simple_types/id.graphql"
# import base64Binary from "../simple_types/base64Binary.graphql"
# import canonical from "../simple_types/canonical.graphql"
# import code from "../simple_types/code.graphql"
# import date from "../simple_types/date.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import decimal from "../simple_types/decimal.graphql"
# import id from "../simple_types/id.graphql"
# import instant from "../simple_types/instant.graphql"
# import markdown from "../simple_types/markdown.graphql"
# import oid from "../simple_types/oid.graphql"
# import time from "../simple_types/time.graphql"
# import unsignedInt from "../simple_types/unsignedInt.graphql"
# import uri from "../simple_types/uri.graphql"
# import url from "../simple_types/url.graphql"
# import uuid from "../simple_types/uuid.graphql"
# import Address from "../complex_types/address.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Annotation from "../complex_types/annotation.graphql"
# import Attachment from "../complex_types/attachment.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Coding from "../complex_types/coding.graphql"
# import ContactPoint from "../complex_types/contactPoint.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import HumanName from "../complex_types/humanName.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import Money from "../complex_types/money.graphql"
# import Period from "../complex_types/period.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Range from "../complex_types/range.graphql"
# import Ratio from "../complex_types/ratio.graphql"
# import Resource from "../resources/resource.graphql"
# import SampledData from "../complex_types/sampledData.graphql"
# import Signature from "../complex_types/signature.graphql"
# import Timing from "../backbone_elements/backboneElement.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import Contributor from "../complex_types/contributor.graphql"
# import DataRequirement from "../complex_types/dataRequirement.graphql"
# import Expression from "../complex_types/expression.graphql"
# import ParameterDefinition from "../complex_types/parameterDefinition.graphql"
# import RelatedArtifact from "../complex_types/relatedArtifact.graphql"
# import TriggerDefinition from "../complex_types/triggerDefinition.graphql"
# import UsageContext from "../complex_types/usageContext.graphql"
# import Dosage from "../backbone_elements/backboneElement.graphql"
# import Meta from "../complex_types/meta.graphql"
# import code from "../simple_types/code.graphql"
# import id from "../simple_types/id.graphql"



type StructureMapSource {
        id_: String            
        extension: [Extension]            
        modifierExtension: [Extension]            
        context: id!            
        min: Int            
        max: String            
        type_: String            
        defaultValueBase64Binary: base64Binary            
        defaultValueBoolean: Boolean            
        defaultValueCanonical: canonical            
        defaultValueCode: code            
        defaultValueDate: date            
        defaultValueDateTime: dateTime            
        defaultValueDecimal: decimal            
        defaultValueId: id            
        defaultValueInstant: instant            
        defaultValueInteger: Int            
        defaultValueMarkdown: markdown            
        defaultValueOid: oid            
        defaultValuePositiveInt: Int            
        defaultValueString: String            
        defaultValueTime: time            
        defaultValueUnsignedInt: unsignedInt            
        defaultValueUri: uri            
        defaultValueUrl: url            
        defaultValueUuid: uuid            
        defaultValueAddress: Address            
        defaultValueAge: Quantity            
        defaultValueAnnotation: Annotation            
        defaultValueAttachment: Attachment            
        defaultValueCodeableConcept: CodeableConcept            
        defaultValueCoding: Coding            
        defaultValueContactPoint: ContactPoint            
        defaultValueCount: Quantity            
        defaultValueDistance: Quantity            
        defaultValueDuration: Quantity            
        defaultValueHumanName: HumanName            
        defaultValueIdentifier: Identifier            
        defaultValueMoney: Money            
        defaultValuePeriod: Period            
        defaultValueQuantity: Quantity            
        defaultValueRange: Range            
        defaultValueRatio: Ratio            
        defaultValueReference: Resource            
        defaultValueSampledData: SampledData            
        defaultValueSignature: Signature            
        defaultValueTiming: BackboneElement            
        defaultValueContactDetail: ContactDetail            
        defaultValueContributor: Contributor            
        defaultValueDataRequirement: DataRequirement            
        defaultValueExpression: Expression            
        defaultValueParameterDefinition: ParameterDefinition            
        defaultValueRelatedArtifact: RelatedArtifact            
        defaultValueTriggerDefinition: TriggerDefinition            
        defaultValueUsageContext: UsageContext            
        defaultValueDosage: BackboneElement            
        defaultValueMeta: Meta            
        element: String            
        listMode: code            
        variable: id            
        condition: String            
        check: String            
        logMessage: String            
}

extend type Query {
    structureMapSource(id: String): [StructureMapSource]
}