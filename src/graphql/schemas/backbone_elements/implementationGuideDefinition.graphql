# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import ImplementationGuideGrouping from "../backbone_elements/implementationGuideGrouping.graphql"
# import ImplementationGuideResource from "../backbone_elements/implementationGuideResource.graphql"
# import ImplementationGuidePage from "../backbone_elements/implementationGuidePage.graphql"
# import ImplementationGuideParameter from "../backbone_elements/implementationGuideParameter.graphql"
# import ImplementationGuideTemplate from "../backbone_elements/implementationGuideTemplate.graphql"


"""
ImplementationGuide.Definition
    A set of rules of how a particular interoperability or standards problem is
    solved - typically through the use of FHIR resources. This resource is used to
    gather all the parts of an implementation guide into a logical whole and to
    publish a computable definition of all the parts.
"""
type ImplementationGuideDefinition {
    """
    None
    """
    id: code        
    """
    May be used to represent additional information that is not part of the basic
    definition of the element. To make the use of extensions safe and manageable,
    there is a strict set of governance  applied to the definition and use of
    extensions. Though any implementer can define an extension, there is a set of
    requirements that SHALL be met as part of the definition of the extension.
    """
    extension: [Extension]        
    """
    May be used to represent additional information that is not part of the basic
    definition of the element and that modifies the understanding of the element
    in which it is contained and/or the understanding of the containing element's
    descendants. Usually modifier elements provide negation or qualification. To
    make the use of extensions safe and manageable, there is a strict set of
    governance applied to the definition and use of extensions. Though any
    implementer can define an extension, there is a set of requirements that SHALL
    be met as part of the definition of the extension. Applications processing a
    resource are required to check for modifier extensions.
    
    Modifier extensions SHALL NOT change the meaning of any elements on Resource
    or DomainResource (including cannot change the meaning of modifierExtension
    itself).
    """
    modifierExtension: [Extension]        
    """
    A logical group of resources. Logical groups can be used when building pages.
    """
    grouping: [ImplementationGuideGrouping]        
    """
    A resource that is part of the implementation guide. Conformance resources
    (value set, structure definition, capability statements etc.) are obvious
    candidates for inclusion, but any kind of resource can be included as an
    example resource.
    """
    resource: [ImplementationGuideResource]!        
    """
    A page / section in the implementation guide. The root page is the
    implementation guide home page.
    """
    page: ImplementationGuidePage        
    """
    Defines how IG is built by tools.
    """
    parameter: [ImplementationGuideParameter]        
    """
    A template for building resources.
    """
    template: [ImplementationGuideTemplate]        
}