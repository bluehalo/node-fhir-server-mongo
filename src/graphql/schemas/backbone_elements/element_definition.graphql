# This file is auto-generated by generate_classes so do not edit manually
# import string from "../simple_types/string.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import string from "../simple_types/string.graphql"
# import PropertyRepresentation from "../simple_types/PropertyRepresentation.graphql"
# import string from "../simple_types/string.graphql"
# import boolean from "../simple_types/boolean.graphql"
# import string from "../simple_types/string.graphql"
# import Coding from "../complex_types/Coding.graphql"
# import ElementDefinitionSlicing from "../backbone_elements/ElementDefinitionSlicing.graphql"
# import string from "../simple_types/string.graphql"
# import markdown from "../simple_types/markdown.graphql"
# import markdown from "../simple_types/markdown.graphql"
# import markdown from "../simple_types/markdown.graphql"
# import string from "../simple_types/string.graphql"
# import unsignedInt from "../simple_types/unsignedInt.graphql"
# import string from "../simple_types/string.graphql"
# import ElementDefinitionBase from "../backbone_elements/ElementDefinitionBase.graphql"
# import uri from "../simple_types/uri.graphql"
# import ElementDefinitionType from "../backbone_elements/ElementDefinitionType.graphql"
# import base64Binary from "../simple_types/base64Binary.graphql"
# import boolean from "../simple_types/boolean.graphql"
# import canonical from "../simple_types/canonical.graphql"
# import code from "../simple_types/code.graphql"
# import date from "../simple_types/date.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import decimal from "../simple_types/decimal.graphql"
# import id from "../simple_types/id.graphql"
# import instant from "../simple_types/instant.graphql"
# import integer from "../simple_types/integer.graphql"
# import markdown from "../simple_types/markdown.graphql"
# import oid from "../simple_types/oid.graphql"
# import positiveInt from "../simple_types/positiveInt.graphql"
# import string from "../simple_types/string.graphql"
# import time from "../simple_types/time.graphql"
# import unsignedInt from "../simple_types/unsignedInt.graphql"
# import uri from "../simple_types/uri.graphql"
# import url from "../simple_types/url.graphql"
# import uuid from "../simple_types/uuid.graphql"
# import Address from "../complex_types/Address.graphql"
# import Age from "../simple_types/Age.graphql"
# import Annotation from "../complex_types/Annotation.graphql"
# import Attachment from "../complex_types/Attachment.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Coding from "../complex_types/Coding.graphql"
# import ContactPoint from "../complex_types/ContactPoint.graphql"
# import Count from "../simple_types/Count.graphql"
# import Distance from "../simple_types/Distance.graphql"
# import Duration from "../simple_types/Duration.graphql"
# import HumanName from "../complex_types/HumanName.graphql"
# import Identifier from "../complex_types/Identifier.graphql"
# import Money from "../complex_types/Money.graphql"
# import Period from "../complex_types/Period.graphql"
# import Quantity from "../complex_types/Quantity.graphql"
# import Range from "../complex_types/Range.graphql"
# import Ratio from "../complex_types/Ratio.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import SampledData from "../complex_types/SampledData.graphql"
# import Signature from "../complex_types/Signature.graphql"
# import Timing from "../backbone_elements/Timing.graphql"
# import ContactDetail from "../complex_types/ContactDetail.graphql"
# import Contributor from "../complex_types/Contributor.graphql"
# import DataRequirement from "../complex_types/DataRequirement.graphql"
# import Expression from "../complex_types/Expression.graphql"
# import ParameterDefinition from "../complex_types/ParameterDefinition.graphql"
# import RelatedArtifact from "../complex_types/RelatedArtifact.graphql"
# import TriggerDefinition from "../complex_types/TriggerDefinition.graphql"
# import UsageContext from "../complex_types/UsageContext.graphql"
# import Dosage from "../backbone_elements/Dosage.graphql"
# import Meta from "../complex_types/Meta.graphql"
# import markdown from "../simple_types/markdown.graphql"
# import string from "../simple_types/string.graphql"
# import base64Binary from "../simple_types/base64Binary.graphql"
# import boolean from "../simple_types/boolean.graphql"
# import canonical from "../simple_types/canonical.graphql"
# import code from "../simple_types/code.graphql"
# import date from "../simple_types/date.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import decimal from "../simple_types/decimal.graphql"
# import id from "../simple_types/id.graphql"
# import instant from "../simple_types/instant.graphql"
# import integer from "../simple_types/integer.graphql"
# import markdown from "../simple_types/markdown.graphql"
# import oid from "../simple_types/oid.graphql"
# import positiveInt from "../simple_types/positiveInt.graphql"
# import string from "../simple_types/string.graphql"
# import time from "../simple_types/time.graphql"
# import unsignedInt from "../simple_types/unsignedInt.graphql"
# import uri from "../simple_types/uri.graphql"
# import url from "../simple_types/url.graphql"
# import uuid from "../simple_types/uuid.graphql"
# import Address from "../complex_types/Address.graphql"
# import Age from "../simple_types/Age.graphql"
# import Annotation from "../complex_types/Annotation.graphql"
# import Attachment from "../complex_types/Attachment.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Coding from "../complex_types/Coding.graphql"
# import ContactPoint from "../complex_types/ContactPoint.graphql"
# import Count from "../simple_types/Count.graphql"
# import Distance from "../simple_types/Distance.graphql"
# import Duration from "../simple_types/Duration.graphql"
# import HumanName from "../complex_types/HumanName.graphql"
# import Identifier from "../complex_types/Identifier.graphql"
# import Money from "../complex_types/Money.graphql"
# import Period from "../complex_types/Period.graphql"
# import Quantity from "../complex_types/Quantity.graphql"
# import Range from "../complex_types/Range.graphql"
# import Ratio from "../complex_types/Ratio.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import SampledData from "../complex_types/SampledData.graphql"
# import Signature from "../complex_types/Signature.graphql"
# import Timing from "../backbone_elements/Timing.graphql"
# import ContactDetail from "../complex_types/ContactDetail.graphql"
# import Contributor from "../complex_types/Contributor.graphql"
# import DataRequirement from "../complex_types/DataRequirement.graphql"
# import Expression from "../complex_types/Expression.graphql"
# import ParameterDefinition from "../complex_types/ParameterDefinition.graphql"
# import RelatedArtifact from "../complex_types/RelatedArtifact.graphql"
# import TriggerDefinition from "../complex_types/TriggerDefinition.graphql"
# import UsageContext from "../complex_types/UsageContext.graphql"
# import Dosage from "../backbone_elements/Dosage.graphql"
# import Meta from "../complex_types/Meta.graphql"
# import base64Binary from "../simple_types/base64Binary.graphql"
# import boolean from "../simple_types/boolean.graphql"
# import canonical from "../simple_types/canonical.graphql"
# import code from "../simple_types/code.graphql"
# import date from "../simple_types/date.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import decimal from "../simple_types/decimal.graphql"
# import id from "../simple_types/id.graphql"
# import instant from "../simple_types/instant.graphql"
# import integer from "../simple_types/integer.graphql"
# import markdown from "../simple_types/markdown.graphql"
# import oid from "../simple_types/oid.graphql"
# import positiveInt from "../simple_types/positiveInt.graphql"
# import string from "../simple_types/string.graphql"
# import time from "../simple_types/time.graphql"
# import unsignedInt from "../simple_types/unsignedInt.graphql"
# import uri from "../simple_types/uri.graphql"
# import url from "../simple_types/url.graphql"
# import uuid from "../simple_types/uuid.graphql"
# import Address from "../complex_types/Address.graphql"
# import Age from "../simple_types/Age.graphql"
# import Annotation from "../complex_types/Annotation.graphql"
# import Attachment from "../complex_types/Attachment.graphql"
# import CodeableConcept from "../complex_types/CodeableConcept.graphql"
# import Coding from "../complex_types/Coding.graphql"
# import ContactPoint from "../complex_types/ContactPoint.graphql"
# import Count from "../simple_types/Count.graphql"
# import Distance from "../simple_types/Distance.graphql"
# import Duration from "../simple_types/Duration.graphql"
# import HumanName from "../complex_types/HumanName.graphql"
# import Identifier from "../complex_types/Identifier.graphql"
# import Money from "../complex_types/Money.graphql"
# import Period from "../complex_types/Period.graphql"
# import Quantity from "../complex_types/Quantity.graphql"
# import Range from "../complex_types/Range.graphql"
# import Ratio from "../complex_types/Ratio.graphql"
# import Reference from "../complex_types/Reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import SampledData from "../complex_types/SampledData.graphql"
# import Signature from "../complex_types/Signature.graphql"
# import Timing from "../backbone_elements/Timing.graphql"
# import ContactDetail from "../complex_types/ContactDetail.graphql"
# import Contributor from "../complex_types/Contributor.graphql"
# import DataRequirement from "../complex_types/DataRequirement.graphql"
# import Expression from "../complex_types/Expression.graphql"
# import ParameterDefinition from "../complex_types/ParameterDefinition.graphql"
# import RelatedArtifact from "../complex_types/RelatedArtifact.graphql"
# import TriggerDefinition from "../complex_types/TriggerDefinition.graphql"
# import UsageContext from "../complex_types/UsageContext.graphql"
# import Dosage from "../backbone_elements/Dosage.graphql"
# import Meta from "../complex_types/Meta.graphql"
# import ElementDefinitionExample from "../backbone_elements/ElementDefinitionExample.graphql"
# import date from "../simple_types/date.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import instant from "../simple_types/instant.graphql"
# import time from "../simple_types/time.graphql"
# import decimal from "../simple_types/decimal.graphql"
# import integer from "../simple_types/integer.graphql"
# import positiveInt from "../simple_types/positiveInt.graphql"
# import unsignedInt from "../simple_types/unsignedInt.graphql"
# import Quantity from "../complex_types/Quantity.graphql"
# import date from "../simple_types/date.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import instant from "../simple_types/instant.graphql"
# import time from "../simple_types/time.graphql"
# import decimal from "../simple_types/decimal.graphql"
# import integer from "../simple_types/integer.graphql"
# import positiveInt from "../simple_types/positiveInt.graphql"
# import unsignedInt from "../simple_types/unsignedInt.graphql"
# import Quantity from "../complex_types/Quantity.graphql"
# import integer from "../simple_types/integer.graphql"
# import id from "../simple_types/id.graphql"
# import ElementDefinitionConstraint from "../backbone_elements/ElementDefinitionConstraint.graphql"
# import boolean from "../simple_types/boolean.graphql"
# import boolean from "../simple_types/boolean.graphql"
# import string from "../simple_types/string.graphql"
# import boolean from "../simple_types/boolean.graphql"
# import ElementDefinitionBinding from "../backbone_elements/ElementDefinitionBinding.graphql"
# import ElementDefinitionMapping from "../backbone_elements/ElementDefinitionMapping.graphql"



type ElementDefinition {
        id_: String            
        extension: [Extension]            
        modifierExtension: [Extension]            
        path: String!            
        representation: [code]            
        sliceName: String            
        sliceIsConstraining: Boolean            
        label: String            
        code: [Coding]            
        slicing: ElementDefinitionSlicing            
        short: String            
        definition: markdown            
        comment: markdown            
        requirements: markdown            
        alias: [String]            
        min: unsignedInt            
        max: String            
        base: ElementDefinitionBase            
        contentReference: uri            
        type_: [ElementDefinitionType]            
        defaultValueBase64Binary: base64Binary            
        defaultValueBoolean: Boolean            
        defaultValueCanonical: canonical            
        defaultValueCode: code            
        defaultValueDate: date            
        defaultValueDateTime: dateTime            
        defaultValueDecimal: decimal            
        defaultValueId: id            
        defaultValueInstant: instant            
        defaultValueInteger: Int            
        defaultValueMarkdown: markdown            
        defaultValueOid: oid            
        defaultValuePositiveInt: Int            
        defaultValueString: String            
        defaultValueTime: time            
        defaultValueUnsignedInt: unsignedInt            
        defaultValueUri: uri            
        defaultValueUrl: url            
        defaultValueUuid: uuid            
        defaultValueAddress: Address            
        defaultValueAge: Age            
        defaultValueAnnotation: Annotation            
        defaultValueAttachment: Attachment            
        defaultValueCodeableConcept: CodeableConcept            
        defaultValueCoding: Coding            
        defaultValueContactPoint: ContactPoint            
        defaultValueCount: Count            
        defaultValueDistance: Distance            
        defaultValueDuration: Duration            
        defaultValueHumanName: HumanName            
        defaultValueIdentifier: Identifier            
        defaultValueMoney: Money            
        defaultValuePeriod: Period            
        defaultValueQuantity: Quantity            
        defaultValueRange: Range            
        defaultValueRatio: Ratio            
        defaultValueReference: Resource            
        defaultValueSampledData: SampledData            
        defaultValueSignature: Signature            
        defaultValueTiming: Timing            
        defaultValueContactDetail: ContactDetail            
        defaultValueContributor: Contributor            
        defaultValueDataRequirement: DataRequirement            
        defaultValueExpression: Expression            
        defaultValueParameterDefinition: ParameterDefinition            
        defaultValueRelatedArtifact: RelatedArtifact            
        defaultValueTriggerDefinition: TriggerDefinition            
        defaultValueUsageContext: UsageContext            
        defaultValueDosage: Dosage            
        defaultValueMeta: Meta            
        meaningWhenMissing: markdown            
        orderMeaning: String            
        fixedBase64Binary: base64Binary            
        fixedBoolean: Boolean            
        fixedCanonical: canonical            
        fixedCode: code            
        fixedDate: date            
        fixedDateTime: dateTime            
        fixedDecimal: decimal            
        fixedId: id            
        fixedInstant: instant            
        fixedInteger: Int            
        fixedMarkdown: markdown            
        fixedOid: oid            
        fixedPositiveInt: Int            
        fixedString: String            
        fixedTime: time            
        fixedUnsignedInt: unsignedInt            
        fixedUri: uri            
        fixedUrl: url            
        fixedUuid: uuid            
        fixedAddress: Address            
        fixedAge: Age            
        fixedAnnotation: Annotation            
        fixedAttachment: Attachment            
        fixedCodeableConcept: CodeableConcept            
        fixedCoding: Coding            
        fixedContactPoint: ContactPoint            
        fixedCount: Count            
        fixedDistance: Distance            
        fixedDuration: Duration            
        fixedHumanName: HumanName            
        fixedIdentifier: Identifier            
        fixedMoney: Money            
        fixedPeriod: Period            
        fixedQuantity: Quantity            
        fixedRange: Range            
        fixedRatio: Ratio            
        fixedReference: Resource            
        fixedSampledData: SampledData            
        fixedSignature: Signature            
        fixedTiming: Timing            
        fixedContactDetail: ContactDetail            
        fixedContributor: Contributor            
        fixedDataRequirement: DataRequirement            
        fixedExpression: Expression            
        fixedParameterDefinition: ParameterDefinition            
        fixedRelatedArtifact: RelatedArtifact            
        fixedTriggerDefinition: TriggerDefinition            
        fixedUsageContext: UsageContext            
        fixedDosage: Dosage            
        fixedMeta: Meta            
        patternBase64Binary: base64Binary            
        patternBoolean: Boolean            
        patternCanonical: canonical            
        patternCode: code            
        patternDate: date            
        patternDateTime: dateTime            
        patternDecimal: decimal            
        patternId: id            
        patternInstant: instant            
        patternInteger: Int            
        patternMarkdown: markdown            
        patternOid: oid            
        patternPositiveInt: Int            
        patternString: String            
        patternTime: time            
        patternUnsignedInt: unsignedInt            
        patternUri: uri            
        patternUrl: url            
        patternUuid: uuid            
        patternAddress: Address            
        patternAge: Age            
        patternAnnotation: Annotation            
        patternAttachment: Attachment            
        patternCodeableConcept: CodeableConcept            
        patternCoding: Coding            
        patternContactPoint: ContactPoint            
        patternCount: Count            
        patternDistance: Distance            
        patternDuration: Duration            
        patternHumanName: HumanName            
        patternIdentifier: Identifier            
        patternMoney: Money            
        patternPeriod: Period            
        patternQuantity: Quantity            
        patternRange: Range            
        patternRatio: Ratio            
        patternReference: Resource            
        patternSampledData: SampledData            
        patternSignature: Signature            
        patternTiming: Timing            
        patternContactDetail: ContactDetail            
        patternContributor: Contributor            
        patternDataRequirement: DataRequirement            
        patternExpression: Expression            
        patternParameterDefinition: ParameterDefinition            
        patternRelatedArtifact: RelatedArtifact            
        patternTriggerDefinition: TriggerDefinition            
        patternUsageContext: UsageContext            
        patternDosage: Dosage            
        patternMeta: Meta            
        example: [ElementDefinitionExample]            
        minValueDate: date            
        minValueDateTime: dateTime            
        minValueInstant: instant            
        minValueTime: time            
        minValueDecimal: decimal            
        minValueInteger: Int            
        minValuePositiveInt: Int            
        minValueUnsignedInt: unsignedInt            
        minValueQuantity: Quantity            
        maxValueDate: date            
        maxValueDateTime: dateTime            
        maxValueInstant: instant            
        maxValueTime: time            
        maxValueDecimal: decimal            
        maxValueInteger: Int            
        maxValuePositiveInt: Int            
        maxValueUnsignedInt: unsignedInt            
        maxValueQuantity: Quantity            
        maxLength: Int            
        condition: [id]            
        constraint: [ElementDefinitionConstraint]            
        mustSupport: Boolean            
        isModifier: Boolean            
        isModifierReason: String            
        isSummary: Boolean            
        binding: ElementDefinitionBinding            
        mapping: [ElementDefinitionMapping]            
}

extend type Query {
    elementDefinition(id: String): [ElementDefinition]
}