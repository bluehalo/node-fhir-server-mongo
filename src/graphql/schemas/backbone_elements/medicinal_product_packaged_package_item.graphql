# This file is auto-generated by generate_classes so do not edit manually
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Reference from "../complex_types/reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import Reference from "../complex_types/reference.graphql"
# import Reference from "../resources/Reference.graphql"
# import ProdCharacteristic from "../backbone_elements/backbone_element.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import ProductShelfLife from "../backbone_elements/backbone_element.graphql"
# import Reference from "../complex_types/reference.graphql"
# import Reference from "../resources/Reference.graphql"



type MedicinalProductPackagedPackageItem {
        id_: String            
        extension: [Extension]            
        modifierExtension: [Extension]            
        identifier: [Identifier]            
        type_: CodeableConcept!            
        quantity: Quantity!            
        material: [CodeableConcept]            
        alternateMaterial: [CodeableConcept]            
        device: [Resource]            
        manufacturedItem: [Resource]            
        packageItem: [BackboneElement]            
        physicalCharacteristics: BackboneElement            
        otherCharacteristics: [CodeableConcept]            
        shelfLifeStorage: [BackboneElement]            
        manufacturer: [Resource]            
}

extend type Query {
    medicinalProductPackagedPackageItem(id: String): [MedicinalProductPackagedPackageItem]
}