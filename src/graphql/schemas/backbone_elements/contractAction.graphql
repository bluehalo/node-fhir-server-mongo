# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/Extension.graphql"
# import Extension from "../extensions/Extension.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import ContractSubject from "../backbone_elements/backboneElement.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Resource from "../resources/resource.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Period from "../complex_types/period.graphql"
# import Timing from "../backbone_elements/backboneElement.graphql"
# import Resource from "../resources/resource.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Resource from "../resources/resource.graphql"
# import code from "../simple_types/code.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Resource from "../resources/resource.graphql"
# import code from "../simple_types/code.graphql"
# import code from "../simple_types/code.graphql"
# import Annotation from "../complex_types/annotation.graphql"
# import code from "../simple_types/code.graphql"



type ContractAction {
        id_: code            
        extension: [Extension]            
        modifierExtension: [Extension]            
        doNotPerform: code            
        type_: CodeableConcept!            
        subject: [BackboneElement]            
        intent: CodeableConcept!            
        linkId: [code]            
        status: CodeableConcept!            
        context: Resource            
        contextLinkId: [code]            
        occurrenceDateTime: code            
        occurrencePeriod: Period            
        occurrenceTiming: BackboneElement            
        requester: [Resource]            
        requesterLinkId: [code]            
        performerType: [CodeableConcept]            
        performerRole: CodeableConcept            
        performer: Resource            
        performerLinkId: [code]            
        reasonCode: [CodeableConcept]            
        reasonReference: [Resource]            
        reason: [code]            
        reasonLinkId: [code]            
        note: [Annotation]            
        securityLabelNumber: [code]            
}

extend type Query {
    contractAction(id: String): [ContractAction]
}