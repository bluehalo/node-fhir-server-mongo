# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"


"""
Attachment
    For referring to data content defined in other formats.
    If the element is present, it must have a value for at least one of the
    defined elements, an @id referenced from the Narrative, or extensions
"""
type Attachment {
    """
    None
    """
    id: code        
    """
    May be used to represent additional information that is not part of the basic
    definition of the element. To make the use of extensions safe and manageable,
    there is a strict set of governance  applied to the definition and use of
    extensions. Though any implementer can define an extension, there is a set of
    requirements that SHALL be met as part of the definition of the extension.
    """
    extension: [Extension]        
    """
    Identifies the type of the data in the attachment and allows a method to be
    chosen to interpret or render the data. Includes mime type parameters such as
    charset where appropriate.
    """
    contentType: code        
    """
    The human language of the content. The value can be any valid value according
    to BCP 47.
    """
    language: code        
    """
    The actual data of the attachment - a sequence of bytes, base64 encoded.
    """
    data: code        
    """
    A location where the data can be accessed.
    """
    url: code        
    """
    The number of bytes of data that make up this attachment (before base64
    encoding, if that is done).
    """
    size: code        
    """
    The calculated hash of the data using SHA-1. Represented using base64.
    """
    hash: code        
    """
    A label or set of text to display in place of the data.
    """
    title: code        
    """
    The date that the attachment was first created.
    """
    creation: code        
}