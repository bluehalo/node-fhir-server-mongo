# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"


"""
ParameterDefinition
    The parameters to the module. This collection specifies both the input and
    output parameters. Input parameters are provided by the caller as part of the
    $evaluate operation. Output parameters are included in the GuidanceResponse.
    If the element is present, it must have a value for at least one of the
    defined elements, an @id referenced from the Narrative, or extensions
"""
type ParameterDefinition {
    """
    None
    """
    id: code        
    """
    May be used to represent additional information that is not part of the basic
    definition of the element. To make the use of extensions safe and manageable,
    there is a strict set of governance  applied to the definition and use of
    extensions. Though any implementer can define an extension, there is a set of
    requirements that SHALL be met as part of the definition of the extension.
    """
    extension: [Extension]        
    """
    The name of the parameter used to allow access to the value of the parameter
    in evaluation contexts.
    """
    name: code        
    """
    Whether the parameter is input or output for the module.
    """
    use: code!        
    """
    The minimum number of times this parameter SHALL appear in the request or
    response.
    """
    min: code        
    """
    The maximum number of times this element is permitted to appear in the request
    or response.
    """
    max: code        
    """
    A brief discussion of what the parameter is for and how it is used by the
    module.
    """
    documentation: code        
    """
    The type of the parameter.
    """
    type: code!        
    """
    If specified, this indicates a profile that the input data must conform to, or
    that the output data will conform to.
    """
    profile: code        
}