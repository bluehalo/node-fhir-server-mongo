# This file is auto-generated by generate_classes so do not edit manually
# import code from "../simple_types/code.graphql"
# import Extension from "../extensions/extension.graphql"
# import Coding from "../complex_types/coding.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Range from "../complex_types/range.graphql"
# import PlanDefinition from "../resources/planDefinition.graphql"
# import ResearchStudy from "../resources/researchStudy.graphql"
# import InsurancePlan from "../resources/insurancePlan.graphql"
# import HealthcareService from "../resources/healthcareService.graphql"
# import Group from "../resources/group.graphql"
# import Location from "../resources/location.graphql"
# import Organization from "../resources/organization.graphql"

union UsageContextValueReference = PlanDefinition | ResearchStudy | InsurancePlan | HealthcareService | Group | Location | Organization

"""
UsageContext
    Specifies clinical/business/etc. metadata that can be used to retrieve, index
    and/or categorize an artifact. This metadata can either be specific to the
    applicable population (e.g., age category, DRG) or the specific context of
    care (e.g., venue, care setting, provider of care).
    If the element is present, it must have a value for at least one of the
    defined elements, an @id referenced from the Narrative, or extensions
"""
type UsageContext {
    """
    None
    """
    id: code        
    """
    May be used to represent additional information that is not part of the basic
    definition of the element. To make the use of extensions safe and manageable,
    there is a strict set of governance  applied to the definition and use of
    extensions. Though any implementer can define an extension, there is a set of
    requirements that SHALL be met as part of the definition of the extension.
    """
    extension: [Extension]        
    """
    A code that identifies the type of context being specified by this usage
    context.
    """
    code: Coding!        
    """
    None
    """
    valueCodeableConcept: CodeableConcept        
    """
    None
    """
    valueQuantity: Quantity        
    """
    None
    """
    valueRange: Range        
    """
    None
    """
    valueReference: UsageContextValueReference        
}