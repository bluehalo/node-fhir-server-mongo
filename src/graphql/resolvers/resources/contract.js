// This code is generated by a code generator.  Do not edit.
const {resolveType, findResourcesByReference, findResourceByReference, getResources} = require('../../common');

// noinspection JSUnusedLocalSymbols
module.exports = {
    Query: {
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        contract: async (parent, args, context, info) => {
            return await getResources(
                parent,
                args,
                context,
                info,
                'Contract'
            );
        }
    },
    ContractAuthor: {
        __resolveType(obj, context, info) {
            return resolveType(obj, context, info);
        },
    },
    ContractLegallyBindingReference: {
        __resolveType(obj, context, info) {
            return resolveType(obj, context, info);
        },
    },
    Contract: {
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        instantiatesCanonical: async (parent, args, context, info) => {
            return await findResourceByReference(parent.instantiatesCanonical);
        },
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        subject: async (parent, args, context, info) => {
            return await findResourcesByReference(parent.subject);
        },
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        authority: async (parent, args, context, info) => {
            return await findResourcesByReference(parent.authority);
        },
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        domain: async (parent, args, context, info) => {
            return await findResourcesByReference(parent.domain);
        },
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        site: async (parent, args, context, info) => {
            return await findResourcesByReference(parent.site);
        },
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        author: async (parent, args, context, info) => {
            return await findResourceByReference(parent.author);
        },
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        topicReference: async (parent, args, context, info) => {
            return await findResourceByReference(parent.topicReference);
        },
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        supportingInfo: async (parent, args, context, info) => {
            return await findResourcesByReference(parent.supportingInfo);
        },
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        relevantHistory: async (parent, args, context, info) => {
            return await findResourcesByReference(parent.relevantHistory);
        },
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        legallyBindingReference: async (parent, args, context, info) => {
            return await findResourceByReference(parent.legallyBindingReference);
        },
    }
};

