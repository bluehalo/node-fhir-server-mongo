// This code is generated by a code generator.  Do not edit.
const {search} = require('../../../operations/search/search');
const {searchById} = require('../../../operations/searchById/searchById');
const {unBundle, resolveType, findResourcesByReference, findResourceByReference, getResources} = require('../../common');
const {NotFoundError} = require('../../../utils/httpErrors');

// noinspection JSUnusedLocalSymbols
module.exports = {
    Query: {
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        adverseEvent: async (parent, args, context, info) => {
            return await getResources(
                parent,
                args,
                context,
                info,
                'AdverseEvent'
            );
        }
    },
    AdverseEventSubject: {
        __resolveType(obj, context, info) {
            return resolveType(obj, context, info);
        },
    },
    AdverseEventRecorder: {
        __resolveType(obj, context, info) {
            return resolveType(obj, context, info);
        },
    },
    AdverseEventContributor: {
        __resolveType(obj, context, info) {
            return resolveType(obj, context, info);
        },
    },
    AdverseEventSubjectMedicalHistory: {
        __resolveType(obj, context, info) {
            return resolveType(obj, context, info);
        },
    },
    AdverseEvent: {
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        subject: async (parent, args, context, info) => {
            return await findResourceByReference(parent.subject);
        },
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        encounter: async (parent, args, context, info) => {
            return await findResourceByReference(parent.encounter);
        },
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        resultingCondition: async (parent, args, context, info) => {
            return await findResourcesByReference(parent.resultingCondition);
        },
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        location: async (parent, args, context, info) => {
            return await findResourceByReference(parent.location);
        },
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        recorder: async (parent, args, context, info) => {
            return await findResourceByReference(parent.recorder);
        },
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        contributor: async (parent, args, context, info) => {
            return await findResourcesByReference(parent.contributor);
        },
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        subjectMedicalHistory: async (parent, args, context, info) => {
            return await findResourcesByReference(parent.subjectMedicalHistory);
        },
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        referenceDocument: async (parent, args, context, info) => {
            return await findResourcesByReference(parent.referenceDocument);
        },
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        study: async (parent, args, context, info) => {
            return await findResourcesByReference(parent.study);
        },
    }
};

