// This code is generated by a code generator.  Do not edit.
/*eslint no-unused-vars: "off"*/
const {resolveType, findResourcesByReference, findResourceByReference, getResources} = require('../../common');

// noinspection JSUnusedLocalSymbols
module.exports = {
    Query: {
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        observation: async (parent, args, context, info) => {
            return await getResources(
                parent,
                args,
                context,
                info,
                'Observation'
            );
        }
    },
    ObservationBasedOn: {
        __resolveType(obj, context, info) {
            return resolveType(obj, context, info);
        },
    },
    ObservationPartOf: {
        __resolveType(obj, context, info) {
            return resolveType(obj, context, info);
        },
    },
    ObservationSubject: {
        __resolveType(obj, context, info) {
            return resolveType(obj, context, info);
        },
    },
    ObservationPerformer: {
        __resolveType(obj, context, info) {
            return resolveType(obj, context, info);
        },
    },
    ObservationDevice: {
        __resolveType(obj, context, info) {
            return resolveType(obj, context, info);
        },
    },
    ObservationHasMember: {
        __resolveType(obj, context, info) {
            return resolveType(obj, context, info);
        },
    },
    ObservationDerivedFrom: {
        __resolveType(obj, context, info) {
            return resolveType(obj, context, info);
        },
    },
    Observation: {
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        basedOn: async (parent, args, context, info) => {
            return await findResourcesByReference(
                args,
                context,
                info,
                parent.basedOn);
        },
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        partOf: async (parent, args, context, info) => {
            return await findResourcesByReference(
                args,
                context,
                info,
                parent.partOf);
        },
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        subject: async (parent, args, context, info) => {
            return await findResourceByReference(
                args,
                context,
                info,
                parent.subject);
        },
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        focus: async (parent, args, context, info) => {
            return await findResourcesByReference(
                args,
                context,
                info,
                parent.focus);
        },
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        encounter: async (parent, args, context, info) => {
            return await findResourceByReference(
                args,
                context,
                info,
                parent.encounter);
        },
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        performer: async (parent, args, context, info) => {
            return await findResourcesByReference(
                args,
                context,
                info,
                parent.performer);
        },
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        specimen: async (parent, args, context, info) => {
            return await findResourceByReference(
                args,
                context,
                info,
                parent.specimen);
        },
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        device: async (parent, args, context, info) => {
            return await findResourceByReference(
                args,
                context,
                info,
                parent.device);
        },
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        hasMember: async (parent, args, context, info) => {
            return await findResourcesByReference(
                args,
                context,
                info,
                parent.hasMember);
        },
        // noinspection JSUnusedLocalSymbols
        // eslint-disable-next-line no-unused-vars
        derivedFrom: async (parent, args, context, info) => {
            return await findResourcesByReference(
                args,
                context,
                info,
                parent.derivedFrom);
        },
    }
};

