# This file is auto-generated by generate_classes so do not edit manually
{% macro lower_case_first_letter(text) %}
    {{- text[0]|lower}}{{text[1:] -}}
{% endmacro %}
{% macro upper_case_first_letter(text) %}
    {{- text[0]|upper}}{{text[1:] -}}
{% endmacro %}
# import {{ fhir_entity.fhir_name }} from "../resources/{{ lower_case_first_letter(fhir_entity.fhir_name) }}.graphql"

extend type Query {
    """
    {{fhir_entity.fhir_name}}
    {% for documentation_item in fhir_entity.documentation %}
        {{ documentation_item | wordwrap(78) | replace('\n', '\n    ') | replace('\r', '\n    ') }}
    {%  endfor %}
    """
    {{  lower_case_first_letter(fhir_entity.cleaned_name) }}(

        # some old search parameters that we misspelled in the past so have to maintain backwards compatibility
        """
        list of ids to retrieve.  DEPRECATED: Use `_id`
        """
        id: [String]

        # search parameters for all resources
    {% for search_parameter_name, search_parameter in search_parameters_for_all_resources.items() %}
        """
        {{ search_parameter_name }} (FHIR type: {{ search_parameter.type }})
        {{ search_parameter.description }}
        """
        {% if search_parameter.type == "string" %}
        {{ search_parameter_name.replace("-", "_") }}: SearchString
        {% elif search_parameter.type in [ 'date'] %}
        {{ search_parameter_name.replace("-", "_") }}: SearchDate
        {% elif search_parameter.type in ['dateTime', 'period', 'instant'] %}
        {{ search_parameter_name.replace("-", "_") }}: SearchDateTime
        {% elif search_parameter_name == "_id" %}
        {{ search_parameter_name.replace("-", "_") }}: SearchString
        {% elif search_parameter.type == "token" %}
        {{ search_parameter_name.replace("-", "_") }}: SearchToken
        {% elif search_parameter.type == "uri" %}
        {{ search_parameter_name.replace("-", "_") }}: SearchString
        {% elif search_parameter.type == "reference" %}
        {{ search_parameter_name.replace("-", "_") }}: SearchReference
        {% elif search_parameter.type == "quantity" %}
        {{ search_parameter_name.replace("-", "_") }}: SearchQuantity
        {% elif search_parameter.type == "special" %}
        {{ search_parameter_name.replace("-", "_") }}: String
        {% elif search_parameter.type == "number" %}
        {{ search_parameter_name.replace("-", "_") }}: SearchNumber
        {% endif %}
    {%  endfor %}

        # search parameters for {{fhir_entity.fhir_name}}
    {% for search_parameter_name, search_parameter in search_parameters_for_current_resource.items() %}
        """
        {{ search_parameter_name }} (FHIR type: {{ search_parameter.type }})
        {{ search_parameter.description }}
        """
        {% if search_parameter.type == "string" %}
        {{ search_parameter_name.replace("-", "_") }}: SearchString
        {% elif search_parameter.type in [ 'date'] %}
        {{ search_parameter_name.replace("-", "_") }}: SearchDate
        {% elif search_parameter.type in ['dateTime', 'period', 'instant'] %}
        {{ search_parameter_name.replace("-", "_") }}: SearchDateTime
        {% elif search_parameter_name == "_id" %}
        {{ search_parameter_name.replace("-", "_") }}: SearchString
        {% elif search_parameter.type == "token" %}
        {{ search_parameter_name.replace("-", "_") }}: SearchToken
        {% elif search_parameter.type == "uri" %}
        {{ search_parameter_name.replace("-", "_") }}: SearchString
        {% elif search_parameter.type == "reference" %}
        {{ search_parameter_name.replace("-", "_") }}: SearchReference
        {% elif search_parameter.type == "quantity" %}
        {{ search_parameter_name.replace("-", "_") }}: SearchQuantity
        {% elif search_parameter.type == "special" %}
        {{ search_parameter_name.replace("-", "_") }}: String
        {% elif search_parameter.type == "number" %}
        {{ search_parameter_name.replace("-", "_") }}: SearchNumber
        {% endif %}
    {%  endfor %}

        # miscellaneous parameters
        """
        return total number of records that meet this query
        """
        _total: TotalType
        """
        sort records by these fields.  The fields can be nested fields. Prepend with "-" to indicate descending sort
            Examples: ["id", "-meta.lastUpdated"]
        """
        _sort: [String]
        """
        limit records to this count.  Default is 10
        """
        _count: Int
        """
        page number to retrieve
        """
        _getpagesoffset: Int
    ): {{fhir_entity.cleaned_name}}Bundle
}
