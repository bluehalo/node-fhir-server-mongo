# This file is auto-generated by generate_classes so do not edit manually
# import Extension from "../extensions/extension.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import code from "../simple_types/code.graphql"
# import SpecimenDefinitionContainer from "../backbone_elements/specimenDefinitionContainer.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import SpecimenDefinitionHandling from "../backbone_elements/specimenDefinitionHandling.graphql"


"""
SpecimenDefinition.TypeTested
    A kind of specimen with associated set of requirements.
"""
type SpecimenDefinitionTypeTested {
    """
    None
    """
    id: String        
    """
    May be used to represent additional information that is not part of the basic
    definition of the element. To make the use of extensions safe and manageable,
    there is a strict set of governance  applied to the definition and use of
    extensions. Though any implementer can define an extension, there is a set of
    requirements that SHALL be met as part of the definition of the extension.
    """
    extension: [Extension]        
    """
    May be used to represent additional information that is not part of the basic
    definition of the element and that modifies the understanding of the element
    in which it is contained and/or the understanding of the containing element's
    descendants. Usually modifier elements provide negation or qualification. To
    make the use of extensions safe and manageable, there is a strict set of
    governance applied to the definition and use of extensions. Though any
    implementer can define an extension, there is a set of requirements that SHALL
    be met as part of the definition of the extension. Applications processing a
    resource are required to check for modifier extensions.
    
    Modifier extensions SHALL NOT change the meaning of any elements on Resource
    or DomainResource (including cannot change the meaning of modifierExtension
    itself).
    """
    modifierExtension: [Extension]        
    """
    Primary of secondary specimen.
    """
    isDerived: Boolean        
    """
    The kind of specimen conditioned for testing expected by lab.
    """
    type: CodeableConcept        
    """
    The preference for this type of conditioned specimen.
    """
    preference: code!        
    """
    The specimen's container.
    """
    container: SpecimenDefinitionContainer        
    """
    Requirements for delivery and special handling of this kind of conditioned
    specimen.
    """
    requirement: String        
    """
    The usual time that a specimen of this kind is retained after the ordered
    tests are completed, for the purpose of additional testing.
    """
    retentionTime: Quantity        
    """
    Criterion for rejection of the specimen in its container by the laboratory.
    """
    rejectionCriterion: [CodeableConcept]        
    """
    Set of instructions for preservation/transport of the specimen at a defined
    temperature interval, prior the testing process.
    """
    handling: [SpecimenDefinitionHandling]        
}