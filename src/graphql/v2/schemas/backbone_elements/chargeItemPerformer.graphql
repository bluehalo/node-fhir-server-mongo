# This file is auto-generated by generate_classes so do not edit manually
# import Extension from "../extensions/extension.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import Organization from "../resources/organization.graphql"
# import CareTeam from "../resources/careTeam.graphql"
# import Patient from "../resources/patient.graphql"
# import Device from "../resources/device.graphql"
# import RelatedPerson from "../resources/relatedPerson.graphql"

union ChargeItemPerformerActor = Practitioner | PractitionerRole | Organization | CareTeam | Patient | Device | RelatedPerson

"""
ChargeItem.Performer
    The resource ChargeItem describes the provision of healthcare provider
    products for a certain patient, therefore referring not only to the product,
    but containing in addition details of the provision, like date, time, amounts
    and participating organizations and persons. Main Usage of the ChargeItem is
    to enable the billing process and internal cost allocation.
"""
type ChargeItemPerformer {
    """
    None
    """
    id: String        
    """
    May be used to represent additional information that is not part of the basic
    definition of the element. To make the use of extensions safe and manageable,
    there is a strict set of governance  applied to the definition and use of
    extensions. Though any implementer can define an extension, there is a set of
    requirements that SHALL be met as part of the definition of the extension.
    """
    extension: [Extension]        
    """
    May be used to represent additional information that is not part of the basic
    definition of the element and that modifies the understanding of the element
    in which it is contained and/or the understanding of the containing element's
    descendants. Usually modifier elements provide negation or qualification. To
    make the use of extensions safe and manageable, there is a strict set of
    governance applied to the definition and use of extensions. Though any
    implementer can define an extension, there is a set of requirements that SHALL
    be met as part of the definition of the extension. Applications processing a
    resource are required to check for modifier extensions.
    
    Modifier extensions SHALL NOT change the meaning of any elements on Resource
    or DomainResource (including cannot change the meaning of modifierExtension
    itself).
    """
    modifierExtension: [Extension]        
    """
    Describes the type of performance or participation(e.g. primary surgeon,
    anesthesiologiest, etc.).
    """
    function: CodeableConcept        
    """
    The device, practitioner, etc. who performed or participated in the service.
    """
    actor: ChargeItemPerformerActor!        
}