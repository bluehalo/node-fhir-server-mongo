# This file is auto-generated by generate_classes so do not edit manually
# import Provenance from "../resources/provenance.graphql"

extend type Query {
    """
    Provenance
        Provenance of a resource is a record that describes entities and processes
    involved in producing and delivering or otherwise influencing that resource.
    Provenance provides a critical foundation for assessing authenticity, enabling
    trust, and allowing reproducibility. Provenance assertions are a form of
    contextual metadata and can themselves become important records with their own
    provenance. Provenance statement indicates clinical significance in terms of
    confidence in authenticity, reliability, and trustworthiness, integrity, and
    stage in lifecycle (e.g. Document Completion - has the artifact been legally
    authenticated), all of which may impact security, privacy, and trust policies.
        If the element is present, it must have either a @value, an @id, or extensions
    """
    provenance(

        # some old search parameters that we misspelled in the past so have to maintain backwards compatibility
        """
        list of ids to retrieve.  DEPRECATED: Use `_id`
        """
        id: [String]

        # search parameters for all resources
        """
        _id (FHIR type: token)
        Logical id of this artifact
        """
        _id: SearchString
        """
        _lastUpdated (FHIR type: date)
        When the resource version last changed
        """
        _lastUpdated: SearchDate
        """
        _profile (FHIR type: uri)
        Profiles this resource claims to conform to
        """
        _profile: SearchString
        """
        _security (FHIR type: token)
        Security Labels applied to this resource
        """
        _security: SearchToken
        """
        _source (FHIR type: uri)
        Identifies where the resource comes from
        """
        _source: SearchString
        """
        _tag (FHIR type: token)
        Tags applied to this resource
        """
        _tag: SearchToken

        # search parameters for Provenance
        """
        agent (FHIR type: reference)
        Who participated
        """
        agent: SearchReference
        """
        agent-role (FHIR type: token)
        What the agents role was
        """
        agent_role: SearchToken
        """
        agent-type (FHIR type: token)
        How the agent participated
        """
        agent_type: SearchToken
        """
        entity (FHIR type: reference)
        Identity of entity
        """
        entity: SearchReference
        """
        location (FHIR type: reference)
        Where the activity occurred, if relevant
        """
        location: SearchReference
        """
        patient (FHIR type: reference)
        Target Reference(s) (usually version specific)
        """
        patient: SearchReference
        """
        recorded (FHIR type: date)
        When the activity was recorded / updated
        """
        recorded: SearchDate
        """
        signature-type (FHIR type: token)
        Indication of the reason the entity signed the object(s)
        """
        signature_type: SearchToken
        """
        target (FHIR type: reference)
        Target Reference(s) (usually version specific)
        """
        target: SearchReference
        """
        when (FHIR type: date)
        When the activity occurred
        """
        when: SearchDate

        # miscellaneous parameters
        """
        return total number of records that meet this query
        """
        _total: TotalType
        """
        sort records by these fields.  The fields can be nested fields. Prepend with "-" to indicate descending sort
            Examples: ["id", "-meta.lastUpdated"]
        """
        _sort: [String]
        """
        limit records to this count.  Default is 10
        """
        _count: Int
        """
        page number to retrieve
        """
        _getpagesoffset: Int
    ): [Provenance]
}