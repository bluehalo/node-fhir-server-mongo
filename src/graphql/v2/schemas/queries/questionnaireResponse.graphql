# This file is auto-generated by generate_classes so do not edit manually
# import QuestionnaireResponse from "../resources/questionnaireResponse.graphql"

extend type Query {
    """
    QuestionnaireResponse
        A structured set of questions and their answers. The questions are ordered and
    grouped into coherent subsets, corresponding to the structure of the grouping
    of the questionnaire being responded to.
        If the element is present, it must have either a @value, an @id, or extensions
    """
    questionnaireResponse(

        # some old search parameters that we misspelled in the past so have to maintain backwards compatibility
        """
        list of ids to retrieve.  DEPRECATED: Use `_id`
        """
        id: [String]

        # search parameters for all resources
        """
        _id (FHIR type: token)
        Logical id of this artifact
        """
        _id: SearchString
        """
        _lastUpdated (FHIR type: date)
        When the resource version last changed
        """
        _lastUpdated: SearchDate
        """
        _profile (FHIR type: uri)
        Profiles this resource claims to conform to
        """
        _profile: SearchString
        """
        _security (FHIR type: token)
        Security Labels applied to this resource
        """
        _security: SearchToken
        """
        _source (FHIR type: uri)
        Identifies where the resource comes from
        """
        _source: SearchString
        """
        _tag (FHIR type: token)
        Tags applied to this resource
        """
        _tag: SearchToken

        # search parameters for QuestionnaireResponse
        """
        author (FHIR type: reference)
        The author of the questionnaire response
        """
        author: SearchReference
        """
        authored (FHIR type: date)
        When the questionnaire response was last changed
        """
        authored: SearchDate
        """
        based-on (FHIR type: reference)
        Plan/proposal/order fulfilled by this questionnaire response
        """
        based_on: SearchReference
        """
        encounter (FHIR type: reference)
        Encounter associated with the questionnaire response
        """
        encounter: SearchReference
        """
        identifier (FHIR type: token)
        The unique identifier for the questionnaire response
        """
        identifier: SearchToken
        """
        part-of (FHIR type: reference)
        Procedure or observation this questionnaire response was performed as a part of
        """
        part_of: SearchReference
        """
        patient (FHIR type: reference)
        The patient that is the subject of the questionnaire response
        """
        patient: SearchReference
        """
        questionnaire (FHIR type: reference)
        The questionnaire the answers are provided for
        """
        questionnaire: SearchReference
        """
        source (FHIR type: reference)
        The individual providing the information reflected in the questionnaire respose
        """
        source: SearchReference
        """
        status (FHIR type: token)
        The status of the questionnaire response
        """
        status: SearchToken
        """
        subject (FHIR type: reference)
        The subject of the questionnaire response
        """
        subject: SearchReference

        # miscellaneous parameters
        """
        return total number of records that meet this query
        """
        _total: TotalType
        """
        sort records by these fields.  The fields can be nested fields. Prepend with "-" to indicate descending sort
            Examples: ["id", "-meta.lastUpdated"]
        """
        _sort: [String]
        """
        limit records to this count.  Default is 10
        """
        _count: Int
        """
        page number to retrieve
        """
        _getpagesoffset: Int
    ): QuestionnaireResponseBundle
}