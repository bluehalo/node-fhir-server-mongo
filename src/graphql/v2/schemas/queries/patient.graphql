# This file is auto-generated by generate_classes so do not edit manually
# import Patient from "../resources/patient.graphql"

extend type Query {
    """
    Patient
        Demographics and other administrative information about an individual or
    animal receiving care or other health-related services.
        If the element is present, it must have either a @value, an @id, or extensions
    """
    patient(

        # some old search parameters that we misspelled in the past so have to maintain backwards compatibility
        """
        list of ids to retrieve.  DEPRECATED: Use `_id`
        """
        id: [String]

        # search parameters for all resources
        """
        _id (FHIR type: token)
        Logical id of this artifact
        """
        _id: SearchString
        """
        _lastUpdated (FHIR type: date)
        When the resource version last changed
        """
        _lastUpdated: SearchDate
        """
        _profile (FHIR type: uri)
        Profiles this resource claims to conform to
        """
        _profile: SearchString
        """
        _security (FHIR type: token)
        Security Labels applied to this resource
        """
        _security: SearchToken
        """
        _source (FHIR type: uri)
        Identifies where the resource comes from
        """
        _source: SearchString
        """
        _tag (FHIR type: token)
        Tags applied to this resource
        """
        _tag: SearchToken

        # search parameters for Patient
        """
        active (FHIR type: token)
        Whether the patient record is active
        """
        active: SearchToken
        """
        address (FHIR type: string)
        Multiple Resources: * [Patient](patient.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [Person](person.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [Practitioner](practitioner.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [RelatedPerson](relatedperson.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text
        """
        address: SearchString
        """
        address-city (FHIR type: string)
        Multiple Resources: * [Patient](patient.html): A city specified in an address* [Person](person.html): A city specified in an address* [Practitioner](practitioner.html): A city specified in an address* [RelatedPerson](relatedperson.html): A city specified in an address
        """
        address_city: SearchString
        """
        address-country (FHIR type: string)
        Multiple Resources: * [Patient](patient.html): A country specified in an address* [Person](person.html): A country specified in an address* [Practitioner](practitioner.html): A country specified in an address* [RelatedPerson](relatedperson.html): A country specified in an address
        """
        address_country: SearchString
        """
        address-postalcode (FHIR type: string)
        Multiple Resources: * [Patient](patient.html): A postalCode specified in an address* [Person](person.html): A postal code specified in an address* [Practitioner](practitioner.html): A postalCode specified in an address* [RelatedPerson](relatedperson.html): A postal code specified in an address
        """
        address_postalcode: SearchString
        """
        address-state (FHIR type: string)
        Multiple Resources: * [Patient](patient.html): A state specified in an address* [Person](person.html): A state specified in an address* [Practitioner](practitioner.html): A state specified in an address* [RelatedPerson](relatedperson.html): A state specified in an address
        """
        address_state: SearchString
        """
        address-use (FHIR type: token)
        Multiple Resources: * [Patient](patient.html): A use code specified in an address* [Person](person.html): A use code specified in an address* [Practitioner](practitioner.html): A use code specified in an address* [RelatedPerson](relatedperson.html): A use code specified in an address
        """
        address_use: SearchToken
        """
        birthdate (FHIR type: date)
        Multiple Resources: * [Patient](patient.html): The patients date of birth* [Person](person.html): The persons date of birth* [RelatedPerson](relatedperson.html): The Related Persons date of birth
        """
        birthdate: SearchDate
        """
        death-date (FHIR type: date)
        The date of death has been provided and satisfies this search value
        """
        death_date: SearchDate
        """
        deceased (FHIR type: token)
        This patient has been marked as deceased, or as a death date entered
        """
        deceased: SearchToken
        """
        email (FHIR type: token)
        Multiple Resources: * [Patient](patient.html): A value in an email contact* [Person](person.html): A value in an email contact* [Practitioner](practitioner.html): A value in an email contact* [PractitionerRole](practitionerrole.html): A value in an email contact* [RelatedPerson](relatedperson.html): A value in an email contact
        """
        email: SearchToken
        """
        family (FHIR type: string)
        Multiple Resources: * [Patient](patient.html): A portion of the family name of the patient* [Practitioner](practitioner.html): A portion of the family name
        """
        family: SearchString
        """
        gender (FHIR type: token)
        Multiple Resources: * [Patient](patient.html): Gender of the patient* [Person](person.html): The gender of the person* [Practitioner](practitioner.html): Gender of the practitioner* [RelatedPerson](relatedperson.html): Gender of the related person
        """
        gender: SearchToken
        """
        general-practitioner (FHIR type: reference)
        Patients nominated general practitioner, not the organization that manages the record
        """
        general_practitioner: SearchReference
        """
        given (FHIR type: string)
        Multiple Resources: * [Patient](patient.html): A portion of the given name of the patient* [Practitioner](practitioner.html): A portion of the given name
        """
        given: SearchString
        """
        identifier (FHIR type: token)
        A patient identifier
        """
        identifier: SearchToken
        """
        language (FHIR type: token)
        Language code (irrespective of use value)
        """
        language: SearchToken
        """
        link (FHIR type: reference)
        All patients linked to the given patient
        """
        link: SearchReference
        """
        name (FHIR type: string)
        A server defined search that may match any of the string fields in the HumanName, including family, give, prefix, suffix, suffix, and/or text
        """
        name: SearchString
        """
        organization (FHIR type: reference)
        The organization that is the custodian of the patient record
        """
        organization: SearchReference
        """
        phone (FHIR type: token)
        Multiple Resources: * [Patient](patient.html): A value in a phone contact* [Person](person.html): A value in a phone contact* [Practitioner](practitioner.html): A value in a phone contact* [PractitionerRole](practitionerrole.html): A value in a phone contact* [RelatedPerson](relatedperson.html): A value in a phone contact
        """
        phone: SearchToken
        """
        phonetic (FHIR type: string)
        Multiple Resources: * [Patient](patient.html): A portion of either family or given name using some kind of phonetic matching algorithm* [Person](person.html): A portion of name using some kind of phonetic matching algorithm* [Practitioner](practitioner.html): A portion of either family or given name using some kind of phonetic matching algorithm* [RelatedPerson](relatedperson.html): A portion of name using some kind of phonetic matching algorithm
        """
        phonetic: SearchString
        """
        telecom (FHIR type: token)
        Multiple Resources: * [Patient](patient.html): The value in any kind of telecom details of the patient* [Person](person.html): The value in any kind of contact* [Practitioner](practitioner.html): The value in any kind of contact* [PractitionerRole](practitionerrole.html): The value in any kind of contact* [RelatedPerson](relatedperson.html): The value in any kind of contact
        """
        telecom: SearchToken

        # miscellaneous parameters
        """
        return total number of records that meet this query
        """
        _total: TotalType
        """
        sort records by these fields.  The fields can be nested fields. Prepend with "-" to indicate descending sort
            Examples: ["id", "-meta.lastUpdated"]
        """
        _sort: [String]
        """
        limit records to this count.  Default is 10
        """
        _count: Int
        """
        page number to retrieve
        """
        _getpagesoffset: Int
    ): PatientBundle
}