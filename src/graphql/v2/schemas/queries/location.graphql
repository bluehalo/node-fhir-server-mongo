# This file is auto-generated by generate_classes so do not edit manually
# import Location from "../resources/location.graphql"

extend type Query {
    """
    Location
        Details and position information for a physical place where services are
    provided and resources and participants may be stored, found, contained, or
    accommodated.
        If the element is present, it must have either a @value, an @id, or extensions
    """
    location(

        # some old search parameters that we misspelled in the past so have to maintain backwards compatibility
        """
        list of ids to retrieve.  DEPRECATED: Use `_id`
        """
        id: [String]

        # search parameters for all resources
        """
        _id (FHIR type: token)
        Logical id of this artifact
        """
        _id: SearchString
        """
        _lastUpdated (FHIR type: date)
        When the resource version last changed
        """
        _lastUpdated: SearchDate
        """
        _profile (FHIR type: uri)
        Profiles this resource claims to conform to
        """
        _profile: SearchString
        """
        _security (FHIR type: token)
        Security Labels applied to this resource
        """
        _security: SearchToken
        """
        _source (FHIR type: uri)
        Identifies where the resource comes from
        """
        _source: SearchString
        """
        _tag (FHIR type: token)
        Tags applied to this resource
        """
        _tag: SearchToken

        # search parameters for Location
        """
        address (FHIR type: string)
        A (part of the) address of the location
        """
        address: SearchString
        """
        address-city (FHIR type: string)
        A city specified in an address
        """
        address_city: SearchString
        """
        address-country (FHIR type: string)
        A country specified in an address
        """
        address_country: SearchString
        """
        address-postalcode (FHIR type: string)
        A postal code specified in an address
        """
        address_postalcode: SearchString
        """
        address-state (FHIR type: string)
        A state specified in an address
        """
        address_state: SearchString
        """
        address-use (FHIR type: token)
        A use code specified in an address
        """
        address_use: SearchToken
        """
        endpoint (FHIR type: reference)
        Technical endpoints providing access to services operated for the location
        """
        endpoint: SearchReference
        """
        identifier (FHIR type: token)
        An identifier for the location
        """
        identifier: SearchToken
        """
        name (FHIR type: string)
        A portion of the locations name or alias
        """
        name: SearchString
        """
        near (FHIR type: special)
        Search for locations where the location.position is near to, or within a specified distance of, the provided coordinates expressed as [latitude]|[longitude]|[distance]|[units] (using the WGS84 datum, see notes).If the units are omitted, then kms should be assumed. If the distance is omitted, then the server can use its own discretion as to what distances should be considered near (and units are irrelevant)Servers may search using various techniques that might have differing accuracies, depending on implementation efficiency.Requires the near-distance parameter to be provided also
        """
        near: String
        """
        operational-status (FHIR type: token)
        Searches for locations (typically bed/room) that have an operational status (e.g. contaminated, housekeeping)
        """
        operational_status: SearchToken
        """
        organization (FHIR type: reference)
        Searches for locations that are managed by the provided organization
        """
        organization: SearchReference
        """
        partof (FHIR type: reference)
        A location of which this location is a part
        """
        partof: SearchReference
        """
        status (FHIR type: token)
        Searches for locations with a specific kind of status
        """
        status: SearchToken
        """
        type (FHIR type: token)
        A code for the type of location
        """
        type: SearchToken

        # miscellaneous parameters
        """
        return total number of records that meet this query
        """
        _total: TotalType
        """
        sort records by these fields.  The fields can be nested fields. Prepend with "-" to indicate descending sort
            Examples: ["id", "-meta.lastUpdated"]
        """
        _sort: [String]
        """
        limit records to this count.  Default is 10
        """
        _count: Int
        """
        page number to retrieve
        """
        _getpagesoffset: Int
    ): LocationBundle
}