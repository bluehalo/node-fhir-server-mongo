# This file is auto-generated by generate_classes so do not edit manually
{% macro lower_case_first_letter(text) %}
    {{- text[0]|lower}}{{text[1:] -}}
{% endmacro %}
{% macro upper_case_first_letter(text) %}
    {{- text[0]|upper}}{{text[1:] -}}
{% endmacro %}
{% for property in fhir_entity.properties %}
    {% if property.type_ | replace(".","") != fhir_entity.cleaned_name %}
{#    # {{ property.name }} ({{ property.type_ }})#}
        {% if property.is_code %}
# import code from "../simple_types/code.graphql"
{#        {% elif property.is_basic_type %}#}
{#    from spark_auto_mapper_fhir.fhir_types.{{ property.type_snake_case }} import {{ property.cleaned_type | replace(".","")}}#}
        {% elif property.reference_target_resources %}
{#            we replace this with the target resource below#}
        {% elif property.is_resource %}
# import {{ property.type_ | replace(".","") }} from "../resources/{{ lower_case_first_letter(property.type_snake_case) }}.graphql"
        {% elif property.is_extension %}
# import {{ property.type_ | replace(".","") }} from "../extensions/{{ lower_case_first_letter(property.type_snake_case) }}.graphql"
        {% elif property.fhir_type == "BackboneElement" %}
# import {{ property.type_ | replace(".","") }} from "../backbone_elements/{{ lower_case_first_letter(property.type_snake_case) }}.graphql"
        {% elif property.is_complex or property.fhir_type == "Element" %}
# import {{ property.cleaned_type | replace(".","") }} from "../complex_types/{{ lower_case_first_letter(property.type_snake_case) }}.graphql"
        {% elif property.type_snake_case in ["string", "boolean", "integer", "positiveInt"] %}
{# do nothing since this is a GraphQL type            #}
        {%  else %}
# import {{ property.type_ | replace(".","") }} from "../simple_types/{{ lower_case_first_letter(property.type_snake_case) }}.graphql"
        {% endif %}
        {% if property.reference_target_resources %}
{## Imports for References for {{ property.name }}#}
            {% for reference_target_resource in property.reference_target_resources %}
# import {{ reference_target_resource.cleaned_name }} from "../resources/{{ lower_case_first_letter(reference_target_resource.cleaned_name) }}.graphql"
            {% endfor %}
        {% endif %}
    {% endif %}
{% endfor %}

{% for property in fhir_entity.properties %}
{% if property.reference_target_resources -%}
    {% if property.reference_target_resources | length > 1  %}
union {{fhir_entity.cleaned_name}}{{ upper_case_first_letter(property.name) }} = {{ property.reference_target_resources_names | unique | join(" | ") }}
    {%  endif %}
{% endif -%}
{% endfor %}


type {{fhir_entity.cleaned_name}} {
    {% for property in fhir_entity.properties %}
        {{ property.name -}} {{ ': ' -}}
            {% if property.is_list -%}
                {{ '[' -}}
            {% endif -%}
            {% if property.cleaned_type == "Extension" %}
            {{- 'Extension' -}}
            {% elif property.is_code %}
            {{- 'code' -}}
            {% elif property.reference_target_resources -%}
                {% if property.reference_target_resources | length > 1  %}
                {{- fhir_entity.cleaned_name}}{{ upper_case_first_letter(property.name) -}}
                {% else %}
                {{- property.reference_target_resources_names [0] -}}
                {%  endif %}
            {% else %}
            {{- property.cleaned_type | replace(".","") -}}
            {%  endif %}
            {% if property.is_list -%}
                {{ ']' -}}
            {% endif -%}
            {% if not property.optional -%}
                {{- '!' -}}
            {% else -%}
                {{ '' -}}
            {% endif %}
            {{ '' }}
    {% endfor %}
}

extend type Query {
    {{  lower_case_first_letter(fhir_entity.cleaned_name) }}(id: String): [{{ fhir_entity.cleaned_name }}]
}
