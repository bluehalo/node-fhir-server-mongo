# This file is auto-generated by generate_classes so do not edit manually
# import Extension from "../extensions/extension.graphql"
# import base64Binary from "../simple_types/base64Binary.graphql"
# import canonical from "../simple_types/canonical.graphql"
# import code from "../simple_types/code.graphql"
# import date from "../simple_types/date.graphql"
# import dateTime from "../simple_types/dateTime.graphql"
# import decimal from "../simple_types/decimal.graphql"
# import id from "../simple_types/id.graphql"
# import instant from "../simple_types/instant.graphql"
# import markdown from "../simple_types/markdown.graphql"
# import oid from "../simple_types/oid.graphql"
# import time from "../simple_types/time.graphql"
# import unsignedInt from "../simple_types/unsignedInt.graphql"
# import uri from "../simple_types/uri.graphql"
# import url from "../simple_types/url.graphql"
# import uuid from "../simple_types/uuid.graphql"
# import Address from "../complex_types/address.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Annotation from "../complex_types/annotation.graphql"
# import Attachment from "../complex_types/attachment.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Coding from "../complex_types/coding.graphql"
# import ContactPoint from "../complex_types/contactPoint.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import HumanName from "../complex_types/humanName.graphql"
# import Identifier from "../complex_types/identifier.graphql"
# import Money from "../complex_types/money.graphql"
# import Period from "../complex_types/period.graphql"
# import Quantity from "../complex_types/quantity.graphql"
# import Range from "../complex_types/range.graphql"
# import Ratio from "../complex_types/ratio.graphql"
# import Resource from "../resources/resource.graphql"
# import SampledData from "../complex_types/sampledData.graphql"
# import Signature from "../complex_types/signature.graphql"
# import Timing from "../backbone_elements/timing.graphql"
# import ContactDetail from "../complex_types/contactDetail.graphql"
# import Contributor from "../complex_types/contributor.graphql"
# import DataRequirement from "../complex_types/dataRequirement.graphql"
# import Expression from "../complex_types/expression.graphql"
# import ParameterDefinition from "../complex_types/parameterDefinition.graphql"
# import RelatedArtifact from "../complex_types/relatedArtifact.graphql"
# import TriggerDefinition from "../complex_types/triggerDefinition.graphql"
# import UsageContext from "../complex_types/usageContext.graphql"
# import Dosage from "../backbone_elements/dosage.graphql"
# import Meta from "../complex_types/meta.graphql"


"""
ElementDefinition.Example
    Captures constraints on each element within the resource, profile, or
    extension.
    If the element is present, it must have a value for at least one of the
    defined elements, an @id referenced from the Narrative, or extensions
"""
type ElementDefinitionExample {
    """
    None
    """
    id: String        
    """
    May be used to represent additional information that is not part of the basic
    definition of the element. To make the use of extensions safe and manageable,
    there is a strict set of governance  applied to the definition and use of
    extensions. Though any implementer can define an extension, there is a set of
    requirements that SHALL be met as part of the definition of the extension.
    """
    extension: [Extension]        
    """
    May be used to represent additional information that is not part of the basic
    definition of the element and that modifies the understanding of the element
    in which it is contained and/or the understanding of the containing element's
    descendants. Usually modifier elements provide negation or qualification. To
    make the use of extensions safe and manageable, there is a strict set of
    governance applied to the definition and use of extensions. Though any
    implementer can define an extension, there is a set of requirements that SHALL
    be met as part of the definition of the extension. Applications processing a
    resource are required to check for modifier extensions.
    
    Modifier extensions SHALL NOT change the meaning of any elements on Resource
    or DomainResource (including cannot change the meaning of modifierExtension
    itself).
    """
    modifierExtension: [Extension]        
    """
    Describes the purpose of this example amoung the set of examples.
    """
    label: String!        
    """
    None
    """
    valueBase64Binary: base64Binary        
    """
    None
    """
    valueBoolean: Boolean        
    """
    None
    """
    valueCanonical: canonical        
    """
    None
    """
    valueCode: code        
    """
    None
    """
    valueDate: date        
    """
    None
    """
    valueDateTime: dateTime        
    """
    None
    """
    valueDecimal: decimal        
    """
    None
    """
    valueId: id        
    """
    None
    """
    valueInstant: instant        
    """
    None
    """
    valueInteger: Int        
    """
    None
    """
    valueMarkdown: markdown        
    """
    None
    """
    valueOid: oid        
    """
    None
    """
    valuePositiveInt: Int        
    """
    None
    """
    valueString: String        
    """
    None
    """
    valueTime: time        
    """
    None
    """
    valueUnsignedInt: unsignedInt        
    """
    None
    """
    valueUri: uri        
    """
    None
    """
    valueUrl: url        
    """
    None
    """
    valueUuid: uuid        
    """
    None
    """
    valueAddress: Address        
    """
    None
    """
    valueAge: Quantity        
    """
    None
    """
    valueAnnotation: Annotation        
    """
    None
    """
    valueAttachment: Attachment        
    """
    None
    """
    valueCodeableConcept: CodeableConcept        
    """
    None
    """
    valueCoding: Coding        
    """
    None
    """
    valueContactPoint: ContactPoint        
    """
    None
    """
    valueCount: Quantity        
    """
    None
    """
    valueDistance: Quantity        
    """
    None
    """
    valueDuration: Quantity        
    """
    None
    """
    valueHumanName: HumanName        
    """
    None
    """
    valueIdentifier: Identifier        
    """
    None
    """
    valueMoney: Money        
    """
    None
    """
    valuePeriod: Period        
    """
    None
    """
    valueQuantity: Quantity        
    """
    None
    """
    valueRange: Range        
    """
    None
    """
    valueRatio: Ratio        
    """
    None
    """
    valueReference: Resource        
    """
    None
    """
    valueSampledData: SampledData        
    """
    None
    """
    valueSignature: Signature        
    """
    None
    """
    valueTiming: Timing        
    """
    None
    """
    valueContactDetail: ContactDetail        
    """
    None
    """
    valueContributor: Contributor        
    """
    None
    """
    valueDataRequirement: DataRequirement        
    """
    None
    """
    valueExpression: Expression        
    """
    None
    """
    valueParameterDefinition: ParameterDefinition        
    """
    None
    """
    valueRelatedArtifact: RelatedArtifact        
    """
    None
    """
    valueTriggerDefinition: TriggerDefinition        
    """
    None
    """
    valueUsageContext: UsageContext        
    """
    None
    """
    valueDosage: Dosage        
    """
    None
    """
    valueMeta: Meta        
}