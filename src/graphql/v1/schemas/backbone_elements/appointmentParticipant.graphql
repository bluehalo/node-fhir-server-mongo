# This file is auto-generated by generate_classes so do not edit manually
# import Extension from "../extensions/extension.graphql"
# import CodeableConcept from "../complex_types/codeableConcept.graphql"
# import Patient from "../resources/patient.graphql"
# import Practitioner from "../resources/practitioner.graphql"
# import PractitionerRole from "../resources/practitionerRole.graphql"
# import RelatedPerson from "../resources/relatedPerson.graphql"
# import Device from "../resources/device.graphql"
# import HealthcareService from "../resources/healthcareService.graphql"
# import Location from "../resources/location.graphql"
# import code from "../simple_types/code.graphql"
# import Period from "../complex_types/period.graphql"

union AppointmentParticipantActor = Patient | Practitioner | PractitionerRole | RelatedPerson | Device | HealthcareService | Location

"""
Appointment.Participant
    A booking of a healthcare event among patient(s), practitioner(s), related
    person(s) and/or device(s) for a specific date/time. This may result in one or
    more Encounter(s).
"""
type AppointmentParticipant {
    """
    None
    """
    id: String        
    """
    May be used to represent additional information that is not part of the basic
    definition of the element. To make the use of extensions safe and manageable,
    there is a strict set of governance  applied to the definition and use of
    extensions. Though any implementer can define an extension, there is a set of
    requirements that SHALL be met as part of the definition of the extension.
    """
    extension: [Extension]        
    """
    May be used to represent additional information that is not part of the basic
    definition of the element and that modifies the understanding of the element
    in which it is contained and/or the understanding of the containing element's
    descendants. Usually modifier elements provide negation or qualification. To
    make the use of extensions safe and manageable, there is a strict set of
    governance applied to the definition and use of extensions. Though any
    implementer can define an extension, there is a set of requirements that SHALL
    be met as part of the definition of the extension. Applications processing a
    resource are required to check for modifier extensions.
    
    Modifier extensions SHALL NOT change the meaning of any elements on Resource
    or DomainResource (including cannot change the meaning of modifierExtension
    itself).
    """
    modifierExtension: [Extension]        
    """
    Role of participant in the appointment.
    """
    type: [CodeableConcept]        
    """
    A Person, Location/HealthcareService or Device that is participating in the
    appointment.
    """
    actor: AppointmentParticipantActor        
    """
    Whether this participant is required to be present at the meeting. This covers
    a use-case where two doctors need to meet to discuss the results for a
    specific patient, and the patient is not required to be present.
    """
    required: code        
    """
    Participation status of the actor.
    """
    status: code!        
    """
    Participation period of the actor.
    """
    period: Period        
}